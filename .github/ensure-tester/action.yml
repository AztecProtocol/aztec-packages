# Reusable setup workflow for CI tasks
name: Ensure Tester
description: "Ensures a tester EC2 machine is available to connect to for this test"

inputs:
  runner_type:
    required: true
  run:
    # command to run once tester available
    required: false
  username:
    required: false
  ttl:
    required: false
    description: "Time to live for the tester instance in minutes"
    default: 30
  spot_strategy:
    default: BestEffort
runs:
  # define an action, runs in OS of caller
  # ami-052a1e16394277fdf is an ubuntu 22.04.4 jammy
  using: composite
  steps:
    - name: Select Instance Type and AMI
      id: select_instance
      shell: bash
      run: |
        TYPE=${{ inputs.runner_type }}
        # Try to use spot for every runner type for now
        echo "spot_strategy=${{ inputs.spot_strategy }}" >> $GITHUB_OUTPUT
        if [ -n "${{ inputs.username }}" ]; then
          USERNAME="${{ inputs.username }}"
        fi
        echo "USERNAME=$USERNAME" >> $GITHUB_ENV
        echo "runner_label=$USERNAME-${{ github.jobs[github.job].name }}" >> $GITHUB_OUTPUT
        echo "runner_label=$USERNAME-${{ github.jobs[github.job].name }}" >> $GITHUB_OUTPUT
        echo "ami_id=ami-052a1e16394277fdf" >> $GITHUB_OUTPUT
        # no github runners, 'bare spot' in action code
        echo "runner_concurrency=0" >> $GITHUB_OUTPUT
        echo "ttl=${{ inputs.ttl }}" >> $GITHUB_OUTPUT
        SIZE=large
        if [[ $TYPE == 4core-* ]]; then
          SIZE=xlarge
        elif [[ $TYPE == 8core-* ]]; then
          SIZE=2xlarge
        elif [[ $TYPE == 16core-* ]]; then
          SIZE=4xlarge
        elif [[ $TYPE == 32core-* ]]; then
          SIZE=8xlarge
        elif [[ $TYPE == 64core-* ]]; then
          SIZE=16xlarge
        elif [[ $TYPE == 128core-* ]]; then
          SIZE=32xlarge
        fi
        INSTANCE_TYPES="m6a.$SIZE m6in.$SIZE r6a.$SIZE r6i.$SIZE r6in.$SIZE"
        if [[ $TYPE == *high-memory* ]]; then
          INSTANCE_TYPES="r6a.$SIZE r6i.$SIZE r6in.$SIZE"
        fi
        echo "instance_type=$INSTANCE_TYPES" >> $GITHUB_OUTPUT

    - name: Start Tester
      uses: ./.github/spot-runner-action
      with:
        # inputs:
        runner_label: ${{ steps.select_instance.outputs.runner_label }}
        subaction: start
        github_token: ${{ env.GH_SELF_HOSTED_RUNNER_TOKEN }}
        aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        ec2_key: ${{ env.BUILD_INSTANCE_SSH_KEY }}
        client_token: ""
        # constants:
        runner_concurrency: ${{ steps.select_instance.outputs.runner_concurrency }}
        ec2_instance_type: ${{ steps.select_instance.outputs.instance_type }}
        ec2_ami_id: ${{ steps.select_instance.outputs.ami_id }}
        ec2_spot_instance_strategy: ${{ steps.select_instance.outputs.spot_strategy }}
        ec2_instance_ttl: ${{ steps.select_instance.outputs.ttl }} # refreshed by jobs if runner_concurrency > 0
        aws_region: us-east-2
        ec2_subnet_id: subnet-4cfabd25
        ec2_security_group_id: sg-0ccd4e5df0dcca0c9
        ec2_key_name: "build-instance"
        ec2_instance_tags: '[]'

    - name: Ensure Tester Cleanup
      uses: gacts/run-and-post-run@v1
      with:
        post: scripts/run_on_tester "sudo shutdown now" || true

    - name: Run On Tester
      id: test
      shell: bash
      env:
        INPUT: ${{ inputs.run }}
      run: |
        .github/ensure-tester/run ${{ steps.select_instance.outputs.ttl }}

    - name: Re-run with On-Demand
      uses: ./.github/ensure-tester
      if: steps.test.outputs.exit_code == '155' && inputs.spot_strategy != 'None'
      with:
        username: ${{ inputs.username }}
        runner_type: ${{ inputs.runner_type}}
        # spot_strategy: None
        ttl: ${{ inputs.ttl }}
        run: ${{ inputs.run }}

    # If we aren't rerunning, report exit code
    - name: Report Exit Code
      shell: bash
      if: steps.test.outputs.exit_code != '155' || inputs.spot_strategy == 'None'
      run: exit ${{ steps.test.outputs.exit_code }}
