name: release-please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  release-please:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release-pr: ${{ steps.release.outputs.pr }}
      release-version: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Run Release Please
        id: release
        uses: googleapis/release-please-action@7d28262f14160787a44a6be36146a18e6f575a3f
        with:
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
          config-file: .github/release-please-${{ github.ref_name }}.json
          target-branch: ${{ github.ref_name }}

  update-docs:
    name: Update docs
    env:
      GITHUB_TOKEN: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release-pr }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ fromJSON(needs.release-please.outputs.release-pr).headBranchName }}
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}

      - name: Run corepack enable
        run: corepack enable

      - name: Configure Git
        run: |
          git config --global user.name AztecBot
          git config --global user.email tech@aztecprotocol.com

      - name: Query new version
        id: version
        run: |
          # Extract version from .release-please-manifest.json
          AZTEC_VERSION=$(jq -r '."."' .release-please-manifest.json)

          # Add v prefix
          AZTEC_VERSION="v$AZTEC_VERSION"

          echo "semver=$AZTEC_VERSION" >> $GITHUB_OUTPUT

      - name: Cut Aztec Docs version
        working-directory: ./docs
        run: |
          COMMIT_TAG=${{ steps.version.outputs.semver }}
          # need to specify at least one version in versions.json for it to build
          echo "[ \"$(./scripts/get_current_version.sh)\" ]" > versions.json
          yarn
          COMMIT_TAG=$COMMIT_TAG yarn build
          COMMIT_TAG=$COMMIT_TAG yarn docusaurus docs:version ${{ steps.version.outputs.semver }}

      - name: Update Aztec Docs versions.json with new version
        working-directory: ./docs/scripts
        run: |
          ./update_versions.sh

      - name: Commit new Aztec Docs version
        run: |
          git add .
          git commit -m "chore(docs): cut new aztec docs version for tag ${{ steps.version.outputs.semver }}"
          git push

      - name: Cut Barretenberg Docs version
        working-directory: ./barretenberg/docs
        run: |
          COMMIT_TAG=${{ steps.version.outputs.semver }}
          # need to specify at least one version in versions.json for it to build
          echo "[ \"$(./scripts/get_current_version.sh)\" ]" > versions.json
          yarn
          COMMIT_TAG=$COMMIT_TAG yarn build
          COMMIT_TAG=$COMMIT_TAG yarn docusaurus docs:version ${{ steps.version.outputs.semver }}

      - name: Update Barretenberg Docs versions.json with new version
        working-directory: ./barretenberg/docs/scripts
        run: |
          ./update_versions.sh

      - name: Commit new Barretenberg Docs version
        run: |
          git add .
          git commit -m "chore(docs): cut new barretenberg docs version for tag ${{ steps.version.outputs.semver }}"
          git push
