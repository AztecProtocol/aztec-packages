name: Recreate Merge Train Queue

on:
  pull_request:
    types: [closed]

jobs:
  recreate-queue:
    name: Recreate merge train PR
    runs-on: ubuntu-latest
    # Only run when the PR was merged *and* its HEAD branch is merge-train/**
    if: ${{ github.event.pull_request.merged &&
            startsWith(github.event.pull_request.head.ref, 'merge-train/') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name AztecBot
          git config --global user.email tech@aztecprotocol.com

      - name: Create new merge-train PR
        env:
          GH_TOKEN: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
        run: |
          # The merge-train branch is the PRâ€™s *head* branch (e.g. merge-train/main)
          MERGE_TRAIN_BRANCH="${{ github.event.pull_request.head.ref }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"

          # Make sure a merge commit gets into master.
          git fetch origin "$BASE_BRANCH"
          git fetch origin "$MERGE_TRAIN_BRANCH"
          git checkout "$BASE_BRANCH"
          git reset --hard origin/"$BASE_BRANCH"
          git merge -X ours origin/"$MERGE_TRAIN_BRANCH" -m "Merge $MERGE_TRAIN_BRANCH history."
          git push origin "$BASE_BRANCH"

          git checkout "$MERGE_TRAIN_BRANCH"
          git reset --hard "$BASE_BRANCH"

          # Start with an empty commit

          # Push & open the PR
          git push origin "$MERGE_TRAIN_BRANCH"

          gh pr create \
            --base "$BASE_BRANCH" \
            --head "$MERGE_TRAIN_BRANCH" \
            --title "feat: $MERGE_TRAIN_BRANCH" \
            --body "This is an automated merge-train PR with no commits."

name: Recreate Merge-Train Queue

on:
  pull_request:
    types: [closed]

jobs:
  recreate:
    if: ${{ github.event.pull_request.merged &&
            startsWith(github.event.pull_request.head.ref, 'merge-train/') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}

      - env:
          GH_TOKEN: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          # --- config --------------------------------------------------------
          git config --global user.name  AztecBot
          git config --global user.email tech@aztecprotocol.com
          MT="${{ github.event.pull_request.head.ref }}"   # merge-train/*
          BASE="${{ github.event.pull_request.base.ref }}" # usually main
          SHA=$(git rev-parse "$MT")                       # save old head

          # --- rebuild merge-train branch ------------------------------------
          git switch "$MT"
          git reset --hard "origin/$BASE"
          git commit --allow-empty -m "[empty] Start merge-train. Choo choo."
          git push -f origin "$MT"
          gh pr create --base "$BASE" --head "$MT" \
                       --title "feat: $MT" \
                       --body  "This is a merge-train with no commits."

          # --- fast-forward every other open PR that still merges cleanly ----
          for BR in $(gh pr list --state open --base "$BASE" \
                      --json headRefName --jq '.[].headRefName' \
                      | grep -v "^${MT}$"); do
            git fetch origin "$BR"
            git switch "$BR"
            if git merge -q "$SHA" && git merge -q -X ours "origin/$BASE"; then
              git push origin "$BR"
            else
              git merge --abort || true
            fi
          done

