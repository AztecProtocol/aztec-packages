name: Merge-Train Recreate

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      merge_train_branch:
        description: 'Merge train branch to recreate (e.g., merge-train/docs)'
        required: true
        type: string
      base_branch:
        description: 'Base branch (e.g., next)'
        required: true
        type: string
        default: 'next'

jobs:
  recreate:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'merge-train/')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "AztecBot"
          git config --global user.email "tech@aztecprotocol.com"

      - name: Recreate branch
        run: |
          # Determine branch names based on event type
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            MERGE_TRAIN_BRANCH="${{ github.event.inputs.merge_train_branch }}"
            BASE_BRANCH="${{ github.event.inputs.base_branch }}"
            # For manual dispatch, use current SHA and get latest from base branch
            HEAD_COMMIT_SHA="${{ github.sha }}"
            BASE_COMMIT_SHA=$(git rev-parse origin/$BASE_BRANCH)
          else
            MERGE_TRAIN_BRANCH="${{ github.event.pull_request.head.ref }}"
            BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
            HEAD_COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
            BASE_COMMIT_SHA="${{ github.event.pull_request.merge_commit_sha }}"
          fi

          # Use aztecbot token for all operations including PR creation
          GH_TOKEN=${{ secrets.AZTEC_BOT_GITHUB_TOKEN }} \
          ./scripts/merge-train/recreate-branch.sh \
            "$MERGE_TRAIN_BRANCH" \
            "$BASE_BRANCH" \
            "$BASE_COMMIT_SHA" \
            "$HEAD_COMMIT_SHA"
