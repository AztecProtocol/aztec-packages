name: Recreate Merge-Train Queue

on:
  pull_request:
    types: [closed]

jobs:
  recreate:
    if: ${{ github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'merge-train/') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}


      - name: Configure Git
        run: |
          git config --global user.name AztecBot
          git config --global user.email tech@aztecprotocol.com

      - name: Recreate branch
        env:
          GH_TOKEN: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
        run: |
          set -xeuo pipefail

          # --- config --------------------------------------------------------
          git config --global user.name  AztecBot
          git config --global user.email tech@aztecprotocol.com
          MT="${{ github.event.pull_request.head.ref }}"   # merge-train/*
          BASE="${{ github.event.pull_request.base.ref }}" # usually main
          git fetch origin "$MT"
          SHA=$(git rev-parse "$MT")                       # save old head

          # --- rebuild merge-train branch ------------------------------------
          git switch "$MT"
          git reset --hard "origin/$BASE"
          git commit --allow-empty -m "[empty] Start merge-train. Choo choo."
          git push -f origin "$MT"
          gh pr create --base "$BASE" --head "$MT" \
                       --title "feat: $MT" \
                       --body  "See [merge-train-readme.md](https://github.com/${{ github.repository }}/blob/next/.github/workflows/merge-train-readme.md).\nThis is a merge-train with no commits."

          # --- fast-forward every other open PR that still merges cleanly ----
          for BR in $(gh pr list --state open --base "$BASE" \
                      --json headRefName --jq '.[].headRefName' \
                      | grep -v "^${MT}$"); do
            git fetch origin "$BR"
            git switch "$BR"
            if git merge -q "$SHA" && git merge -q -X ours "origin/$BASE"; then
              git push origin "$BR"
            else
              git merge --abort || true
            fi
          done

