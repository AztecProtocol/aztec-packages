name: Team Merge Train

on:
  schedule:
    # Daily at 2 AM UTC
    - cron: '0 2 * * *'
  
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'merge'
        type: choice
        options:
          - merge
          - update
          - recreate
      branch:
        description: 'Team branch to operate on'
        required: false
        default: 'feat/bb-changes'
  
  pull_request:
    types: [labeled]
    branches: [next]

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  BASE_BRANCH: next

concurrency:
  group: team-merge-train-${{ matrix.branch || github.event.inputs.branch }}
  cancel-in-progress: false

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      action: ${{ steps.check.outputs.action }}
      branches: ${{ steps.check.outputs.branches }}
    steps:
      - name: Check trigger
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "action=merge" >> $GITHUB_OUTPUT
            echo 'branches=["feat/bb-changes"]' >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
            echo 'branches=["${{ github.event.inputs.branch }}"]' >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.label.name }}" == "ready-for-merge" ]]; then
            # Check if this is one of our team branches
            BRANCH="${{ github.event.pull_request.head.ref }}"
            if [[ "$BRANCH" == "feat/bb-changes" ]]; then
              echo "should_run=true" >> $GITHUB_OUTPUT
              echo "action=merge" >> $GITHUB_OUTPUT
              echo "branches=[\"$BRANCH\"]" >> $GITHUB_OUTPUT
            else
              echo "should_run=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  manage-branch:
    needs: check-trigger
    if: needs.check-trigger.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ${{ fromJson(needs.check-trigger.outputs.branches) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --global user.name "aztec-bot"
          git config --global user.email "bot@aztecprotocol.com"

      - name: Execute action
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTION: ${{ needs.check-trigger.outputs.action }}
          TEAM_BRANCH: ${{ matrix.branch }}
        run: |
          case "$ACTION" in
            merge)
              ./scripts/ci/manage_team_branch.sh update || true
              ./scripts/ci/manage_team_branch.sh merge
              ;;
            update)
              ./scripts/ci/manage_team_branch.sh update
              ;;
            recreate)
              ./scripts/ci/manage_team_branch.sh recreate
              ;;
            *)
              echo "Unknown action: $ACTION"
              exit 1
              ;;
          esac

      - name: Recreate branch after merge
        if: needs.check-trigger.outputs.action == 'merge'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TEAM_BRANCH: ${{ matrix.branch }}
        run: |
          # Wait for merge to complete
          sleep 30
          
          # Check if the PR was actually merged
          PR_STATE=$(gh pr view "$TEAM_BRANCH" --json state --jq '.state' 2>/dev/null || echo "UNKNOWN")
          
          if [[ "$PR_STATE" == "MERGED" ]]; then
            echo "PR was merged, recreating branch..."
            ./scripts/ci/manage_team_branch.sh recreate
          else
            echo "PR was not merged (state: $PR_STATE), skipping recreation"
          fi

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Team Merge Train Failed: ${{ matrix.branch }}`,
              body: `The team merge train workflow failed during ${context.payload.inputs?.action || 'scheduled merge'}.
              
              **Branch:** ${{ matrix.branch }}
              **Workflow run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
              
              Please investigate and resolve manually.`,
              labels: ['bug', 'team-merge-train']
            });
            console.log(`Created issue #${issue.data.number}`);