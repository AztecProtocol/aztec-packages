name: Aztec Network Test

on:
  push:
    branches:
      - 10247-feat-test-release-network-via-ci-workflow
  workflow_dispatch:
    inputs:
      namespace:
        description: The namespace to deploy to, e.g. smoke
        required: true
      test:
        description: The test to run, e.g. spartan/smoke.test.ts
        required: true
      aztec_e2e_docker_image:
        description: The Aztec E2E Docker image to use, e.g. aztecprotocol/end-to-end:da809c58290f9590836f45ec59376cbf04d3c4ce-x86_64
        required: true

jobs:
  network_test:
    # This job will run on Ubuntu
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }} # Only one job per branch
      cancel-in-progress: false # Allow previous deployment to complete to avoid corruption

    # Set up a variable based on the branch name
    env:
      TEST_DOCKER_IMAGE: ${{ inputs.aztec_e2e_docker_image || 'iamjustmitch/end-to-end:7e19b3991ca34bcf9dd43284d4d21ded87824366' }}
      NAMESPACE: ${{ inputs.namespace || 'smoke' }}
      TEST: ${{ inputs.test || 'spartan/smoke.test.ts' }}
      CHART_PATH: ./spartan/aztec-network
      CLUSTER_NAME: aztec-gke
      REGION: us-west1-a
      GKE_CLUSTER_CONTEXT: gke_testnet-440309_us-west1-a_aztec-gke

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure kubectl with GKE cluster
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }}

      - name: Run test
        run: |

          # Find 3 free ports between 9000 and 10000
          FREE_PORTS=$(comm -23 <(seq 9000 10000 | sort) <(ss -Htan | awk '{print $4}' | cut -d':' -f2 | sort -u) | shuf | head -n 3)

          # Extract the free ports from the list
          PXE_PORT=$(echo $FREE_PORTS | awk '{print $1}')
          ANVIL_PORT=$(echo $FREE_PORTS | awk '{print $2}')
          METRICS_PORT=$(echo $FREE_PORTS | awk '{print $3}')

          export GRAFANA_PASSWORD=$(kubectl get secrets -n metrics metrics-grafana -o jsonpath='{.data.admin-password}' | base64 --decode)

          docker run --rm --network=host \
            -v ~/.kube:/root/.kube \
            -e K8S=true \
            -e INSTANCE_NAME="spartan" \
            -e SPARTAN_DIR="/usr/src/spartan" \
            -e NAMESPACE=${{ env.NAMESPACE }} \
            -e HOST_PXE_PORT=$PXE_PORT \
            -e CONTAINER_PXE_PORT=8081 \
            -e HOST_ETHEREUM_PORT=$ANVIL_PORT \
            -e CONTAINER_ETHEREUM_PORT=8545 \
            -e HOST_METRICS_PORT=$METRICS_PORT \
            -e CONTAINER_METRICS_PORT=80 \
            -e GRAFANA_PASSWORD=$GRAFANA_PASSWORD \
            -e DEBUG="aztec:*" \
            -e LOG_JSON=1 \
            -e LOG_LEVEL=debug \
             ${{ env.TEST }}
