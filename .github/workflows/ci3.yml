# CI for Aztec. At a high-level, runs ./bootstrap.sh ci in root. See root README.md for more details.
name: CI3

on:
  workflow_dispatch:
  push:
    branches:
      - master
  # For AztecProtocol devs. Allows editing workflow files.
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  # For external devs. Workflow file edits won't take effect in the PR.
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, labeled]

concurrency:
  # On master (handled by push event) the group id is the unique run_id so we get parallel runs.
  # On PR's the group id is the ref_name so only 1 can run at a time.
  group: ci3-${{ github.event_name == 'push' && github.run_id || github.ref_name }}
  cancel-in-progress: true

jobs:
  ci-amd64:
    runs-on: ubuntu-latest
    # condition:
    #   - Always allow 'push' and 'workflow_dispatch' jobs.
    #   - Otherwise, only run pull_request events on internal PRs and pull_request_target on external PRs.
    #     Then, we must also have the correct label/draft conditions.
    if: >
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (
        (
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
          (github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository)
        ) &&
        (
          (github.event.action != 'labeled' && !github.event.pull_request.draft) ||
          (github.event.action == 'labeled' && github.event.label.name == 'trigger-workflow')
        )
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # The commit to checkout.  We want our actual commit, and not the result of merging the PR to the target.
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup
        run: |
          # Ensure we can SSH into the spot instances we request.
          mkdir -p ~/.ssh
          echo ${{ secrets.BUILD_INSTANCE_SSH_KEY }} | base64 --decode > ~/.ssh/build_instance_key
          chmod 600 ~/.ssh/build_instance_key
      - name: Run
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCH: amd64
          LOG_ID: ${{ github.run_id }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          ./ci.sh ec2
          # ./ci3/cache_download barretenberg-bench-results-$(git rev-parse HEAD).tar.gz
      # - name: Store barretenberg benchmark result
      #   if: github.event_name == 'push'
      #   continue-on-error: true
      #   uses: benchmark-action/github-action-benchmark@4de1bed97a47495fc4c5404952da0499e31f5c29
      #   with:
      #     name: C++ Benchmark
      #     tool: "googlecpp"
      #     output-file-path: ./bench-out/bench.json
      #     github-token: ${{ secrets.AZTEC_BOT_GITHUB_TOKEN }}
      #     auto-push: true
      #     alert-threshold: "105%"
      #     comment-on-alert: true
      #     fail-on-alert: false
      #     alert-comment-cc-users: "@ludamad @codygunton"
      #     max-items-in-chart: 50

  ci-arm64:
    runs-on: ubuntu-latest
    # condition:
    #   - Always allow 'push' and 'workflow_dispatch' jobs.
    #   - Otherwise, only run pull_request events on internal PRs and pull_request_target on external PRs.
    #     Then, we must also have the correct label/draft conditions.
    #     **IMPORTANT** Then, unlike ci-amd64, if we aren't labeled 'arm64-ci', do nothing.
    if: >
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (
        (
          (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
          (github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository)
        ) &&
        (
          (github.event.action != 'labeled' && !github.event.pull_request.draft) ||
          (github.event.action == 'labeled' && github.event.label.name == 'trigger-workflow')
        ) &&
        contains(github.event.pull_request.labels.*.name, 'arm64-ci')
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # The commit to checkout.  We want our actual commit, and not the result of merging the PR to the target.
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup
        run: |
          # Ensure we can SSH into the spot instances we request.
          mkdir -p ~/.ssh
          echo ${{ secrets.BUILD_INSTANCE_SSH_KEY }} | base64 --decode > ~/.ssh/build_instance_key
          chmod 600 ~/.ssh/build_instance_key
      - name: Run
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ARCH: arm64
          LOG_ID: ${{ github.run_id }}
        run: |
          ./ci.sh ec2
