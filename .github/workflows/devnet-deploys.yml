name: Deploy to devnet
on:
  push:
    branches: [devnet]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}
  DEPLOY_TAG: devnet
  FILE_PATH: ./l1-contracts/addresses.txt
  L1_CHAIN_ID: 677692
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # TF Vars
  TF_VAR_DOCKERHUB_ACCOUNT: aztecprotocol
  TF_VAR_L1_CHAIN_ID: 677692
  TF_VAR_BOOTNODE_1_PRIVATE_KEY: ${{ secrets.BOOTNODE_1_PRIVATE_KEY }}
  TF_VAR_BOOTNODE_2_PRIVATE_KEY: ${{ secrets.BOOTNODE_2_PRIVATE_KEY }}
  TF_VAR_SEQ_1_PUBLISHER_PRIVATE_KEY: ${{ secrets.SEQ_1_PUBLISHER_PRIVATE_KEY }}
  TF_VAR_SEQ_2_PUBLISHER_PRIVATE_KEY: ${{ secrets.SEQ_2_PUBLISHER_PRIVATE_KEY }}
  TF_VAR_DEPLOY_TAG: devnet
  TF_VAR_API_KEY: ${{ secrets.FORK_API_KEY }}
  TF_VAR_FORK_MNEMONIC: ${{ secrets.FORK_MNEMONIC }}
  TF_VAR_INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}

jobs:
  setup:
    uses: ./.github/workflows/setup-runner.yml
    with:
      username: master
      runner_type: builder-x86
    secrets: inherit

  build:
    needs: setup
    runs-on: ${{ github.actor }}-x86
    outputs:
      l1_contracts_changed: ${{ steps.check_l1_changes.outputs.result }}
      mainnet_fork_changed: ${{ steps.check_fork_changes.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ env.GIT_COMMIT }}"
          fetch-depth: 0
      - uses: ./.github/ci-setup-action
        with:
          concurrency_key: build-release-artifacts-${{ github.actor }}
          dockerhub_password: "${{ secrets.DOCKERHUB_PASSWORD }}"
      - name: "Build & Push aztec images"
        timeout-minutes: 40
        # Run the build steps for each image with version and arch, push to dockerhub
        run: |
          earthly-ci \
          --no-output --push ./yarn-project+export-aztec-arch --DIST_TAG=${{ env.DEPLOY_TAG }}

      - name: Check if L1 contracts need deployment
        id: check_l1_changes
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const changedFiles = execSync('git diff --name-only ${{ github.event.before }} ${{ github.sha }}').toString().split('\n');
            const fileChanged = changedFiles.some(file => file.startsWith('l1-contracts'));
            return fileChanged

      - name: Check if mainnet fork needs deployment
        id: check_fork_changes
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const changedFiles = execSync('git diff --name-only ${{ github.event.before }} ${{ github.sha }}').toString().split('\n');
            const fileChanged = changedFiles.some(file => file.startsWith('iac/mainnet-fork'));
            return fileChanged

      - name: Build & push mainnet fork image
        if: steps.check_fork_changes.outputs.result == 'true'
        run: |
          earthly-ci \
          --no-output --push ./iac/mainnet-fork+export-mainnet-fork --DIST_TAG=${{ env.DEPLOY_TAG }}

  terraform_deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ env.GIT_COMMIT }}"
          fetch-depth: 0
      - uses: ./.github/ci-setup-action
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Deploy mainnet fork
        if: needs.build.outputs.mainnet_fork_changed == 'true'
        working-directory: ./iac/mainnet-fork/terraform
        run: |
          terraform init -input=false -backend-config="key=${{ env.DEPLOY_TAG }}/mainnet-fork"
          terraform apply -input=false -auto-approve -replace="aws_ecs_service.aztec_mainnet_fork" -replace="aws_efs_file_system.aztec_mainnet_fork_data_store"

      - name: Wait for mainnet fork deployment
        if: needs.build.outputs.mainnet_fork_changed == 'true'
        run: |
          ./.github/scripts/wait_for_fork.sh ${{ env.DEPLOY_TAG }} ${{ secrets.FORK_API_KEY }}

      - name: Deploy L1 Contracts
        if: needs.build.outputs.l1_contracts_changed == 'true' || needs.build.outputs.mainnet_fork_changed == 'true'
        run: |
          docker pull aztecprotocol/aztec:${{ env.DEPLOY_TAG }}
          docker run aztecprotocol/aztec:${{ env.DEPLOY_TAG }} deploy-l1-contracts \
            --private-key ${{ secrets.SEQ_1_PUBLISHER_PRIVATE_KEY }} \
            --rpc-url https://${{ env.DEPLOY_TAG }}-mainnet-fork.aztec.network:8545/${{ secrets.FORK_API_KEY }} \
            --l1-chain-id ${{ env.L1_CHAIN_ID }} \
            | tee ${{ env.FILE_PATH }}
          ./.github/scripts/extract_l1_addresses.sh ${{ env.FILE_PATH }}

      - name: Apply l1-contracts Terraform
        if: needs.build.outputs.l1_contracts_changed == 'true' || needs.build.outputs.mainnet_fork_changed == 'true'
        working-directory: ./l1-contracts/terraform
        run: |
          terraform init -input=false -backend-config="key=${{ env.DEPLOY_TAG }}/l1-contracts"
          terraform apply -input=false -auto-approve

      - name: Deploy P2P Bootstrap Nodes
        working-directory: ./yarn-project/p2p-bootstrap/terraform
        run: |
          terraform init -input=false -backend-config="key=${{ env.DEPLOY_TAG }}/p2p-bootstrap"
          terraform apply -input=false -auto-approve

      - name: Init Aztec Node Terraform
        working-directory: ./yarn-project/aztec/terraform/node
        run: |
          terraform init -input=false -backend-config="key=${{ env.DEPLOY_TAG }}/aztec-node"

      - name: Taint node filesystem if L1 contracts are redeployed
        if: needs.build.outputs.l1_contracts_changed == 'true'
        working-directory: ./yarn-project/aztec/terraform/node
        run: |
          terraform taint aws_efs_file_system.node_data_store

      - name: Deploy Aztec Nodes
        working-directory: ./yarn-project/aztec/terraform/node
        run: |
          terraform apply -input=false -auto-approve

      - name: Deploy Provers
        working-directory: ./yarn-project/aztec/terraform/prover
        run: |
          terraform init -input=false -backend-config="key=${{ env.DEPLOY_TAG }}/prover"
          terraform apply -input=false -auto-approve
