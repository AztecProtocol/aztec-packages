name: Docs Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  docs-pr:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Enable Corepack
        run: corepack enable

      - name: Generate directory hashes
        id: dir-hashes
        run: |
          echo "noir_hash=$(./noir/bootstrap.sh hash)" >> $GITHUB_OUTPUT
          echo "barretenberg_hash=$(./barretenberg/bootstrap.sh hash)" >> $GITHUB_OUTPUT
          echo "l1_contracts_hash=$(./l1-contracts/bootstrap.sh hash)" >> $GITHUB_OUTPUT
          echo "yarn_project_hash=$(./yarn-project/bootstrap.sh hash)" >> $GITHUB_OUTPUT

      - name: Restore Noir cache
        id: cache-noir
        uses: actions/cache@v4
        with:
          path: ./noir
          key: noir-build-${{ runner.os }}-${{ steps.dir-hashes.outputs.noir_hash }}
          restore-keys: |
            noir-build-${{ runner.os }}-${{ steps.dir-hashes.outputs.noir_hash }}

      - name: Restore Barretenberg cache
        id: cache-barretenberg
        uses: actions/cache@v4
        with:
          path: ./barretenberg
          key: barretenberg-build-${{ runner.os }}-${{ steps.dir-hashes.outputs.barretenberg_hash }}
          restore-keys: |
            barretenberg-build-${{ runner.os }}-${{ steps.dir-hashes.outputs.barretenberg_hash }}

      - name: Restore L1 contracts cache
        id: cache-l1-contracts
        uses: actions/cache@v4
        with:
          path: ./l1-contracts
          key: l1-contracts-${{ runner.os }}-${{ steps.dir-hashes.outputs.l1_contracts_hash }}
          restore-keys: |
            l1-contracts-${{ runner.os }}-${{ steps.dir-hashes.outputs.l1_contracts_hash }}

      - name: Restore Yarn project cache
        id: cache-yarn-project
        uses: actions/cache@v4
        with:
          path: ./yarn-project
          key: yarn-project-${{ runner.os }}-${{ steps.dir-hashes.outputs.yarn_project_hash }}
          restore-keys: |
            yarn-project-${{ runner.os }}-${{ steps.dir-hashes.outputs.yarn_project_hash }}

      - name: Build dependencies
        run: |
          if [[ "${{ steps.cache-noir.outputs.cache-hit }}" != 'true' ]]; then
            echo "Building Noir (cache miss)"
            ./noir/bootstrap.sh fast
          fi
          if [[ "${{ steps.cache-barretenberg.outputs.cache-hit }}" != 'true' ]]; then
            echo "Building Barretenberg (cache miss)"
            ./barretenberg/bootstrap.sh fast
          fi
          if [[ "${{ steps.cache-l1-contracts.outputs.cache-hit }}" != 'true' ]]; then
            echo "Building L1 contracts (cache miss)"
            ./l1-contracts/bootstrap.sh fast
          fi
          if [[ "${{ steps.cache-yarn-project.outputs.cache-hit }}" != 'true' ]]; then
            echo "Building Yarn project (cache miss)"
            ./yarn-project/bootstrap.sh fast
          fi

      - name: Deploy docs
        working-directory: ./docs
        run: |
          echo "docs release preview"
          yarn install
          yarn build

          if ! deploy_output=$(yarn netlify deploy --site aztec-docs-dev --prod 2>&1); then
            echo "Netlify deploy failed with error:"
            echo "$deploy_output"
            exit 1
          fi
