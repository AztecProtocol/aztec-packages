# Describes tests that we either:
#   - Outright skip.
#   - Run and alert owners on failure.
# To outright skip a test add a "skip: true" property.
# Only do this for tests that are currently expected to fail constantly and the noise is unbearable!
# Otherwise, tests must have owner(s). Owners are identified by their Slack id, (profile, three dots, copy member id).
# If there is no owner for failed test the build will fail, regardless of if it matches in this file.
# When a failing test matches one or more of the "regex" properties below,
# a message is sent to slack channel #aztec3-ci tagging the owners.
# If an optional error_regex is provided, the output file must match for the test to be considered a flake.

names:
  - adam: &adam "U04BM8H25NJ"
  - alex: &alex "U05QWV669JB"
  - charlie: &charlie "UKUMA5J7K"
  - grego: &grego "U0689QRCE9L"
  - lasse: &lasse "U03E5SYLY3Z"
  - leila: &leila "UBLTU1NJ3"
  - luke: &luke "U03JYU7AQET"
  - mitch: &mitch "U06AY5G1NRK"
  - palla: &palla "U04TPBU26E8"
  - phil: &phil "U02G4KAD57Y"
  - sean: &sean "U04DT239VQU"
  - tom: &tom "U04LLT331NK"
  - sergei: &sergei "U05RR81391B"

tests:
  # barretenberg
  #
  # Rare. But I saw it happen twice in 10 CI runs. Then twice in 10000 mainframe runs. Today I can't reproduce.
  # Grind with: seq 1 10000 | parallel --bar "barretenberg/cpp/scripts/run_test.sh join_split_example_tests join_split_tests.test_defi_deposit_second_bridge_output_in_use_and_same_virtual_bridge_output_asset_ids >/dev/null"
  # Logic failed: field_t::range_constraint
  # /home/aztec-dev/aztec-packages/barretenberg/cpp/src/barretenberg/examples/join_split/join_split.test.cpp:1735: Failure
  # Value of: result.valid
  #   Actual: false
  # Expected: true
  - regex: "join_split_example_tests"
    skip: true
    error_regex: "field_t::range_constraint"
    owners:
      - *luke

  - regex: "barretenberg/acir_tests/scripts/run_test_browser.sh verify_honk_proof"
    error_regex: "Out of bounds memory access"
    owners:
      - *sergei

  # Sumcheck is failing for some reason
  - regex: "barretenberg/acir_tests/scripts/run_test.sh ram_blowup_regression"
    skip: true
    owners:
      - *tom

  # noir
  # Something to do with how I run the tests now. Think these are fine in nextest.
  - regex: "noir_lsp-.* notifications::notification_tests::test_caches_open_files"
    skip: true
    owners:
      - *charlie
  - regex: "noir_lsp-.* requests::"
    skip: true
    owners:
      - *charlie

  # Sometimes see this on ARM. But not when run on it's own...
  # FAILED 6a60c4e796ac0aef: noir/scripts/run_test.sh debug-21ff1948430ded06 tests::debug_ram_blowup_regression (code: 101)
  #                                                                                                                                                                                running 1 test
  # test tests::debug_ram_blowup_regression has been running for over 60 seconds                                                                                                   test tests::debug_ram_blowup_regression ... FAILED
  #                                                                                                                                                                                failures:
  #                                                                                                                                                                                ---- tests::debug_ram_blowup_regression stdout ----
  # thread 'tests::debug_ram_blowup_regression' panicked at tooling/debugger/tests/debug.rs:27:14:                                                                                 Could not start debugger: Timeout { expected: "Regex: \".*\Starting debugger.*\"", got: "`^`[?2004l`\r``\r``\n`
  # Waiting for lock on Nargo.toml...`\r``\n`                                                                                                                                      ", timeout: 30s }
  # note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
  #                                                                                                                                                                                failures:
  #     tests::debug_ram_blowup_regression
  # test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 232 filtered out; finished in 60.34s
  - regex: "tests::debug_ram_blowup_regression"
    skip: true
    owners:
      - *charlie

  # e2e
  # e.g. to grind: seq 1 16 | parallel --bar --tag --halt now,fail=1 ci3/dump_fail "NAME_POSTFIX=_{} yarn-project/end-to-end/scripts/run_test.sh simple e2e_p2p/gossip_network >/dev/null"
  - regex: "simple e2e_p2p/"
    owners:
      - *sean

  - regex: "simple e2e_fees/private_payments"
    owners:
      - *phil

  - regex: "simple e2e_cheat_codes"
    owners:
      - *lasse
  - regex: "simple e2e_lending_contract"
    error_regex: "✕ Depositing"
    owners:
      - *lasse
  - regex: "simple e2e_lending_contract"
    error_regex: "✕ Repay"
    owners:
      - *lasse
  - regex: "simple e2e_cross_chain_messaging/token_bridge_private"
    error_regex: "✕ Claim secret is enough to consume the message"
    owners:
      - *lasse

  - regex: "simple e2e_block_building"
    error_regex: "Cannot read properties of undefined"
    owners:
      - *palla
  - regex: "prover-client/src/test/bb_prover_parity.test.ts"
    owners:
      - *palla
  - regex: "prover-client/src/proving_broker/broker_prover_facade.test.ts"
    owners:
      - *palla
  - regex: "prover-client/src/orchestrator/orchestrator_errors.test.ts"
    owners:
      - *palla

  # yarn-project tests
  - regex: "p2p/src/services/discv5/discv5_service.test.ts"
    error_regex: "Timeout: Failed to connect to"
    owners:
      - *sean
  - regex: "p2p/src/services/reqresp/reqresp.test.ts"
    owners:
      - *sean
  - regex: "sequencer-client/src/slasher/slasher_client.test.ts"
    owners:
      - *lasse
  - regex: "prover-client/src/test/bb_prover_full_rollup.test.ts"
    owners:
      - *palla
  - regex: "yarn-project/kv-store"
    error_regex: "Could not import your test module"
    owners:
      - *alex
  - regex: "ethereum/src/contracts/registry.test.ts"
    error_regex: "lower than or equal to previous block's timestamp"
    owners:
      - *mitch
  - regex: "ethereum/src/deploy_l1_contracts.test.ts"
    error_regex: "BlockOutOfRangeError"
    owners:
      - *palla

  # boxes
  - regex: "boxes/scripts/run_test.sh vite"
    error_regex: "Test timeout of 90000ms exceeded."
    owners:
      - *grego

  # kind tests
  - regex: "spartan/bootstrap.sh test-kind-4epochs"
    owners:
      - *leila

  - regex: "spartan/bootstrap.sh test-kind-upgrade-rollup-version"
    owners:
      - *adam

  - regex: "spartan/bootstrap.sh test-cli-upgrade-with-lock"
    owners:
      - *adam

  - regex: "spartan/bootstrap.sh test-kind-smoke"
    owners:
      - *adam

  - regex: "spartan/bootstrap.sh test-kind-transfer"
    owners:
      - *adam

  - regex: "spartan/bootstrap.sh test-prod-deployment"
    owners:
      - *adam

  # aztec-up
  - regex: "aztec-up/scripts/run_test.sh"
    error_regex: "Is the docker daemon running"
    owners:
      - *charlie

  # Slack testing.
  - regex: "nonsense to match"
    owners:
      - *charlie

  - regex: "nonsense to match"
    owners:
      - *charlie
      - *adam
    error_regex: "something else"
