// AUTOGENERATED FILE
#pragma once

#include "barretenberg/vm2/generated/relations/{{name}}.hpp"

namespace bb::{{snakeCase root_name}} {

template <typename FF_>
template <typename ContainerOverSubrelations, typename AllEntities>
void {{name}}Impl<FF_>::accumulate(
            ContainerOverSubrelations& evals,
            const AllEntities& in,
            [[maybe_unused]] const RelationParameters<FF_>&,
            [[maybe_unused]] const FF_& scaling_factor
){
    using C = ColumnAndShifts;

    BB_BENCH_NESTED_NAME("accumulate/{{name}}");

    {{#each alias_defs as |alias|}}
    const auto {{alias.name}} = {{alias.expr}};
    {{/each}}

    {{#each identities}}
    { {{#if label}}// {{ label }}{{/if}}
        using Accumulator = typename std::tuple_element_t<{{@index}}, ContainerOverSubrelations>;
        auto tmp = {{identity}};
        tmp *= scaling_factor;
        std::get<{{@index}}>(evals) += typename Accumulator::View(tmp);
    }
    {{/each}}
}

} // namespace bb::{{snakeCase root_name}}
