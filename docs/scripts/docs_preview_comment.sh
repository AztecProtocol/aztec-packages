#!/usr/bin/env bash
# Usage: ./docs_preview_comment.sh GITHUB_TOKEN PR_NUMBER DOCS_PREVIEW_URL
#
# Comments or updates a PR on github.com/AztecProtocol/aztec-packages
# with a docs preview link. It looks for an existing comment containing
# the marker and updates it if found, otherwise creates a new one.

source $(git rev-parse --show-toplevel)/ci3/source_bootstrap

github_token="${1:?Missing GitHub token}"
pr_number="${2:?Missing PR number}"
docs_preview_url="${3:?Missing docs preview URL}"

owner="AztecProtocol"
repo="aztec-packages"
comment_mark="<!-- AUTOGENERATED DOCS COMMENT -->"
api_url="https://api.github.com"

# Build the Markdown body
function comment_body {
  local url
  cat <<EOF
# Docs Preview
You can check your [preview here]($docs_preview_url).

$comment_mark
EOF
}

# Find existing comment ID (first match) containing comment_mark
existing_comment_id="$(curl -sf \
  -H "Authorization: Bearer $github_token" \
  -H "Accept: application/vnd.github+json" \
  -H "User-Agent: $owner" \
  "${api_url}/repos/${owner}/${repo}/issues/${pr_number}/comments" \
  | jq -r --arg mark "$comment_mark" \
    '.[] | select(.body | contains($mark)) | .id' \
  | head -n1 || true)"

body_json="$(jq -n --arg body "$(comment_body)" '{body: $body}')"

if [[ -n "$existing_comment_id" && "$existing_comment_id" != "null" ]]; then
  # Update existing comment
  echo "Updating existing docs-preview comment (ID: $existing_comment_id)."
  curl -sf -X PATCH \
    -o /dev/null \
    -H "Authorization: Bearer $github_token" \
    -H "Accept: application/vnd.github+json" \
    -H "User-Agent: $owner" \
    -H "Content-Type: application/json" \
    -d "$body_json" \
    "${api_url}/repos/${owner}/${repo}/issues/comments/${existing_comment_id}"
else
  # Create a new comment
  echo "Creating new docs-preview comment."
  curl -sf -X POST \
    -o /dev/null \
    -H "Authorization: Bearer $github_token" \
    -H "Accept: application/vnd.github+json" \
    -H "User-Agent: $owner" \
    -H "Content-Type: application/json" \
    -d "$body_json" \
    "${api_url}/repos/${owner}/${repo}/issues/${pr_number}/comments"
fi
