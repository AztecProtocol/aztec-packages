#!/usr/bin/env bash
set -euo pipefail

function get_compose {
  # Favour 'docker compose', falling back on docker-compose.
  CMD="docker compose"
  $CMD &>/dev/null || CMD="docker-compose"
  $CMD $@
}

CALLED_FROM=$PWD

if [ "${1:-}" == "test" ]; then
  # Change working dir, so relative volume mounts are in the right place.
  cd $(dirname $0)/..
  # Compose file to use
  FILE_ARG="-f $HOME/.aztec/docker-compose.test.yml"
  # Aztec contract test args for nargo
  TEST_ARGS="$@ --silence-warnings --oracle-resolver http://aztec:8081"
  get_compose -p aztec-test $FILE_ARG run -e NARGO_FOREIGN_CALL_TIMEOUT=300000 --workdir $CALLED_FROM --rm -it aztec-nargo $TEST_ARGS
elif [ $# == 2 ] && [ "$1" == "start" ] && [ "$2" == "--sandbox" ]; then
  # Change working dir, so relative volume mounts are in the right place.
  cd $(dirname $0)/..
  # Compose file to use
  FILE_ARG="-f $HOME/.aztec/docker-compose.sandbox.yml"

   # Function to be executed when SIGINT is received.
  cleanup() {
    get_compose $FILE_ARG down
  }

  # Set trap to catch SIGINT and call the cleanup function.
  trap cleanup SIGINT

 get_compose -p sandbox $FILE_ARG up --force-recreate --remove-orphans
elif [ "$1" == "start" ]; then
  $(dirname $0)/.aztec-run aztecprotocol/aztec "$@"
else
  SKIP_PORT_ASSIGNMENT=1 $(dirname $0)/.aztec-run aztecprotocol/aztec "$@"
fi
