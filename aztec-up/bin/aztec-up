#!/bin/bash
set -euo pipefail

# Define version if specified, otherwise set to "latest".
VERSION=${VERSION:-"latest"}

# Check if Docker is available.
if ! command -v docker &>/dev/null; then
  echo "Docker is not installed. Please install Docker and try again."
  exit 1
fi

# Check if Docker is running.
if ! docker info &>/dev/null; then
  echo "Docker is not running. Please start Docker and try again."
  exit 1
fi

if ! docker compose &>/dev/null && ! command -v docker-compose &>/dev/null; then
  echo "Install docker-compose, or a version of docker that supports 'docker compose' command."
  exit 1
fi

# Create a "hidden" `$HOME/.aztec` dir, so as not to clutter the user's cwd.
AZTEC_PATH=$HOME/.aztec
BIN_PATH=$AZTEC_PATH/bin
rm -f $BIN_PATH/* && mkdir -p $BIN_PATH

# Download containers from dockerhub. Tag them as latest.
function pull_container {
  docker pull aztecprotocol/$1:$VERSION

  # If not latest, retag to be latest so it runs from scripts.
  if [ $VERSION != "latest" ]; then
    docker tag aztecprotocol/$1:$VERSION aztecprotocol/$1:latest
  fi
}

echo "Pulling aztec version $VERSION.."
pull_container aztec-sandbox
pull_container cli
pull_container noir

# Download the Docker Compose file. Used by aztec-start.
curl -fsSL http://install.aztec.network/docker-compose.yml -o $BIN_PATH/docker-compose.yml

function install_bin {
  curl -fsSL http://install.aztec.network/$1 -o $BIN_PATH/$1
  chmod +x $BIN_PATH/$1
}

echo "Installing scripts in $BIN_PATH..."
install_bin aztec
install_bin aztec-cli
install_bin aztec-start
install_bin aztec-up
install_bin aztec-nargo

function update_path_env_var {
  TARGET_DIR="${1}"
  # Check if the target directory is in the user's PATH.
  if [[ ":$PATH:" != *":$TARGET_DIR:"* ]]; then
    # Determine the user's shell.
    SHELL_PROFILE=""
    case $SHELL in
    */bash)
      SHELL_PROFILE="$HOME/.bashrc"
      ;;
    */zsh)
      SHELL_PROFILE="$HOME/.zshrc"
      ;;
    # Add other shells as needed
    *)
      echo "Unsupported shell: $SHELL"
      return
      ;;
    esac
    # Inform the user about the change and ask for confirmation
    echo "The directory $TARGET_DIR is not in your PATH."
    echo "We'd like to add it to your $SHELL_PROFILE to make the binary accessible."
    read -p "Do you want to proceed? (y/n) " -n 1 -r
    echo # Move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      # Add the target directory to the user's PATH in their profile
      echo "export PATH=\$PATH:$TARGET_DIR" >> "$SHELL_PROFILE"
      echo "Updated PATH in $SHELL_PROFILE"
      echo "Reload $SHELL_PROFILE to use the binary."
    else
      echo "Skipped updating PATH. You might need to add $TARGET_DIR to your PATH manually to use the binary."
    fi
  fi
}

update_path_env_var $BIN_PATH/bin