# This file uses YAML anchors and aliases to prevent repetition of blocks of config:
# https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/
#
# Two primary anchors are checkout and setup_env, called as the first step of almost all jobs:
# - checkout: A custom checkout step to reduce the amount of data downloaded to improve speed.
# - setup_env: Sets up the common environment used by all build steps.
#
# Two CCI executors are used:
# - docker (small): Used only to launch external EC2 instances for big workloads. It's the cheapest option.
# - machine (large): Used for building in CCI itself. 4cpus, 15GB has the optimal power/cost ratio.
#
# The docker executor uses a custom image build in `build_image`. It's specifically streamlined for fast download
# with just enough tools to execute the build system, and launch EC2 instances etc.
#
# There are some `join` steps that are just noops. They are just used to produce cleaner graph rendering in CCI.

version: 2.1

orbs:
  slack: circleci/slack@4.12.1

parameters:
  workflow:
    type: string
    default: "system"

# This build step checks out the code from the repository. It has a hardcoded readonly key to allow the checkout.
# Initially it just fetches the repo metadata for the current commit hash to a depth of 50 commits.
# We need historical commit hashes to calculate diffs between previous and current commits.
# It then checks out the fetched head to actually download the data.
checkout: &checkout
  run:
    name: "Checkout code"
    command: |
      function retry() {
        # Retries up to 3 times with 10 second intervals
        for i in $(seq 1 3); do
          "$@" && return || sleep 10
        done
        echo "$@ failed after 3 attempts"
        exit 1
      }
      cd $HOME
      mkdir -p .ssh
      chmod 0700 .ssh
      retry ssh-keyscan -t rsa github.com >> .ssh/known_hosts

      # A read only key for cloning the repository.
      echo $GIT_CHECKOUT_KEY | base64 -d > .ssh/id_rsa

      chmod 0600 .ssh/id_rsa
      # IF YOU'RE CHANGING THIS, YOU ALSO WANT TO CHANGE: build-system/scripts/remote_runner
      # Shallow checkout this commit.
      mkdir -p project
      cd project
      git init
      git remote add origin $CIRCLE_REPOSITORY_URL

      # Only download metadata when fetching.
      retry git fetch --depth 1 --filter=blob:none origin $CIRCLE_SHA1
      retry git checkout FETCH_HEAD

# Called setup_env to setup a bunch of global variables used throughout the rest of the build process.
# It takes the required CCI environment variables as inputs, and gives them normalised names for the rest of
# the build process. This enables easy running of the build system external to CCI, as used for powerful EC2 builds.
setup_env: &setup_env
  run:
    name: "Setup environment"
    command: ./build-system/scripts/setup_env "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_JOB" "$CIRCLE_REPOSITORY_URL" "$CIRCLE_BRANCH"

# This step is used to save logs from various barretenberg test to the workspace so that they can be used later to parse benchmark values out of them
save_logs: &save_logs
  persist_to_workspace:
    root: /tmp/test-logs
    paths:
      - ./*

jobs:
  barretenberg-wasm-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-wasm-linux-clang 128

  barretenberg-x86_64-linux-gcc:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-gcc 128

  barretenberg-x86_64-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang 128

  barretenberg-x86_64-linux-clang-fuzzing:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-fuzzing 128

  barretenberg-x86_64-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-assert 128

  barretenberg-stdlib-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 stdlib-tests
      - *save_logs

  barretenberg-dsl-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 dsl_tests
      - *save_logs

  barretenberg-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/bb-tests.sh
      - *save_logs

  barretenberg-honk-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 honk_tests
      - *save_logs

  barretenberg-proof-system-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 proof_system_tests
      - *save_logs

  barretenberg-stdlib-recursion-ultra-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 stdlib_recursion_tests --gtest_filter=-*turbo*
      - *save_logs

  barretenberg-join-split-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 join_split_example_proofs_join_split_tests --gtest_filter=-*full_proof*
      - *save_logs

  # barretenberg-benchmark-aggregator:
  #   docker:
  #     - image: aztecprotocol/alpine-build-image
  #   resource_class: small
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/test-logs
  #     - *checkout
  #     - *setup_env
  #     - run:
  #         name: "Test"
  #         command: ./scripts/ci/store_test_benchmark_logs $AZTEC_GITHUB_TOKEN

  barretenberg-acir-tests-bb:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_build barretenberg-acir-tests-bb 32

  bb-js:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build bb.js

  bb-js-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_test bb.js 32 ./scripts/run_tests

  bb-js-acir-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_build barretenberg-acir-tests-bb.js 32

  circuits-wasm-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build circuits-wasm-linux-clang 32

  circuits-wasm-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build circuits-wasm-linux-clang-assert 32

  circuits-x86_64-linux-clang-tidy:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build circuits-x86_64-linux-clang-tidy 32

  circuits-x86_64-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build circuits-x86_64-linux-clang 32

  circuits-x86_64-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build circuits-x86_64-linux-clang-assert 32

  circuits-wasm-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test circuits-wasm-linux-clang-assert 32 ./scripts/run_tests 1 wasm scripts/a3-tests -*.skip*:*.circuit*
      - *save_logs

  circuits-x86_64-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test circuits-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 x86_64 scripts/a3-tests -*.skip*
      - *save_logs

  l1-contracts:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build l1-contracts

  noir-contracts-build:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build noir-contracts-build | add_timestamps

  yarn-project-base:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: xlarge
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build yarn-project-base | add_timestamps

  yarn-project:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build yarn-project | add_timestamps

  yarn-project-format:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_script yarn-project 32 cond_run_container yarn-project formatting | add_timestamps

  yarn-project-test:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_script yarn-project 64 cond_run_container yarn-project test | add_timestamps

  aztec-sandbox-base:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: force_deploy_build aztec-sandbox-base false

  aztec-sandbox-x86_64:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: force_deploy_build aztec-sandbox false x86_64

  aztec-sandbox-arm64:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: arm.large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          # We need to force not to use docker buildkit because for some reason on arm only, it ends up making a call
          # out to eu-west2 despite the image being locally tagged, resulting in unauthorised 401. Weird docker bug?
          command: |
            echo "export DOCKER_BUILDKIT=" > $BASH_ENV
            force_deploy_build aztec-sandbox false arm64

  aztec-sandbox-ecr-manifest:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Create ECR manifest"
          command: create_ecr_manifest aztec-sandbox-base aztec-sandbox x86_64,arm64

  boxes-blank-react:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test via adhoc script"
          command: ./yarn-project/boxes/blank-react/run_tests

  boxes-blank:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test via adhoc script"
          command: ./yarn-project/boxes/blank/run_tests

  boxes-private-token:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test via adhoc script"
          command: ./yarn-project/boxes/private-token/run_tests

  canary:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build canary-build

  end-to-end:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build end-to-end

  e2e-2-rpc-servers:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_2_rpc_servers.test.ts

  e2e-multiple-accounts-1-enc-key:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_multiple_accounts_1_enc_key.test.ts

  e2e-deploy-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_deploy_contract.test.ts

  e2e-lending-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_lending_contract.test.ts

  e2e-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_token_contract.test.ts

  e2e-private-airdrop:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_private_airdrop.test.ts

  e2e-private-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_private_token_contract.test.ts

  e2e-sandbox-example:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_sandbox_example.test.ts ./scripts/docker-compose-e2e-sandbox.yml

  e2e-multi-transfer-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_multi_transfer.test.ts

  e2e-block-building:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_block_building.test.ts

  e2e-nested-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_nested_contract.test.ts

  e2e-non-contract-account:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_non_contract_account.test.ts

  e2e-cross-chain-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_cross_chain_messaging.test.ts

  e2e-public-cross-chain-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_cross_chain_messaging.test.ts

  e2e-public-to-private-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_to_private_messaging.test.ts

  e2e-account-contracts:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_account_contracts.test.ts

  e2e-escrow-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_escrow_contract.test.ts

  e2e-pending-commitments-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_pending_commitments_contract.test.ts

  e2e-ordering:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_ordering.test.ts

  uniswap-trade-on-l1-from-l2:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local uniswap_trade_on_l1_from_l2.test.ts

  integration-archiver-l1-to-l2:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local integration_archiver_l1_to_l2.test.ts

  integration-l1-publisher:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local integration_l1_publisher.test.ts

  e2e-public-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_token_contract.test.ts

  e2e-cli:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_cli.test.ts

  e2e-p2p:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_p2p_network.test.ts

  e2e-browser-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_aztec_js_browser.test.ts ./scripts/docker-compose-e2e-sandbox-browser.yml

  e2e-card-game:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_card_game.test.ts

  aztec-rpc-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local aztec_rpc_sandbox.test.ts ./scripts/docker-compose-e2e-sandbox.yml

  cli-docs-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local cli_docs_sandbox.test.ts ./scripts/docker-compose-e2e-sandbox.yml

  guides-writing-an-account-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local guides/writing_an_account_contract.test.ts

  guides-dapp-testing:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local guides/dapp_testing.test.ts ./scripts/docker-compose-e2e-sandbox.yml

  guides-sample-dapp:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local sample-dapp ./scripts/docker-compose-e2e-sandbox.yml

  guides-up-quick-start:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script end-to-end ./scripts/run_tests_local guides/up_quick_start.test.ts ./scripts/docker-compose-e2e-sandbox.yml

  e2e-canary-test:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_run_script canary-build ./scripts/run_tests uniswap_trade_on_l1_from_l2.test.ts canary-build ./scripts/docker-compose-e2e-sandbox.yml

  build-docs:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Copy docs dockerignore"
          command: cp docs/.dockerignore .
      - run:
          name: "Build docs"
          command: build docs

  e2e-join:
    docker:
      - image: cimg/base:2023.09
    resource_class: small
    steps:
      - run:
          name: "Noop"
          command: echo Noop

  e2e-end:
    docker:
      - image: cimg/base:2023.09
    resource_class: small
    steps:
      - run:
          name: "Noop"
          command: echo Noop

  deploy-npm:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      # Aztec.js and dependencies
      - run:
          name: "yarn-project"
          command: yarn-project/deploy_npm.sh

  deploy-dockerhub:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "deploy-sandbox"
          working_directory: aztec-sandbox
          command: |
            deploy_dockerhub aztec-sandbox x86_64
            deploy_dockerhub aztec-sandbox arm64
            create_dockerhub_manifest aztec-sandbox x86_64,arm64

  deploy-end:
    docker:
      - image: cimg/base:2023.09
    resource_class: small
    steps:
      - run:
          name: "Noop"
          command: echo Noop

  build-deployment-canary:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build canary true

  run-deployment-canary-uniswap:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: run_script canary ./scripts/run_tests ./src/uniswap_trade_on_l1_from_l2.test.ts canary ./scripts/docker-compose.yml

  run-deployment-canary-browser:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: run_script canary ./scripts/run_tests ./src/aztec_js_browser.test.ts canary ./scripts/docker-compose-browser.yml

  run-deployment-canary-cli:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: run_script canary ./scripts/run_tests ./src/cli.test.ts canary ./scripts/docker-compose.yml

# Repeatable config for defining the workflow below.
tag_regex: &tag_regex /^aztec-packages-v.*/
defaults: &defaults
  filters:
    tags:
      only: *tag_regex
  context:
    - build
    - slack
  post-steps:
    - slack/notify:
        event: fail
        branch_pattern: "master"
deploy_defaults: &deploy_defaults
  filters:
    tags:
      only: *tag_regex
    branches:
      ignore: /.*/
  context:
    - build
    - slack
  post-steps:
    - slack/notify:
        event: fail
        branch_pattern: "master"
yarn_project: &yarn_project
  requires:
    - yarn-project
  <<: *defaults
e2e_test: &e2e_test
  requires:
    - e2e-join
  <<: *defaults
bb_test: &bb_test
  requires:
    - barretenberg-x86_64-linux-clang-assert
  <<: *defaults

workflows:
  system:
    when:
      equal: [system, << pipeline.parameters.workflow >>]
    jobs:
      # Barretenberg
      - barretenberg-x86_64-linux-gcc: *defaults
      - barretenberg-x86_64-linux-clang: *defaults
      - barretenberg-x86_64-linux-clang-assert: *defaults
      - barretenberg-x86_64-linux-clang-fuzzing: *defaults
      - barretenberg-wasm-linux-clang: *defaults
      - barretenberg-proof-system-tests: *bb_test
      - barretenberg-honk-tests: *bb_test
      - barretenberg-dsl-tests: *bb_test
      - barretenberg-tests: *bb_test
      - barretenberg-stdlib-tests: *bb_test
      - barretenberg-stdlib-recursion-ultra-tests: *bb_test
      - barretenberg-join-split-tests: *bb_test
      # - barretenberg-benchmark-aggregator:
      #     requires:
      #       - barretenberg-tests
      #       - barretenberg-stdlib-tests
      #       - barretenberg-stdlib-recursion-ultra-tests
      #       - barretenberg-join-split-tests
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     <<: *defaults
      - barretenberg-acir-tests-bb:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - bb-js:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - bb-js-tests:
          requires:
            - bb-js
          <<: *defaults
      - bb-js-acir-tests:
          requires:
            - bb-js
          <<: *defaults

      # Circuits
      - circuits-wasm-linux-clang:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - circuits-wasm-linux-clang-assert:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - circuits-x86_64-linux-clang-tidy:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-x86_64-linux-clang:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-x86_64-linux-clang-assert:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-wasm-tests:
          requires:
            - circuits-wasm-linux-clang-assert
          <<: *defaults
      - circuits-x86_64-tests:
          requires:
            - circuits-x86_64-linux-clang-assert
          <<: *defaults

      - l1-contracts: *defaults
      - noir-contracts-build: *defaults

      # Yarn Project
      - yarn-project-base:
          requires:
            - circuits-wasm-linux-clang
            - l1-contracts
          <<: *defaults
      - yarn-project-format:
          requires:
            - yarn-project
          <<: *defaults
      - yarn-project-test:
          requires:
            - yarn-project
          <<: *defaults
      - yarn-project:
          requires:
            - yarn-project-base
            - noir-contracts-build
          <<: *defaults

      - end-to-end: *yarn_project
      - aztec-sandbox-base: *yarn_project
      - canary: *yarn_project
      - build-docs: *yarn_project

      - aztec-sandbox-x86_64:
          requires:
            - aztec-sandbox-base
          <<: *defaults
      - aztec-sandbox-arm64:
          requires:
            - aztec-sandbox-base
          <<: *defaults

      - aztec-sandbox-ecr-manifest:
          requires:
            - aztec-sandbox-x86_64
            - aztec-sandbox-arm64
          <<: *defaults

      - boxes-blank-react:
          requires:
            - aztec-sandbox-x86_64
          <<: *defaults

      - boxes-blank:
          requires:
            - aztec-sandbox-x86_64
          <<: *defaults

      - boxes-private-token:
          requires:
            - aztec-sandbox-x86_64
          <<: *defaults

      - e2e-join:
          requires:
            - end-to-end
            - aztec-sandbox-ecr-manifest
            - canary
          <<: *defaults

      - e2e-2-rpc-servers: *e2e_test
      - e2e-deploy-contract: *e2e_test
      - e2e-lending-contract: *e2e_test
      - e2e-token-contract: *e2e_test
      - e2e-private-airdrop: *e2e_test
      - e2e-private-token-contract: *e2e_test
      - e2e-sandbox-example: *e2e_test
      - e2e-multi-transfer-contract: *e2e_test
      - e2e-block-building: *e2e_test
      - e2e-nested-contract: *e2e_test
      - e2e-non-contract-account: *e2e_test
      - e2e-multiple-accounts-1-enc-key: *e2e_test
      - e2e-public-token-contract: *e2e_test
      - e2e-cli: *e2e_test
      - e2e-cross-chain-messaging: *e2e_test
      - e2e-public-cross-chain-messaging: *e2e_test
      - e2e-public-to-private-messaging: *e2e_test
      - e2e-account-contracts: *e2e_test
      - e2e-escrow-contract: *e2e_test
      - e2e-pending-commitments-contract: *e2e_test
      - e2e-ordering: *e2e_test
      - uniswap-trade-on-l1-from-l2: *e2e_test
      - integration-l1-publisher: *e2e_test
      - integration-archiver-l1-to-l2: *e2e_test
      - e2e-p2p: *e2e_test
      - e2e-canary-test: *e2e_test
      - e2e-browser-sandbox: *e2e_test
      - e2e-card-game: *e2e_test
      - aztec-rpc-sandbox: *e2e_test
      - cli-docs-sandbox: *e2e_test
      - guides-writing-an-account-contract: *e2e_test
      - guides-dapp-testing: *e2e_test
      - guides-sample-dapp: *e2e_test
      - guides-up-quick-start: *e2e_test

      - e2e-end:
          requires:
            - e2e-2-rpc-servers
            - e2e-deploy-contract
            - e2e-lending-contract
            - e2e-token-contract
            - e2e-private-airdrop
            - e2e-private-token-contract
            - e2e-sandbox-example
            - e2e-multi-transfer-contract
            - e2e-block-building
            - e2e-nested-contract
            - e2e-non-contract-account
            - e2e-multiple-accounts-1-enc-key
            - e2e-public-token-contract
            - e2e-cli
            - e2e-cross-chain-messaging
            - e2e-public-cross-chain-messaging
            - e2e-public-to-private-messaging
            - e2e-account-contracts
            - e2e-escrow-contract
            - e2e-pending-commitments-contract
            - e2e-ordering
            - uniswap-trade-on-l1-from-l2
            - integration-l1-publisher
            - integration-archiver-l1-to-l2
            - e2e-p2p
            - e2e-browser-sandbox
            - e2e-canary-test
            - e2e-card-game
            - aztec-rpc-sandbox
            - cli-docs-sandbox
            - guides-writing-an-account-contract
            - guides-dapp-testing
            - guides-sample-dapp
            - guides-up-quick-start
          <<: *defaults

        # Deployment and Canary tests
      - deploy-dockerhub:
          requires:
            - e2e-end
          <<: *deploy_defaults
      - deploy-npm:
          requires:
            - e2e-end
          <<: *deploy_defaults

      - deploy-end:
          requires:
            - deploy-dockerhub
            - deploy-npm
          <<: *deploy_defaults

      - build-deployment-canary:
          requires:
            - deploy-end
          <<: *deploy_defaults

      - run-deployment-canary-uniswap:
          requires:
            - build-deployment-canary
          <<: *deploy_defaults

      - run-deployment-canary-browser:
          requires:
            - build-deployment-canary
          <<: *deploy_defaults

      - run-deployment-canary-cli:
          requires:
            - build-deployment-canary
          <<: *deploy_defaults
