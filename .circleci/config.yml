# This file uses YAML anchors and aliases to prevent repetition of blocks of config:
# https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/
#
# Two primary anchors are checkout and setup_env, called as the first step of almost all jobs:
# - checkout: A custom checkout step to reduce the amount of data downloaded to improve speed.
# - setup_env: Sets up the common environment used by all build steps.
#
# Two CCI executors are used:
# - docker (small): Used only to launch external EC2 instances for big workloads. It's the cheapest option.
# - machine (large): Used for building in CCI itself. 4cpus, 15GB has the optimal power/cost ratio.
#
# The docker executor uses a custom image build in `build_image`. It's specifically streamlined for fast download
# with just enough tools to execute the build system, and launch EC2 instances etc.
#
# There are some `join` steps that are just no-ops. They are just used to produce cleaner graph rendering in CCI.

version: 2.1

setup: true # have a dynamic config step
orbs:
  continuation: circleci/continuation@1.0.0
  slack: circleci/slack@4.12.5

parameters:
  workflow:
    type: string
    default: "system"

# This build step checks out the code from the repository. It has a hardcoded readonly key to allow the checkout.
# Initially it just fetches the repo metadata for the current commit hash to a depth of 50 commits.
# We need historical commit hashes to calculate diffs between previous and current commits.
# It then checks out the fetched head to actually download the data.
checkout: &checkout
  run:
    name: "Checkout code"
    command: |
      function retry() {
        # Retries up to 3 times with 10 second intervals
        for i in $(seq 1 3); do
          "$@" && return || sleep 10
        done
        echo "$@ failed after 3 attempts"
        exit 1
      }
      cd $HOME
      mkdir -p .ssh
      chmod 0700 .ssh
      retry ssh-keyscan -t rsa github.com >> .ssh/known_hosts

      # A read only key for cloning the repository.
      echo $GIT_CHECKOUT_KEY | base64 -d > .ssh/id_rsa

      chmod 0600 .ssh/id_rsa
      # IF YOU'RE CHANGING THIS, YOU ALSO WANT TO CHANGE: build-system/scripts/remote_runner
      # Shallow checkout this commit.
      mkdir -p project
      cd project
      git init
      git remote add origin $CIRCLE_REPOSITORY_URL

      # Only download metadata when fetching.
      retry git fetch --depth 1 --filter=blob:none origin $CIRCLE_SHA1
      retry git checkout FETCH_HEAD

# Called setup_env to setup a bunch of global variables used throughout the rest of the build process.
# It takes the required CCI environment variables as inputs, and gives them normalized names for the rest of
# the build process. This enables easy running of the build system external to CCI, as used for powerful EC2 builds.
setup_env: &setup_env
  run:
    name: "Setup environment"
    command: ./build-system/scripts/setup_env "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_JOB" "$CIRCLE_REPOSITORY_URL" "$CIRCLE_BRANCH" "$CIRCLE_PULL_REQUEST"

jobs:
  # Dynamically filter our code, quickly figuring out which jobs we can skip.
  generate-config:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: xlarge
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Generate Pipeline generated_config.yml file
          command: |
            # filter our circleci config to the minimal pipeline
            build-system/scripts/generate_circleci_config.py > .circleci/generated_config.yml
      - continuation/continue:
          configuration_path: .circleci/generated_config.yml
  # Noir
  noir-x86_64:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build noir 32
          aztec_manifest_key: noir

  noir-arm64:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build noir 32 arm64
          aztec_manifest_key: noir

  noir-ecr-manifest:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Create ECR manifest"
          command: create_ecr_manifest noir x86_64,arm64
          aztec_manifest_key: noir

  noir-packages:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build noir-packages 32
          aztec_manifest_key: noir-packages

  noir-compile-acir-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build noir-compile-acir-tests 32
          aztec_manifest_key: noir

  avm-transpiler:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build avm-transpiler 32
          aztec_manifest_key: avm-transpiler

  # Barretenberg
  barretenberg-wasm-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-wasm-linux-clang 128
          aztec_manifest_key: barretenberg-wasm-linux-clang

  barretenberg-x86_64-linux-gcc:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-gcc 128
          aztec_manifest_key: barretenberg-x86_64-linux-gcc

  barretenberg-x86_64-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang 128
          aztec_manifest_key: barretenberg-x86_64-linux-clang

  barretenberg-x86_64-linux-clang-fuzzing:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-fuzzing 128
          aztec_manifest_key: barretenberg-x86_64-linux-clang-fuzzing
          
  barretenberg-x86_64-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-assert 128
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-x86_64-linux-clang-sol:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-sol 32
          aztec_manifest_key: barretenberg-x86_64-linux-clang-sol

  barretenberg-docs:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build barretenberg docs"
          command: build barretenberg-docs
          aztec_manifest_key: barretenberg-docs
      - run:
          name: "Deploy barretenberg docs"
          command: |
            barretenberg/cpp/scripts/ci/upload_doxygen_to_s3.sh

  barretenberg-stdlib-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 stdlib-tests
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-dsl-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 dsl_tests
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/bb-tests.sh
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-bench:
    machine:
      # NOTE: we usually use alpine build image when making spot images, but
      # we are not able to upload to S3 with it
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Benchmark"
          command: cond_spot_run_build barretenberg-bench 32
          aztec_manifest_key: barretenberg-bench
      - run:
          name: "Upload"
          command: |
            barretenberg/cpp/scripts/ci/upload_benchmarks_to_s3.sh

  barretenberg-proof-system-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 proof_system_tests
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-stdlib-recursion-ultra-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 stdlib_recursion_tests --gtest_filter=-*turbo*
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-join-split-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 join_split_example_proofs_join_split_tests --gtest_filter=-*full_proof*
          aztec_manifest_key: barretenberg-x86_64-linux-clang-assert

  barretenberg-acir-tests-bb:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_build barretenberg-acir-tests-bb 32
          aztec_manifest_key: barretenberg-acir-tests-bb

  bb-js:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build bb.js
          aztec_manifest_key: bb.js

  bb-js-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_test bb.js 32 ./scripts/run_tests
          aztec_manifest_key: bb.js

  bb-js-acir-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: cond_spot_run_build barretenberg-acir-tests-bb.js 32
          aztec_manifest_key: barretenberg-acir-tests-bb.js

  l1-contracts:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build l1-contracts
          aztec_manifest_key: l1-contracts

  noir-projects:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build noir-projects
          aztec_manifest_key: noir-projects

  boxes-files:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build boxes-files
          aztec_manifest_key: boxes-files

  yarn-project-base:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build yarn-project-base | add_timestamps
          aztec_manifest_key: yarn-project-base

  yarn-project:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build yarn-project | add_timestamps
          aztec_manifest_key: yarn-project

  yarn-project-prod:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build yarn-project-prod | add_timestamps
          aztec_manifest_key: yarn-project-prod

  yarn-project-formatting:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Check Formatting
          command: cond_spot_run_container yarn-project 8 formatting | add_timestamps
          aztec_manifest_key: yarn-project

  yarn-project-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_container yarn-project 64 test | add_timestamps
          aztec_manifest_key: yarn-project

  aztec-package:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build aztec
          aztec_manifest_key: aztec

  cli:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build cli
          aztec_manifest_key: cli

  mainnet-fork:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build mainnet-fork | add_timestamps
          aztec_manifest_key: mainnet-fork

  aztec-faucet:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build and test"
          command: build aztec-faucet | add_timestamps
          aztec_manifest_key: aztec-faucet

  boxes:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: cond_spot_run_build boxes 4
          aztec_manifest_key: boxes

  boxes-vanilla:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose boxes 4 ./docker-compose.yml BOX=box-vanilla
          aztec_manifest_key: boxes

  boxes-react:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose boxes 4 ./docker-compose.yml BOX=box-react
          aztec_manifest_key: boxes

  end-to-end:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build"
          command: build end-to-end
          aztec_manifest_key: end-to-end

  e2e-2-pxes:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_2_pxes.test.ts
          aztec_manifest_key: end-to-end

  e2e-note-getter:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_note_getter.test.ts
          aztec_manifest_key: end-to-end

  e2e-counter:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_counter_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-private-voting:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_private_voting_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-multiple-accounts-1-enc-key:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_multiple_accounts_1_enc_key.test.ts
          aztec_manifest_key: end-to-end

  e2e-deploy-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_deploy_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-lending-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_lending_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-token-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_token_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-blacklist-token-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_blacklist_token_contract.test.ts
          aztec_manifest_key: end-to-end

  # TODO(3458): Investigate intermittent failure
  # e2e-slow-tree:
  #   docker:
  #     - image: aztecprotocol/alpine-build-image
  #   resource_class: small
  #   steps:
  #     - *checkout
  #     - *setup_env
  #     - run:
  #         name: "Test"
  #         command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_slow_tree.test.ts
  #         aztec_manifest_key: end-to-end

  e2e-sandbox-example:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_sandbox_example.test.ts
          aztec_manifest_key: end-to-end

  e2e-state-vars:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_state_vars.test.ts
          aztec_manifest_key: end-to-end

  e2e-block-building:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_block_building.test.ts
          aztec_manifest_key: end-to-end

  e2e-nested-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_nested_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-static-calls:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_static_calls.test.ts
          aztec_manifest_key: end-to-end

  e2e-delegate-calls:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_delegate_calls.test.ts
          aztec_manifest_key: end-to-end

  e2e-non-contract-account:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_non_contract_account.test.ts
          aztec_manifest_key: end-to-end

  e2e-cross-chain-messaging:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_cross_chain_messaging.test.ts
          aztec_manifest_key: end-to-end

  e2e-public-cross-chain-messaging:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_public_cross_chain_messaging.test.ts
          aztec_manifest_key: end-to-end

  e2e-public-to-private-messaging:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_public_to_private_messaging.test.ts
          aztec_manifest_key: end-to-end

  e2e-account-contracts:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_account_contracts.test.ts
          aztec_manifest_key: end-to-end

  e2e-escrow-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_escrow_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-inclusion-proofs-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_inclusion_proofs_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-pending-commitments-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_pending_commitments_contract.test.ts
          aztec_manifest_key: end-to-end

  e2e-ordering:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_ordering.test.ts
          aztec_manifest_key: end-to-end

  uniswap-trade-on-l1-from-l2:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=uniswap_trade_on_l1_from_l2.test.ts
          aztec_manifest_key: end-to-end

  integration-archiver-l1-to-l2:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=integration_archiver_l1_to_l2.test.ts
          aztec_manifest_key: end-to-end

  integration-l1-publisher:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=integration_l1_publisher.test.ts
          aztec_manifest_key: end-to-end

  e2e-cli:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_cli.test.ts
          aztec_manifest_key: end-to-end

  e2e-persistence:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose-no-sandbox.yml TEST=e2e_persistence.test.ts
          aztec_manifest_key: end-to-end

  e2e-browser:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose-browser.yml TEST=e2e_aztec_js_browser.test.ts
          aztec_manifest_key: end-to-end

  e2e-card-game:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_card_game.test.ts
          aztec_manifest_key: end-to-end

  e2e-avm-simulator:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: AVM_ENABLED=1 cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_avm_simulator.test.ts
          aztec_manifest_key: end-to-end

  e2e-fees:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=e2e_fees.test.ts
          aztec_manifest_key: end-to-end

  pxe:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=pxe_sandbox.test.ts
          aztec_manifest_key: end-to-end

  cli-docs-sandbox:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=cli_docs_sandbox.test.ts
          aztec_manifest_key: end-to-end

  e2e-docs-examples:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: AVM_ENABLED=1 cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=docs_examples_test.ts
          aztec_manifest_key: end-to-end

  guides-writing-an-account-contract:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=guides/writing_an_account_contract.test.ts
          aztec_manifest_key: end-to-end

  guides-dapp-testing:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=guides/dapp_testing.test.ts
          aztec_manifest_key: end-to-end

  guides-sample-dapp:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=sample-dapp
          aztec_manifest_key: end-to-end

  guides-up-quick-start:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Test"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose.yml TEST=guides/up_quick_start.test.ts
          aztec_manifest_key: end-to-end

  bench-publish-rollup:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Benchmark"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose-no-sandbox.yml TEST=benchmarks/bench_publish_rollup.test.ts DEBUG=aztec:benchmarks:*,aztec:sequencer,aztec:sequencer:*,aztec:world_state,aztec:merkle_trees
          aztec_manifest_key: end-to-end

  bench-process-history:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Benchmark"
          command: cond_spot_run_compose end-to-end 4 ./scripts/docker-compose-no-sandbox.yml TEST=benchmarks/bench_process_history.test.ts DEBUG=aztec:benchmarks:*,aztec:sequencer,aztec:sequencer:*,aztec:world_state,aztec:merkle_trees
          aztec_manifest_key: end-to-end

  build-docs:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Copy docs dockerignore"
          command: cp docs/.dockerignore .
      - run:
          name: "Require released code"
          command: |
            LAST_TAG="aztec-packages-v$(jq -r '.["."]' .release-please-manifest.json)"
            if git ls-remote --tags origin | grep "$LAST_TAG" > /dev/null; then
              echo "Using code released from $LAST_TAG"
              echo "INCLUDE_RELEASED_CODE=1" >> docs/.env
              git fetch origin --refetch --no-filter refs/tags/$LAST_TAG:refs/tags/$LAST_TAG
            else
              echo "Skipping as $LAST_TAG is not yet published"
            fi
      - run:
          name: "Build docs"
          command: build docs
          aztec_manifest_key: docs
      - run:
          name: "Deploy docs"
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              echo "Deploying docs (on master)."
              docs/deploy_netlify.sh
            else
              echo "Skipping doc deploy (not on master)."
            fi

  yellow-paper:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Build yellow paper"
          command: build yellow-paper
          aztec_manifest_key: yellow-paper

  e2e-join:
    docker:
      - image: cimg/base:2023.09
    resource_class: small
    steps:
      - run:
          name: "Noop"
          command: echo Noop

  end:
    docker:
      - image: cimg/base:2023.09
    resource_class: small
    steps:
      - run:
          name: "Noop"
          command: echo Noop

  bench-summary:
    machine:
      image: ubuntu-2204:2023.07.2
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Assemble benchmark summary from uploaded logs"
          command: ./scripts/ci/assemble_e2e_benchmark.sh

  # Deploy & release jobs.
  deploy-and-release:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: medium
    steps:
      - *checkout
      - *setup_env
      - run:
          name: "Release to dockerhub"
          command: |
            should_release || exit 0
            deploy_dockerhub noir
            deploy_dockerhub aztec
            deploy_dockerhub cli
            deploy_dockerhub aztec-faucet
            deploy_dockerhub mainnet-fork
      - run:
          name: "Release canary to NPM: bb.js"
          command: |
            should_release || exit 0
            deploy_npm bb.js canary
      - run:
          name: "Release canary to NPM: yarn-project"
          command: |
            should_release || exit 0
            yarn-project/deploy_npm.sh canary
      - run:
          name: "Release latest to NPM: bb.js"
          command: |
            should_release || exit 0
            deploy_npm bb.js latest
      - run:
          name: "Release latest to NPM: yarn-project"
          command: |
            should_release || exit 0
            yarn-project/deploy_npm.sh latest
      - run:
          name: "Release canary to NPM: l1-contracts"
          command: |
            should_release || exit 0
            deploy_npm l1-contracts canary
      - run:
          name: "Release latest to NPM: l1-contracts"
          command: |
            should_release || exit 0
            deploy_npm l1-contracts latest
      - run:
          name: "Deploy mainnet fork"
          command: |
            should_deploy || exit 0
            deploy_terraform_services iac/mainnet-fork
      - run:
          name: "Deploy L1 contracts to mainnet fork"
          working_directory: l1-contracts
          command: |
            should_deploy || exit 0
            ./scripts/ci_deploy_contracts.sh
      - run:
          name: "Deploy P2P bootstrap servers to AWS"
          command: |
            should_deploy 0 || exit 0
            # Export variables for Terraform.
            export TF_VAR_BOOTNODE_1_PRIVATE_KEY=$BOOTNODE_1_PRIVATE_KEY
            export TF_VAR_BOOTNODE_2_PRIVATE_KEY=$BOOTNODE_2_PRIVATE_KEY
            deploy_terraform_services yarn-project/p2p-bootstrap aztec
      - run:
          name: "Deploy Aztec Nodes to AWS"
          command: |
            should_deploy 0 || exit 0
            export TF_VAR_BOOTNODE_1_PEER_ID=$BOOTNODE_1_PEER_ID
            export TF_VAR_BOOTNODE_2_PEER_ID=$BOOTNODE_2_PEER_ID
            export TF_VAR_SEQ_1_PUBLISHER_PRIVATE_KEY=$SEQ_1_PUBLISHER_PRIVATE_KEY
            export TF_VAR_SEQ_2_PUBLISHER_PRIVATE_KEY=$SEQ_2_PUBLISHER_PRIVATE_KEY
            export TF_VAR_NODE_1_PRIVATE_KEY=$NODE_1_PRIVATE_KEY
            export TF_VAR_NODE_2_PRIVATE_KEY=$NODE_2_PRIVATE_KEY
            # Check if l1-contracts have changed
            if [ "$CONTRACTS_DEPLOYED" -eq 1 ]; then
              echo "Contracts have changed, taint nodes to force redeploy.."
              deploy_terraform_services yarn-project/aztec-node aztec aztec-node "aws_ecs_task_definition.aztec-node[0],aws_ecs_task_definition.aztec-node[1]"
            else
              deploy_terraform_services yarn-project/aztec-node aztec
            fi
      - run:
          name: "Deploy Aztec Faucet to AWS"
          command: |
            should_deploy 0 || exit 0
            export TF_VAR_FAUCET_PRIVATE_KEY=$FAUCET_PRIVATE_KEY
            deploy_terraform_services yarn-project/aztec-faucet aztec

# Repeatable config for defining the workflow below.
defaults: &defaults
  filters:
    tags:
      only: /^aztec-packages-v.*/
    # We would like to ignore release-please branches,
    # but doing so breaks github status checks:
    # the PR spins as it waits for the status check to complete,
    # which never happens because the branch is ignored.
    # Long term solution would require disabling the status checks on `master`
    # when the *source branch* on the PR release-please.
    # branches:
    #   ignore:
    #     - /^release-please--.*/
  context:
    - build
    - slack
  post-steps:
    - slack/notify:
        event: fail
        branch_pattern: "master"

defaults_yarn_project: &defaults_yarn_project
  requires:
    - yarn-project
  <<: *defaults

defaults_yarn_project_prod: &defaults_yarn_project_prod
  requires:
    - yarn-project-prod
  <<: *defaults

defaults_deploy: &defaults_deploy
  requires:
    - end
  <<: *defaults

e2e_test: &e2e_test
  requires:
    - e2e-join
  <<: *defaults

bb_test: &bb_test
  requires:
    - barretenberg-x86_64-linux-clang-assert
  <<: *defaults

# Workflows.
workflows:
  setup-workflow:
    jobs:
      - generate-config
  system:
    when:
      # Used to generate a dynamic 'system' workflow
      # This is rewritten to 'system' on the real workflow (otherwise this is ignored by circleci)
      equal: [NEVER, << pipeline.parameters.workflow >>]
    jobs:
      # Noir
      - noir-x86_64: *defaults
      - noir-arm64: *defaults
      - noir-ecr-manifest:
          requires:
            - noir-x86_64
            - noir-arm64
          <<: *defaults
      - noir-packages: *defaults
      - noir-compile-acir-tests:
          requires:
            - noir-ecr-manifest
          <<: *defaults

      # Transpiler
      - avm-transpiler: *defaults

      # Barretenberg
      - barretenberg-x86_64-linux-gcc: *defaults
      - barretenberg-x86_64-linux-clang: *defaults
      - barretenberg-x86_64-linux-clang-assert: *defaults
      - barretenberg-x86_64-linux-clang-fuzzing: *defaults
      - barretenberg-wasm-linux-clang: *defaults
      - barretenberg-x86_64-linux-clang-sol: *defaults
      - barretenberg-bench:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - barretenberg-proof-system-tests: *bb_test
      - barretenberg-dsl-tests: *bb_test
      - barretenberg-tests: *bb_test
      - barretenberg-stdlib-tests: *bb_test
      - barretenberg-stdlib-recursion-ultra-tests: *bb_test
      - barretenberg-join-split-tests: *bb_test
      - barretenberg-acir-tests-bb:
          requires:
            - barretenberg-x86_64-linux-clang-assert
            - noir-compile-acir-tests
          <<: *defaults
      - barretenberg-docs: *defaults
      - bb-js:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - bb-js-tests:
          requires:
            - bb-js
          <<: *defaults
      - bb-js-acir-tests:
          requires:
            - bb-js
            - noir-compile-acir-tests
          <<: *defaults

      - l1-contracts: *defaults

      - mainnet-fork: *defaults

      - yellow-paper: *defaults

      - boxes-files: *defaults

      - noir-projects:
          requires:
            - avm-transpiler
            - noir-ecr-manifest
          <<: *defaults

      # Yarn Project
      - yarn-project-base:
          requires:
            - avm-transpiler
            - l1-contracts
            - bb-js
            - noir-packages
            - noir-projects
            - boxes-files
          <<: *defaults
      - yarn-project:
          requires:
            - yarn-project-base
          <<: *defaults
      - yarn-project-prod: *defaults_yarn_project
      - yarn-project-formatting: *defaults_yarn_project
      - yarn-project-tests: *defaults_yarn_project
      - end-to-end: *defaults_yarn_project
      - build-docs: *defaults_yarn_project

      # Artifacts
      - aztec-package: *defaults_yarn_project_prod
      - cli: *defaults_yarn_project_prod
      - aztec-faucet: *defaults_yarn_project_prod

      # Boxes.
      - boxes:
          requires:
            - aztec-package
          <<: *defaults
      - boxes-vanilla:
          requires:
            - boxes
          <<: *defaults
      - boxes-react:
          requires:
            - boxes
          <<: *defaults

      # End to end tests.
      - e2e-join:
          requires:
            - end-to-end
            - aztec-package
            - cli
          <<: *defaults
      - e2e-2-pxes: *e2e_test
      - e2e-note-getter: *e2e_test
      - e2e-deploy-contract: *e2e_test
      - e2e-lending-contract: *e2e_test
      - e2e-token-contract: *e2e_test
      - e2e-blacklist-token-contract: *e2e_test
      # TODO(3458): Investigate intermittent failure
      # - e2e-slow-tree: *e2e_test
      - e2e-sandbox-example: *e2e_test
      - e2e-state-vars: *e2e_test
      - e2e-block-building: *e2e_test
      - e2e-nested-contract: *e2e_test
      - e2e-static-calls: *e2e_test
      - e2e-delegate-calls: *e2e_test
      - e2e-non-contract-account: *e2e_test
      - e2e-multiple-accounts-1-enc-key: *e2e_test
      - e2e-cli: *e2e_test
      - e2e-cross-chain-messaging: *e2e_test
      - e2e-public-cross-chain-messaging: *e2e_test
      - e2e-public-to-private-messaging: *e2e_test
      - e2e-account-contracts: *e2e_test
      - e2e-escrow-contract: *e2e_test
      - e2e-inclusion-proofs-contract: *e2e_test
      - e2e-pending-commitments-contract: *e2e_test
      - e2e-ordering: *e2e_test
      - e2e-counter: *e2e_test
      - e2e-private-voting: *e2e_test
      - uniswap-trade-on-l1-from-l2: *e2e_test
      - integration-l1-publisher: *e2e_test
      - integration-archiver-l1-to-l2: *e2e_test
      - e2e-persistence: *e2e_test
      - e2e-browser: *e2e_test
      - e2e-card-game: *e2e_test
      - e2e-avm-simulator: *e2e_test
      - e2e-fees: *e2e_test
      - pxe: *e2e_test
      - cli-docs-sandbox: *e2e_test
      - e2e-docs-examples: *e2e_test
      - guides-writing-an-account-contract: *e2e_test
      - guides-dapp-testing: *e2e_test
      - guides-sample-dapp: *e2e_test
      - guides-up-quick-start: *e2e_test

      # Everything that must complete before deployment.
      - end:
          requires:
            - mainnet-fork
            - e2e-2-pxes
            - e2e-note-getter
            - e2e-deploy-contract
            - e2e-lending-contract
            - e2e-token-contract
            - e2e-blacklist-token-contract
            - e2e-sandbox-example
            - e2e-state-vars
            - e2e-block-building
            - e2e-nested-contract
            - e2e-static-calls
            - e2e-delegate-calls
            - e2e-non-contract-account
            - e2e-multiple-accounts-1-enc-key
            - e2e-cli
            - e2e-cross-chain-messaging
            - e2e-public-cross-chain-messaging
            - e2e-public-to-private-messaging
            - e2e-account-contracts
            - e2e-escrow-contract
            - e2e-inclusion-proofs-contract
            - e2e-pending-commitments-contract
            - e2e-ordering
            - e2e-counter
            - e2e-private-voting
            - uniswap-trade-on-l1-from-l2
            - integration-l1-publisher
            - integration-archiver-l1-to-l2
            - e2e-persistence
            - e2e-browser
            - e2e-card-game
            - e2e-avm-simulator
            - e2e-fees
            - pxe
            - boxes-vanilla
            - boxes-react
            - cli-docs-sandbox
            - e2e-docs-examples
            - guides-writing-an-account-contract
            - guides-dapp-testing
            - guides-sample-dapp
            - guides-up-quick-start
            - yellow-paper
          <<: *defaults

      # Benchmark jobs.
      - bench-publish-rollup: *e2e_test
      - bench-process-history: *e2e_test
      - bench-summary:
          requires:
            - bench-publish-rollup
            - bench-process-history
          <<: *defaults

      # Production releases.
      - deploy-and-release: *defaults_deploy
