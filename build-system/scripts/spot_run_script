#!/bin/bash
# Runs a test script on a remote spot instance. Arguments are:
# 1. CONTENT_HASH: Content hash for our repository contents. Used to identify spot jobs and image tags.
# 2. CPUS: Number of cpus on spot request.
# 3... ARGS: Script and arguments to run.
#
# Env vars:
# JOB_NAME: Set within setup-env. The job name as per CI.
[ -n "${BUILD_SYSTEM_DEBUG:-}" ] && set -x # conditionally trace
set -eu
CONTENT_HASH=$1
CPUS=$2
shift 2

# On any sort of exit (error or not).
function on_exit {
    set +e

    if [ -n "$IP" ]; then
        echo "Terminating spot instance..."
        ssh -F $SSH_CONFIG_PATH $IP sudo halt -p > /dev/null 2>&1
    fi

    # Kill spot request so it doesn't count against quota.
    if [ -f "sir-$CONTENT_HASH:$JOB_NAME.txt" ]; then
        SIR=$(cat sir-$CONTENT_HASH:$JOB_NAME.txt)
        echo "Cancelling spot instance request $SIR..."
        aws ec2 cancel-spot-instance-requests --spot-instance-request-ids $SIR >/dev/null 2>&1 || true
    fi
}
trap on_exit EXIT

# Get spot instance.
IP=$(retry request_spot $CONTENT_HASH:$JOB_NAME $CPUS)

if [ -z "$IP" ]; then
    echo "Failed to get spot instance."
    exit 1
fi

# Run script remotely on spot instance, capturing success or failure.
remote_run_script $IP $@