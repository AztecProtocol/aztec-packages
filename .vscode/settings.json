{
  "files.associations": {
    "*.tf": "terraform",
    "*.tfvars": "terraform",
    "Makefile.*": "makefile",
    "type_traits": "cpp",
    "algorithm": "cpp",
    "__bit_reference": "cpp",
    "__config": "cpp",
    "__debug": "cpp",
    "__errc": "cpp",
    "__functional_base": "cpp",
    "__hash_table": "cpp",
    "__locale": "cpp",
    "__mutex_base": "cpp",
    "__node_handle": "cpp",
    "__nullptr": "cpp",
    "__split_buffer": "cpp",
    "__string": "cpp",
    "__threading_support": "cpp",
    "__tree": "cpp",
    "__tuple": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "bit": "cpp",
    "bitset": "cpp",
    "cctype": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "complex": "cpp",
    "condition_variable": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "exception": "cpp",
    "forward_list": "cpp",
    "fstream": "cpp",
    "functional": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "ios": "cpp",
    "iosfwd": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "iterator": "cpp",
    "limits": "cpp",
    "list": "cpp",
    "locale": "cpp",
    "map": "cpp",
    "memory": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "ostream": "cpp",
    "queue": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "set": "cpp",
    "shared_mutex": "cpp",
    "sstream": "cpp",
    "stack": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "string": "cpp",
    "string_view": "cpp",
    "strstream": "cpp",
    "system_error": "cpp",
    "thread": "cpp",
    "tuple": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "utility": "cpp",
    "variant": "cpp",
    "vector": "cpp",
    "hash_map": "cpp",
    "hash_set": "cpp",
    "*.tcc": "cpp",
    "memory_resource": "cpp",
    "cfenv": "cpp",
    "filesystem": "cpp",
    "version": "cpp",
    "compare": "cpp",
    "concepts": "cpp",
    "semaphore": "cpp",
    "ranges": "cpp",
    "stop_token": "cpp",
    "__hash": "cpp",
    "__memory": "cpp",
    "__bits": "cpp",
    "charconv": "cpp",
    "span": "cpp",
    "*.inc": "cpp",
    "*.macros": "cpp",
    "*.tpp": "cpp"
  },
  "solidity.compileUsingRemoteVersion": "v0.6.10+commit.00c0fcaf",
  "search.exclude": {
    "**/.yarn": true,
    "**/.yalc": true,
    "**/node_modules": true,
    "**/.pnp.*": true
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  ///////////////////////////////////////
  // C++/Circuits settings
  ///////////////////////////////////////
  "[cpp]": {
     "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
      "editor.formatOnSave": true,
  },
  //
  // Clangd. Note that this setting may be overridden by user settings
  // to the default value "clangd".
  //
  "clangd.path": "clangd-15",
  //
  // CMake
  //
  // Location of base CMakeLists file
  "cmake.sourceDirectory": "${workspaceFolder}/circuits/cpp/",
  "cmake.buildDirectory": "${workspaceFolder}/circuits/cpp/build",
  //
  // C/C++ (should be disabled)
  //
  // Make sure all C++ IntelliSense features are disabled
  // and don't interfere with clangd
  "C_Cpp.intelliSenseEngine": "disabled",
  "C_Cpp.autocomplete": "disabled",
  "C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes": false,
  "C_Cpp.codeAnalysis.runAutomatically": false,
  "C_Cpp.configurationWarnings": "disabled",
  "C_Cpp.debugShortcut": false,
  "C_Cpp.default.enableConfigurationSquiggles": false,
  "C_Cpp.formatting": "disabled",
  "C_Cpp.vcpkg.enabled": false,
  "C_Cpp.default.includePath": ["cpp/barretenberg/cpp/src"],
  //
  // TestMate C++
  //
  // Ensures tests are run from the `build` directory
  // which ensures SRS can be read
  "testMate.cpp.test.workingDirectory": "${workspaceFolder}/circuits/cpp/build",
  // Filter all binaries that are not tests
  "testMate.cpp.test.executables": "${workspaceFolder}/circuits/cpp/build/bin/*{test,Test,TEST}*",
  // End C++/Circuits settings
  ///////////////////////////////////////
}
