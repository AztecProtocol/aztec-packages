apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ethereum.replicas }}
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: ethereum
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: ethereum
    spec:
      {{- if .Values.network.public }}
      hostNetwork: true
      {{- end }}
      initContainers:
        - name: prepare-genesis
          image: node:18-alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              cd /tmp
              npm init -y
              npm install ethers@6
              cat > derive.js << 'EOF'
              const { ethers } = require('ethers');
              const fs = require('fs');

              async function main() {
                const mnemonic = process.env.DEPLOYMENT_MNEMONIC;
                const wallet = ethers.Wallet.fromPhrase(mnemonic);

                const genesis = JSON.parse(fs.readFileSync('/genesis-template/genesis.json', 'utf8'));

                genesis.alloc[wallet.address] = {
                  balance: '0x3635c9adc5dea00000' // 1000 ETH in wei
                };

                // We rely on the deterministic deployment proxy to deploy the contracts
                // It comes preloaded on anvil (https://book.getfoundry.sh/tutorials/create2-tutorial)
                // But we need to do it ourselves for reth
                // Addresses/tx in https://github.com/Arachnid/deterministic-deployment-proxy/tree/master
                const deployer = '0x3fab184622dc19b6109349b94811493bf2a45362'
                genesis.alloc[deployer] = {
                  balance: '0x3635c9adc5dea00000' // 1000 ETH in wei
                };

                fs.writeFileSync('/genesis-output/genesis.json', JSON.stringify(genesis, null, 2));
              }

              main().catch(console.error);
              EOF
              node derive.js
          env:
            - name: DEPLOYMENT_MNEMONIC
              value: {{ .Values.aztec.l1DeploymentMnemonic }}
          volumeMounts:
            - name: genesis-template
              mountPath: /genesis-template
            - name: genesis-output
              mountPath: /genesis-output
      containers:
        - name: ethereum
          image: "{{ .Values.images.reth.image }}"
          imagePullPolicy: {{ .Values.images.reth.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - >-
              reth node {{ include "helpers.flag" (list "http.addr" "0.0.0.0") }}
              {{- include "helpers.flag" (list "http.port" .Values.ethereum.service.port) }}
              {{- include "helpers.flag" (list "builder.gaslimit" .Values.ethereum.gasLimit) }}
              {{- include "helpers.flag" (list "txpool.gas-limit" .Values.ethereum.gasLimit) }}
              {{- include "helpers.flag" (list "dev.block-time" .Values.ethereum.blockTime) }}
              --chain /genesis/genesis.json
              --datadir /data
              --dev
          ports:
            - containerPort: {{ .Values.ethereum.service.port }}
              name: reth
          volumeMounts:
            - name: shared-volume
              mountPath: /data
            - name: genesis-output
              mountPath: /genesis
          resources:
            {{- toYaml .Values.ethereum.resources | nindent 12 }}
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: {{ include "aztec-network.fullname" . }}-ethereum-pvc
        - name: genesis-template
          configMap:
            name: {{ include "aztec-network.fullname" . }}-reth-genesis
        - name: genesis-output
          emptyDir: {}
{{if not .Values.network.public }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: {{ .Values.ethereum.service.type }}
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: ethereum
  ports:
    - protocol: TCP
      port: {{ .Values.ethereum.service.port }}
      targetPort: {{ .Values.ethereum.service.targetPort }}
      {{- if and (eq .Values.ethereum.service.type "NodePort") .Values.ethereum.service.nodePort }}
      nodePort: {{ .Values.ethereum.service.nodePort }}
      {{- end }}
{{ end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aztec-network.fullname" . }}-reth-genesis
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
data:
  genesis.json: |
    {{ .Files.Get "files/config/genesis.json" | nindent 4 }}
---
{{- if gt (.Values.ethereum.replicas | int) 0 }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-pvc
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.ethereum.storage }}
{{- end }}
---