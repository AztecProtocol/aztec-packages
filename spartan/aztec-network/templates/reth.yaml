apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ethereum.replicas }}
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: ethereum
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: ethereum
    spec:
      containers:
        - name: ethereum
          image: "{{ .Values.images.reth.image }}"
          imagePullPolicy: {{ .Values.images.reth.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - >-
              reth node {{ include "helpers.flag" (list "http.addr" "0.0.0.0") }}
              {{- include "helpers.flag" (list "http.port" .Values.ethereum.service.port) }}
              {{- include "helpers.flag" (list "builder.gaslimit" .Values.ethereum.gasLimit) }}
              {{- include "helpers.flag" (list "txpool.gas-limit" .Values.ethereum.gasLimit) }}
              {{- include "helpers.flag" (list "datadir" .Values.ethereum.pvc.path) }}
              --dev
          ports:
            - containerPort: {{ .Values.ethereum.service.port }}
              name: reth
          volumeMounts:
            - name: data
              mountPath: /data
          # readinessProbe:
          #   exec:
          #     command:
          #       - sh
          #       - -c
          #       - |
          #         wget -qO- --post-data='{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}' \
          #         --header='Content-Type: application/json' \
          #         127.0.0.1:{{ .Values.ethereum.service.port }} \
          #         | grep -q '"result":"reth'
          #   initialDelaySeconds: {{ .Values.ethereum.readinessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.ethereum.readinessProbe.periodSeconds }}
          #   timeoutSeconds: {{ .Values.ethereum.readinessProbe.timeoutSeconds }}
          #   successThreshold: {{ .Values.ethereum.readinessProbe.successThreshold }}
          #   failureThreshold: {{ .Values.ethereum.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.ethereum.resources | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "aztec-network.fullname" . }}-ethereum-data
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: {{ .Values.ethereum.service.type }}
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: ethereum
  ports:
    - protocol: TCP
      port: {{ .Values.ethereum.service.port }}
      targetPort: {{ .Values.ethereum.service.targetPort }}
      {{- if and (eq .Values.ethereum.service.type "NodePort") .Values.ethereum.service.nodePort }}
      nodePort: {{ .Values.ethereum.service.nodePort }}
      {{- end }}
---
{{if .Values.network.public }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-lb
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: ethereum
  ports:
    - protocol: TCP
      port: {{ .Values.ethereum.service.port }}
      targetPort: {{ .Values.ethereum.service.targetPort }}
      {{- if and (eq .Values.ethereum.service.type "NodePort") .Values.ethereum.service.nodePort }}
      nodePort: {{ .Values.ethereum.service.nodePort }}
      {{- end }}
{{ end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-data
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.ethereum.pvc.size }}
---