apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ethereum.replicas }}
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: ethereum
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: ethereum
    spec:
      containers:
        - name: ethereum
          image: "{{ .Values.images.foundry.image }}"
          imagePullPolicy: {{ .Values.images.foundry.pullPolicy }}
          command: ["/bin/sh", "/scripts/run-anvil.sh"]
          ports:
            - containerPort: {{ .Values.ethereum.service.port }}
              name: anvil
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  wget -qO- --post-data='{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}' \
                  --header='Content-Type: application/json' \
                  127.0.0.1:{{ .Values.ethereum.service.port }} \
                  | grep -q '"result":"anvil'
            initialDelaySeconds: {{ .Values.ethereum.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ethereum.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ethereum.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ethereum.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.ethereum.readinessProbe.failureThreshold }}
          volumeMounts:
            - name: shared-volume
              mountPath: /state_exports
            - name: scripts
              mountPath: /scripts
          resources:
            {{- toYaml .Values.ethereum.resources | nindent 12 }}
      volumes:
        - name: shared-volume
          persistentVolumeClaim:
            claimName: {{ include "aztec-network.fullname" . }}-ethereum-pvc
        - name: scripts
          configMap:
            name: {{ include "aztec-network.fullname" . }}-ethereum-scripts
            defaultMode: 0755
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-pvc
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.ethereum.storage }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-scripts
data:
  run-anvil.sh: |
    #!/bin/sh

    STATE_FILE="/state_exports/state.json"

    if [ -f "$STATE_FILE" ]; then
      echo "State file found. Loading existing state."
      anvil \
      --host 0.0.0.0 \
      --load-state /state_exports/ \
      --dump-state /state_exports/ \
      {{ include "helpers.flag" (list "block-time" .Values.ethereum.blockTime) }} \
      {{ include "helpers.flag" (list "chain-id" .Values.ethereum.chainId) }} \
      {{ include "helpers.flag" (list "gas-limit" .Values.ethereum.gasLimit) }} \
      {{ include "helpers.flag" (list "fork-url" .Values.ethereum.forkUrl) }} \
      {{ include "helpers.flag" (list "fork-block-number" .Values.ethereum.forkBlockNumber) }} \
      {{ include "helpers.flag" (list "accounts" .Values.validator.replicas) }} \
      -p {{ .Values.ethereum.service.port }}
    else
      echo "No state file found. Starting with a fresh state and enabling state dumping."
      anvil \
      --host 0.0.0.0 \
      --dump-state /state_exports/ \
      {{ include "helpers.flag" (list "block-time" .Values.ethereum.blockTime) }} \
      {{ include "helpers.flag" (list "chain-id" .Values.ethereum.chainId) }} \
      {{ include "helpers.flag" (list "gas-limit" .Values.ethereum.gasLimit) }} \
      {{ include "helpers.flag" (list "fork-url" .Values.ethereum.forkUrl) }} \
      {{ include "helpers.flag" (list "fork-block-number" .Values.ethereum.forkBlockNumber) }} \
      {{ include "helpers.flag" (list "accounts" .Values.validator.replicas) }} \
      -p {{ .Values.ethereum.service.port }}
    fi
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: {{ .Values.ethereum.service.type }}
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: ethereum
  ports:
    - protocol: TCP
      port: {{ .Values.ethereum.service.port }}
      targetPort: {{ .Values.ethereum.service.targetPort }}
      {{- if and (eq .Values.ethereum.service.type "NodePort") .Values.ethereum.service.nodePort }}
      nodePort: {{ .Values.ethereum.service.nodePort }}
      {{- end }}
---
{{if .Values.network.public }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-ethereum-lb
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: ethereum
  ports:
    - protocol: TCP
      port: {{ .Values.ethereum.service.port }}
      targetPort: {{ .Values.ethereum.service.targetPort }}
      {{- if and (eq .Values.ethereum.service.type "NodePort") .Values.ethereum.service.nodePort }}
      nodePort: {{ .Values.ethereum.service.nodePort }}
      {{- end }}
---
{{ end }}