apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aztec-network.fullname" . }}-prover-node
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "aztec-network.fullname" . }}-prover-node
  replicas: {{ .Values.proverNode.replicas }}
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: prover-node
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: prover-node
    spec:
      {{- if .Values.network.public }}
      hostNetwork: true
      {{- include "aztec-network.publicAntiAffinity" . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "aztec-network.fullname" . }}-node
      initContainers:
        {{- include "aztec-network.serviceAddressSetupContainer" . | nindent 8 }}
        {{- include "aztec-network.p2pSetupContainer" . | nindent 8 }}
        - name: wait-for-services
          image: {{ .Values.images.aztec.image }}
          command:
            - /bin/bash
            - -c
            - |
              source /shared/config/service-addresses
              until curl -s -X POST -H 'Content-Type: application/json' \
                -d '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}' \
                ${ETHEREUM_HOST} | grep -q reth; do
                echo "Waiting for Ethereum node..."
                sleep 5
              done
              echo "Ethereum node is ready!"

              if [ "${PROVER_BROKER_ENABLED}" == "false" ]; then
                until curl -s -X POST ${PROVER_BROKER_HOST}/status; do
                  echo "Waiting for broker ${PROVER_BROKER_HOST} ..."
                  sleep 5
                done
                echo "Broker is ready!"
              else
                echo "Using built-in job broker"
              fi

              {{- if .Values.telemetry.enabled }}
              until curl --head --silent {{ include "aztec-network.otelCollectorMetricsEndpoint" . }} > /dev/null; do
                echo "Waiting for OpenTelemetry collector..."
                sleep 5
              done
              echo "OpenTelemetry collector is ready!"
              {{- end }}
              until curl --head --silent $BOOT_NODE_HOST/status; do
                echo "Waiting for boot node..."
                sleep 5
              done
              echo "Boot node is ready!"
          volumeMounts:
            - name: config
              mountPath: /shared/config
          env:
            - name: PROVER_BROKER_ENABLED
              value: "{{ .Values.proverNode.proverBroker.enabled }}"

        - name: configure-prover-env
          image: "{{ .Values.images.aztec.image }}"
          imagePullPolicy: {{ .Values.images.aztec.pullPolicy }}
          command:
            - "/bin/bash"
            - "-c"
            - "cp /scripts/configure-prover-env.sh /tmp/configure-prover-env.sh && \
               chmod +x /tmp/configure-prover-env.sh && \
               source /shared/config/service-addresses && \
               /tmp/configure-prover-env.sh ${BOOT_NODE_HOST}"
          volumeMounts:
            - name: contracts-env
              mountPath: /shared/contracts
            - name: scripts
              mountPath: /scripts
            - name: config
              mountPath: /shared/config

      containers:
        - name: prover-node
          image: "{{ .Values.images.aztec.image }}"
          imagePullPolicy: {{ .Values.images.aztec.pullPolicy }}
          command:
            - "/bin/bash"
            - "-c"
            - |
              source /shared/contracts/contracts.env && \
              source /shared/p2p/p2p-addresses && \
              source /shared/config/service-addresses && \
              env && \
              node --no-warnings /usr/src/yarn-project/aztec/dest/bin/index.js start --prover-node --archiver
          volumeMounts:
            - name: contracts-env
              mountPath: /shared/contracts
            - name: p2p-addresses
              mountPath: /shared/p2p
            - name: config
              mountPath: /shared/config
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: AZTEC_PORT
              value: "{{ .Values.proverNode.service.nodePort }}"
            - name: LOG_LEVEL
              value: "{{ .Values.proverNode.logLevel }}"
            - name: LOG_JSON
              value: "1"
            - name: DEBUG
              value: "{{ .Values.proverNode.debug }}"
            - name: PROVER_REAL_PROOFS
              value: "{{ .Values.aztec.realProofs }}"
            - name: PROVER_AGENT_COUNT
              value: "{{ .Values.proverNode.proverAgent.count }}"
            - name: PROVER_AGENT_POLL_INTERVAL_MS
              value: "{{ .Values.proverNode.proverAgent.pollIntervalMs }}"
            - name: PROVER_AGENT_PROOF_TYPES
              value: {{ join "," .Values.proverNode.proverAgent.proofTypes | quote }}
            - name: PROVER_BROKER_ENABLED
              value: "{{ .Values.proverNode.proverBroker.enabled }}"
            - name: PROVER_BROKER_POLL_INTERVAL_MS
              value: "{{ .Values.proverNode.proverBroker.pollIntervalMs }}"
            - name: PROVER_BROKER_JOB_TIMEOUT_MS
              value: "{{ .Values.proverNode.proverBroker.jobTimeoutMs }}"
            - name: PROVER_BROKER_JOB_MAX_RETRIES
              value: "{{ .Values.proverNode.proverBroker.jobMaxRetries }}"
            - name: PROVER_BROKER_DATA_DIRECTORY
              value: "{{ .Values.proverNode.proverBroker.dataDirectory }}"
            - name: PROVER_PUBLISHER_PRIVATE_KEY
              value: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name={{ .Release.Name }},service.namespace={{ .Release.Namespace }},service.version={{ .Chart.AppVersion }},environment={{ .Values.environment | default "production" }}
            - name: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
              value: {{ include "aztec-network.otelCollectorMetricsEndpoint" . | quote }}
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: {{ include "aztec-network.otelCollectorTracesEndpoint" . | quote }}
            - name: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
              value: {{ include "aztec-network.otelCollectorLogsEndpoint" . | quote }}
            - name: L1_CHAIN_ID
              value: "{{ .Values.ethereum.chainId }}"
            - name: P2P_ENABLED
              value: "{{ .Values.proverNode.p2pEnabled }}"
            - name: P2P_TCP_LISTEN_ADDR
              value: "0.0.0.0:{{ .Values.proverNode.service.p2pTcpPort }}"
            - name: P2P_UDP_LISTEN_ADDR
              value: "0.0.0.0:{{ .Values.proverNode.service.p2pUdpPort }}"
            - name: ETHEREUM_SLOT_DURATION
              value: "{{ .Values.ethereum.blockTime }}"
            - name: AZTEC_SLOT_DURATION
              value: "{{ .Values.aztec.slotDuration }}"
            - name: AZTEC_EPOCH_DURATION
              value: "{{ .Values.aztec.epochDuration }}"
            - name: AZTEC_EPOCH_PROOF_CLAIM_WINDOW_IN_L2_SLOTS
              value: "{{ .Values.aztec.epochProofClaimWindow }}"
          ports:
            - containerPort: {{ .Values.proverNode.service.nodePort }}
            - containerPort: {{ .Values.proverNode.service.p2pTcpPort }}
            - containerPort: {{ .Values.proverNode.service.p2pUdpPort }}
              protocol: UDP
          resources:
            {{- toYaml .Values.proverNode.resources | nindent 12 }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "aztec-network.fullname" . }}-scripts
        - name: contracts-env
          emptyDir: {}
        - name: p2p-addresses
          emptyDir: {}
        - name: config
          emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: shared-volume
      labels:
        {{- include "aztec-network.labels" . | nindent 8 }}
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.proverNode.storage }}
{{if not .Values.network.public }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-prover-node
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: prover-node
  ports:
    - port: {{ .Values.proverNode.service.nodePort }}
      name: node
    - port: {{ .Values.proverNode.service.p2pTcpPort }}
      name: p2p-tcp
    - port: {{ .Values.proverNode.service.p2pUdpPort }}
      name: p2p-udp
      protocol: UDP
{{ end }}
