apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aztec-network.fullname" . }}-validator
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "aztec-network.fullname" . }}-validator
  replicas: {{ .Values.validator.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: validator
  {{- if not .Values.storage.localSsd }}
  volumeClaimTemplates:
    - metadata:
        name: validator-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.validator.storageSize }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: validator
    spec:
      {{- if .Values.network.gke }}
      nodeSelector:
        local-ssd: "{{ .Values.storage.localSsd }}"
        node-type: network
      {{- end }}

      {{- if .Values.network.public }}
      serviceAccountName: {{ include "aztec-network.fullname" . }}-node
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- include "aztec-network.publicAntiAffinity" . | nindent 6 }}
      {{- end }}
      terminationGracePeriodSeconds: 5  # default is 30 - speed up initcontainer termination
      initContainers:
        {{- include "aztec-network.combinedAllSetupContainer" . | nindent 8 }}
        {{- include "aztec-network.otelResourceSetupContainer" . | nindent 8 }}

        # Get the private key from the mnemonic - based on the pod replica index
        - name: get-private-key
          image: {{ .Values.images.foundry.image }}
          imagePullPolicy: {{ .Values.images.foundry.pullPolicy }}
          command:
            - "/bin/sh"
            - "-c"
            - |
              source /scripts/get-private-key.sh
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: config
              mountPath: /shared/config
          env:
            - name: KEY_INDEX_START
              value: {{ .Values.aztec.validatorKeyIndexStart | quote }}
            - name: MNEMONIC
              value: {{ .Values.aztec.l1DeploymentMnemonic }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

        {{- include "aztec-network.combinedWaitAndConfigureContainer" . | nindent 8 }}

      containers:
        - name: validator
          {{- include "aztec-network.image" . | nindent 10 }}
          command:
            - "/bin/bash"
            - "-c"
            - |
              source /shared/contracts/contracts.env && \
              source /shared/config/p2p-addresses && \
              source /shared/config/service-addresses && \
              source /shared/config/keys.env && \
              source /shared/config/otel-resource && \
              env && \
              node --no-warnings /usr/src/yarn-project/aztec/dest/bin/index.js start --node --archiver --sequencer
          startupProbe:
            httpGet:
              path: /status
              port: {{ .Values.validator.service.nodePort }}
            failureThreshold: {{ .Values.validator.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.validator.startupProbe.periodSeconds }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - curl -fSs http://127.0.0.1:{{ .Values.validator.service.nodePort }}/status
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 3
          volumeMounts:
            - name: contracts-env
              mountPath: /shared/contracts
            - name: config
              mountPath: /shared/config
            - name: validator-data
              mountPath: {{ .Values.validator.dataDir }}
          env:
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: K8S_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PROVER_REAL_PROOFS
              value: "{{ .Values.aztec.realProofs }}"
            - name: NODE_OPTIONS
              value: "--max-old-space-size={{ .Values.validator.maxOldSpaceSize}}"
            - name: AZTEC_PORT
              value: "{{ .Values.validator.service.nodePort }}"
            - name: LOG_LEVEL
              value: "{{ .Values.validator.logLevel }}"
            - name: LOG_JSON
              value: "1"
            - name: P2P_ENABLED
              value: "{{ .Values.validator.p2p.enabled }}"
            - name: P2P_GOSSIPSUB_FLOOD_PUBLISH
              value: "{{ .Values.validator.p2p.floodPublish }}"
            - name: VALIDATOR_DISABLED
              value: "{{ .Values.validator.validator.disabled }}"
            - name: VALIDATOR_REEXECUTE
              value: "{{ .Values.validator.validator.reexecute }}"
            - name: SEQ_MIN_TX_PER_BLOCK
              value: "{{ .Values.validator.sequencer.minTxsPerBlock }}"
            - name: SEQ_MAX_TX_PER_BLOCK
              value: "{{ .Values.validator.sequencer.maxTxsPerBlock }}"
            - name: SEQ_ENFORCE_TIME_TABLE
              value: "{{ .Values.validator.sequencer.enforceTimeTable }}"
            - name: L1_CHAIN_ID
              value: "{{ .Values.ethereum.chainId }}"
            - name: ETHEREUM_SLOT_DURATION
              value: "{{ .Values.ethereum.blockTime }}"
            - name: AZTEC_SLOT_DURATION
              value: "{{ .Values.aztec.slotDuration }}"
            - name: AZTEC_EPOCH_DURATION
              value: "{{ .Values.aztec.epochDuration }}"
            - name: AZTEC_PROOF_SUBMISSION_WINDOW
              value: "{{ .Values.aztec.proofSubmissionWindow }}"
            - name: VALIDATOR_ATTESTATIONS_POLLING_INTERVAL_MS
              value: {{ .Values.validator.attestationPollingInterval | quote }}
            - name: ARCHIVER_POLLING_INTERVAL_MS
              value: {{ .Values.validator.archiverPollingInterval | quote }}
            - name: ARCHIVER_VIEM_POLLING_INTERVAL_MS
              value: {{ .Values.validator.viemPollingInterval | quote }}
            - name: L1_READER_VIEM_POLLING_INTERVAL_MS
              value: {{ .Values.validator.viemPollingInterval | quote }}
            - name: SEQ_VIEM_POLLING_INTERVAL_MS
              value: {{ .Values.validator.viemPollingInterval | quote }}
            - name: L1_FIXED_PRIORITY_FEE_PER_GAS
              value: {{ .Values.validator.l1FixedPriorityFeePerGas | quote }}
            - name: L1_GAS_LIMIT_BUFFER_PERCENTAGE
              value: {{ .Values.validator.l1GasLimitBufferPercentage | quote }}
            - name: L1_GAS_PRICE_MAX
              value: {{ .Values.validator.l1GasPriceMax | quote }}
            - name: DATA_DIRECTORY
              value: "{{ .Values.validator.dataDir }}"
            - name: DATA_STORE_MAP_SIZE_KB
              value: "{{ .Values.storage.dataStoreMapSize }}"
            - name: WS_DB_MAP_SIZE_KB
              value: "{{ .Values.storage.worldStateMapSize }}"
            - name: USE_GCLOUD_LOGGING
              value: "{{ .Values.telemetry.useGcloudLogging }}"
            - name: OTEL_EXCLUDE_METRICS
              value: "{{ .Values.telemetry.excludeMetrics }}"
            - name: TEST_ACCOUNTS
              value: "{{ .Values.aztec.testAccounts }}"
            - name: SPONSORED_FPC
              value: "{{ .Values.aztec.sponsoredFPC }}"
            - name: P2P_BOOTSTRAP_NODES_AS_FULL_PEERS
              value: "{{ .Values.network.p2pBootstrapNodesAsFullPeers }}"
            {{- if .Values.blobSink.enabled }}
            - name: BLOB_SINK_URL
              value: {{ include "aztec-network.blobSinkUrl" . }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.validator.service.nodePort }}
            - containerPort: {{ .Values.validator.service.p2pPort }}
            - containerPort: {{ .Values.validator.service.p2pPort }}
              protocol: UDP
          resources:
            {{- toYaml .Values.validator.resources | nindent 12 }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "aztec-network.fullname" . }}-scripts
            defaultMode: 0755
        - name: contracts-env
          emptyDir: {}
        - name: pxe-url
          emptyDir: {}
        - name: config
          emptyDir: {}
      {{- if .Values.storage.localSsd }}
        - name: validator-data
          emptyDir: {}
      {{ else }}
        - name: validator-data
          persistentVolumeClaim:
            claimName: validator-data
      {{- end }}
---
# If this is not a public network, create a headless service for StatefulSet DNS entries
{{ if not .Values.network.public }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-validator
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
    app: validator
spec:
  clusterIP: None
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: validator
  ports:
    - port: {{ .Values.validator.service.p2pPort }}
      name: p2p-tcp
      protocol: TCP
    - port: {{ .Values.validator.service.p2pPort }}
      name: p2p-udp
      protocol: UDP
    - port: {{ .Values.validator.service.nodePort }}
      name: node
      protocol: TCP
---
# If we want to send traffic to any validator, then we need a LoadBalancer service on top of a headless service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-validator-lb
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
    app: validator
spec:
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: validator
  ports:
    - port: {{ .Values.validator.service.nodePort }}
      name: node
      protocol: TCP
{{ end }}
