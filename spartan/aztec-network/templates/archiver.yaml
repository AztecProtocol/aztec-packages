{{- if .Values.archiver.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aztec-network.fullname" . }}-archiver
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "aztec-network.fullname" . }}-archiver
  replicas: {{ .Values.archiver.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "aztec-network.selectorLabels" . | nindent 6 }}
      app: archiver
  {{- if not .Values.storage.localSsd }}
  volumeClaimTemplates:
    - metadata:
        name: archiver-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.archiver.storageSize }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "aztec-network.selectorLabels" . | nindent 8 }}
        app: archiver
    spec:
      {{- if .Values.network.gke }}
      nodeSelector:
        local-ssd: "{{ .Values.storage.localSsd }}"
        node-type: network
      {{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- if .Values.network.public }}
      hostNetwork: true
      serviceAccountName: {{ include "aztec-network.fullname" . }}-node
      {{- include "aztec-network.publicAntiAffinity" . | nindent 6 }}
      {{- end }}
      initContainers:
        {{- include "aztec-network.serviceAddressSetupContainer" . | nindent 8 }}
        {{- include "aztec-network.otelResourceSetupContainer" . | nindent 8 }}
        {{- include "aztec-network.combinedWaitAndConfigureContainer" . | nindent 8 }}

      containers:
        - name: archiver
          {{- include "aztec-network.image" . | nindent 10 }}
          command:
            - /bin/bash
            - -c
            - |
              source /shared/contracts/contracts.env
              source /shared/config/service-addresses
              env

              node --no-warnings /usr/src/yarn-project/aztec/dest/bin/index.js start --archiver
          startupProbe:
            httpGet:
              path: /status
              port: {{ .Values.archiver.service.nodePort }}
            periodSeconds: {{ .Values.archiver.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.archiver.startupProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.archiver.service.nodePort }}
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 3
          volumeMounts:
            - name: config
              mountPath: /shared/config
            - name: archiver-data
              mountPath: {{ .Values.archiver.dataDir }}
            - name: contracts-env
              mountPath: /shared/contracts/contracts.env
              subPath: contracts.env
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OTEL_SERVICE_NAME
              value: archiver
            - name: K8S_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_OPTIONS
              value: "--max-old-space-size={{ .Values.archiver.maxOldSpaceSize}}"
            - name: AZTEC_PORT
              value: "{{ .Values.archiver.service.nodePort }}"
            - name: LOG_LEVEL
              value: "{{ .Values.archiver.logLevel }}"
            - name: LOG_JSON
              value: "1"
            - name: L1_CHAIN_ID
              value: "{{ .Values.ethereum.chainId }}"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name={{ .Release.Name }},service.namespace={{ .Release.Namespace }},service.version={{ .Chart.AppVersion }},environment={{ .Values.environment | default "production" }}
            - name: ETHEREUM_SLOT_DURATION
              value: "{{ .Values.ethereum.blockTime }}"
            - name: AZTEC_SLOT_DURATION
              value: "{{ .Values.aztec.slotDuration }}"
            - name: AZTEC_EPOCH_DURATION
              value: "{{ .Values.aztec.epochDuration }}"
            - name: AZTEC_PROOF_SUBMISSION_WINDOW
              value: "{{ .Values.aztec.proofSubmissionWindow }}"
            - name: ARCHIVER_POLLING_INTERVAL_MS
              value: {{ .Values.archiver.archiverPollingInterval | quote }}
            - name: ARCHIVER_VIEM_POLLING_INTERVAL_MS
              value: {{ .Values.archiver.archiverViemPollingInterval | quote }}
            - name: DATA_DIRECTORY
              value: "{{ .Values.archiver.dataDir }}"
            - name: DATA_STORE_MAP_SIZE_KB
              value: "{{ .Values.storage.dataStoreMapSize }}"
            - name: WS_DB_MAP_SIZE_KB
              value: "{{ .Values.storage.worldStateMapSize }}"
            - name: USE_GCLOUD_LOGGING
              value: "{{ .Values.telemetry.useGcloudLogging }}"
            - name: OTEL_EXCLUDE_METRICS
              value: "{{ .Values.telemetry.excludeMetrics }}"
            - name: TEST_ACCOUNTS
              value: "{{ .Values.aztec.testAccounts }}"
            - name: SPONSORED_FPC
              value: "{{ .Values.aztec.sponsoredFPC }}"
            - name: SYNC_SNAPSHOTS_URL
              value: "{{ .Values.snapshots.syncUrl }}"
            - name: BLOB_SINK_URL
              value: "http://alpha-testnet-aztec-network-blob-sink.alpha-testnet.svc.cluster.local:5052"
          ports:
            - containerPort: {{ .Values.archiver.service.nodePort }}
          resources:
            {{- toYaml .Values.archiver.resources | nindent 12 }}
      volumes:
        - name: config
          emptyDir: {}
        - name: pxe-url
          emptyDir: {}
      {{- if .Values.storage.localSsd }}
        - name: archiver-data
          emptyDir: {}
      {{ else }}
        - name: archiver-data
          persistentVolumeClaim:
            claimName: archiver-data
      {{- end }}
        - name: scripts
          configMap:
            name: {{ include "aztec-network.fullname" . }}-scripts
            defaultMode: 0755
        - name: scripts-output
          emptyDir: {}
        - name: contracts-env
          emptyDir: {}
---
# Service for the archiver node
apiVersion: v1
kind: Service
metadata:
  name: {{ include "aztec-network.fullname" . }}-archiver
  labels:
    {{- include "aztec-network.labels" . | nindent 4 }}
    app: archiver
  annotations:
    {{- if hasKey .Values.archiver "fixedStaticIpName" }}
    cloud.google.com/backend-config: '{"default": "{{ include "aztec-network.fullname" . }}-archiver-backend-config"}'
    {{- end }}
spec:
  # If this is a public network, we want to expose the fulls node as a LoadBalancer
  {{- if .Values.network.public }}
  type: LoadBalancer
  {{- else }}
  type: ClusterIP
  clusterIP: None
  {{- end }}
  selector:
    {{- include "aztec-network.selectorLabels" . | nindent 4 }}
    app: archiver
  ports:
    - port: {{ .Values.archiver.service.nodePort }}
      name: node
---
{{- if hasKey .Values.archiver "fixedStaticIpName" }}
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: {{ include "aztec-network.fullname" . }}-archiver-backend-config
  namespace: {{ .Release.Namespace }}
spec:
  healthCheck:
    checkIntervalSec: 15
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /status
    port: {{ .Values.archiver.service.nodePort }}
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: {{ include "aztec-network.fullname" . }}-archiver-cert
spec:
  domains:
  # Note: A record must be added in this domain to point at  {{ .Values.archiver.fixedStaticIpName }}
  - {{ .Values.archiver.staticIpUrl }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "aztec-network.fullname" . }}-archiver-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/managed-certificates: {{ include "aztec-network.fullname" . }}-archiver-cert
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.archiver.fixedStaticIpName }}
    kubernetes.io/ingress.allow-http: "false"
    cloud.google.com/health-check-port: "{{ .Values.archiver.service.nodePort }}"
    cloud.google.com/healthcheck-path: "/status"
spec:
  rules:
  - host: {{ .Values.archiver.staticIpUrl }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "aztec-network.fullname" . }}-archiver
            port:
              number: {{ .Values.archiver.service.nodePort }}
{{- end }}
{{- end }}
