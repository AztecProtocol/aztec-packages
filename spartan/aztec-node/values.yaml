# -- Overrides the chart name
nameOverride: ""
# -- Overrides the chart computed fullname
fullnameOverride: ""

# -- Pod management policy
podManagementPolicy: Parallel

# global config for all Aztec nodes in an instalation
global:
  # Which rollup contract we want to follow from the registry
  aztecRollupVersion: "canonical"
  # -- Network name - this is a predefined network - alpha-testnet, devnet
  aztecNetwork: ""
  # -- Custom network - (not recommended) - Only for custom testnet usecases, (must have deployed your own protocol contracts first)
  customAztecNetwork:
    enabled: false
    l1ChainId:
    registryContractAddress:
    slashFactoryContractAddress:
    feeAssetHandlerContractAddress:

  # -- Ethereum configuration
  # -- Ethereum hosts - comma separated list of hosts (geth, reth are currently supported)
  l1ExecutionUrls: []
  # -- L1 consensus host urls - comma separated list of urls
  l1ConsensusUrls: []
  ## Only when api key is required via header, otherwise just provide in l1ConsensusHostUrls
  ## Example: "1234abcd"
  l1ConsensusHostApiKeys: []
  ## Example: "X-API-KEY"
  l1ConsensusHostApiKeyHeaders: []

  aztecImage:
    repository: aztecprotocol/aztec
    tag: ""
    pullPolicy: IfNotPresent

  # -- Collector endpoint - e.g. http://localhost:4318
  otelCollectorEndpoint: ""
  # -- Use GCP logging
  useGcloudLogging: false

# -- Use host network - this will disable nodePort service and use host networking instead
hostNetwork: false

# -- Number of replicas
replicaCount: 1

statefulSet:
  enabled: false
  volumeClaimTemplates: []
  # Example:
  # volumeClaimTemplates:
  #   - metadata:
  #       name: data
  #     spec:
  #       accessModes: ["ReadWriteOnce"]
  #       resources:
  #         requests:
  #           storage: 10Gi

nodeSelector: null
affinity: null
tolerations: []

# -- Aztec node configuration
node:
  # -- Log level - info, verbose, debug, trace
  logLevel: "info"

  preStartScript: null

  startCmd:
    - --node
    - --archiver

  env: {}

  envFrom:
    configMapEnabled: false
    secretEnabled: false

  configMap:
    envEnabled: false
    extraScriptsEnabled: false

  secret:
    envEnabled: false
    filesEnabled: false

  # the address that will receive block or proof rewards
  coinbase:

  # -- Exclude metrics - comma separated list of metrics to exclude
  otelExcludeMetrics: ""

  storage:
    # -- Data directory
    dataDirectory: /data
    # -- Data store map size in kB. (per database)
    dataStoreMapSize: "134217728" # 128 GB
    # -- World state map size in kB (per merkle tree)
    worldStateMapSize: "134217728" # 128 GB

  nodeJsOptions:
    - --no-warnings
    - --max-old-space-size=4096

  startupProbe:
    # -- Period seconds
    periodSeconds: 30
    # -- Failure threshold
    failureThreshold: 3
  resources: {}

persistence:
  # -- Uses an emptyDir when not enabled
  enabled: false
  # -- Use an existing PVC
  existingClaim: null

# -- Update strategy for the statefulset
updateStrategy:
  type: RollingUpdate

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

service:
  rpc:
    enabled: true
    port: 8080
    annotations: {}
    type: ClusterIP

  admin:
    enabled: false
    port: 8880
    annotations: {}
    type: ClusterIP

  headless:
    enabled: false
    annotations: {}
    ports:
      - port: 8080
        name: rpc
        targetPort: rpc
        protocol: TCP

  p2p:
    enabled: true
    nodePortEnabled: true
    port: 40400
    announcePort: 40400

ingress:
  rpc:
    enabled: false
    annotations: {}
    host:

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the services nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

serviceAccount:
  # -- Create a service account
  create: true
  # -- Name of the service account - if not set, the fullname will be used
  name: ""
  # -- Annotations for the service account
  annotations: {}
