#!/usr/bin/env bash
# A wrapper for Earthly that is meant to caught signs of known intermittent failures and continue.
# The silver lining is if Earthly does crash, the cache can pick up the build.
set -eu -o pipefail

# Flag to determine if -i is present
INTERACTIVE=false
# Check for -i flag in the arguments
for arg in "$@"; do
    if [ "$arg" == "-i" ] || [ "$arg" == "--interactive" ]; then
        INTERACTIVE=true
        break
    fi
done

OUTPUT_FILE=$(mktemp)
# capture output to handle earthly edge cases
if $INTERACTIVE ; then
  # don't play nice with tee if interactive
  earthly $@
elif ! earthly $@ 2>&1 | tee $OUTPUT_FILE >&2 ; then
  # we try earthly once, capturing output
  # if we get one of our (unfortunate) known failures, handle retries
  # TODO potentially handle other intermittent errors here
  if grep 'failed to get edge: inconsistent graph state' $OUTPUT_FILE >/dev/null ; then
    # TODO when earthly is overloaded we sometimes get
    # 'failed to solve: failed to get edge: inconsistent graph state'
    echo "Got 'inconsistent graph state'. Restarting earthly. See https://github.com/earthly/earthly/issues/2454'"
    earthly $@
    # TODO handle
    # could not configure satellite: failed getting org: unable to authenticate: failed to execute login request: Post
  elif grep 'Error: pull ping error: pull ping response' $OUTPUT_FILE >/dev/null ; then
    echo "Got 'Error: pull ping error: pull ping response', intermittent failure when writing out images to docker"
    earthly $@
  elif grep '================================= System Info ==================================' $OUTPUT_FILE >/dev/null ; then
    echo "Detected an Earthly daemon restart, possibly due to it (mis)detecting a cache setting change, trying again..."
    earthly $@
  else
    # otherwise, propagate error
    exit 1
  fi
fi
