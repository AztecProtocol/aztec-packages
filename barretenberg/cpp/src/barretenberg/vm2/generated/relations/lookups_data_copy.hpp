// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_data_copy_range_max_read_size_diff ///////////////////

struct lookup_data_copy_range_max_read_size_diff_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_RANGE_MAX_READ_SIZE_DIFF";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_start;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_range_max_read_size_diff_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_range_max_read_size_diff_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_abs_diff_max_read_index, ColumnAndShifts::data_copy_thirty_two
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_data_copy_range_max_read_size_diff_settings =
    lookup_settings<lookup_data_copy_range_max_read_size_diff_settings_>;
template <typename FF_>
using lookup_data_copy_range_max_read_size_diff_relation =
    lookup_relation_base<FF_, lookup_data_copy_range_max_read_size_diff_settings>;

/////////////////// lookup_data_copy_range_read ///////////////////

struct lookup_data_copy_range_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_RANGE_READ";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_start;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_range_read_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_range_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_abs_read_diff, ColumnAndShifts::data_copy_thirty_two
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_data_copy_range_read_settings = lookup_settings<lookup_data_copy_range_read_settings_>;
template <typename FF_>
using lookup_data_copy_range_read_relation = lookup_relation_base<FF_, lookup_data_copy_range_read_settings>;

/////////////////// lookup_data_copy_range_write ///////////////////

struct lookup_data_copy_range_write_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_RANGE_WRITE";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_start;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_range_write_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_range_write_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_abs_write_diff, ColumnAndShifts::data_copy_thirty_two
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_data_copy_range_write_settings = lookup_settings<lookup_data_copy_range_write_settings_>;
template <typename FF_>
using lookup_data_copy_range_write_relation = lookup_relation_base<FF_, lookup_data_copy_range_write_settings>;

/////////////////// lookup_data_copy_range_reads_left ///////////////////

struct lookup_data_copy_range_reads_left_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_RANGE_READS_LEFT";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_start_no_err;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_range_reads_left_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_range_reads_left_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_abs_max_read_offset, ColumnAndShifts::data_copy_thirty_two
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_data_copy_range_reads_left_settings = lookup_settings<lookup_data_copy_range_reads_left_settings_>;
template <typename FF_>
using lookup_data_copy_range_reads_left_relation =
    lookup_relation_base<FF_, lookup_data_copy_range_reads_left_settings>;

/////////////////// lookup_data_copy_mem_write ///////////////////

struct lookup_data_copy_mem_write_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_MEM_WRITE";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_mem_write;
    static constexpr Column DST_SELECTOR = Column::memory_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_mem_write_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_mem_write_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_clk,           ColumnAndShifts::data_copy_dst_addr,
        ColumnAndShifts::data_copy_value,         ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::data_copy_sel_mem_write, ColumnAndShifts::data_copy_dst_context_id
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::memory_clk, ColumnAndShifts::memory_address, ColumnAndShifts::memory_value,
        ColumnAndShifts::memory_tag, ColumnAndShifts::memory_rw,      ColumnAndShifts::memory_space_id
    };
};

using lookup_data_copy_mem_write_settings = lookup_settings<lookup_data_copy_mem_write_settings_>;
template <typename FF_>
using lookup_data_copy_mem_write_relation = lookup_relation_base<FF_, lookup_data_copy_mem_write_settings>;

/////////////////// lookup_data_copy_mem_read ///////////////////

struct lookup_data_copy_mem_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_MEM_READ";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_mem_read;
    static constexpr Column DST_SELECTOR = Column::memory_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_mem_read_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_mem_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_clk,    ColumnAndShifts::data_copy_read_addr,
        ColumnAndShifts::data_copy_value,  ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::precomputed_zero, ColumnAndShifts::data_copy_src_context_id
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::memory_clk, ColumnAndShifts::memory_address, ColumnAndShifts::memory_value,
        ColumnAndShifts::memory_tag, ColumnAndShifts::memory_rw,      ColumnAndShifts::memory_space_id
    };
};

using lookup_data_copy_mem_read_settings = lookup_settings<lookup_data_copy_mem_read_settings_>;
template <typename FF_>
using lookup_data_copy_mem_read_relation = lookup_relation_base<FF_, lookup_data_copy_mem_read_settings>;

/////////////////// lookup_data_copy_col_read ///////////////////

struct lookup_data_copy_col_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_COL_READ";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::data_copy_cd_copy_col_read;
    static constexpr Column DST_SELECTOR = Column::calldata_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_col_read_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_col_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_value,
        ColumnAndShifts::data_copy_dst_context_id,
        ColumnAndShifts::data_copy_read_addr
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::calldata_value, ColumnAndShifts::calldata_context_id, ColumnAndShifts::calldata_index
    };
};

using lookup_data_copy_col_read_settings = lookup_settings<lookup_data_copy_col_read_settings_>;
template <typename FF_>
using lookup_data_copy_col_read_relation = lookup_relation_base<FF_, lookup_data_copy_col_read_settings>;

} // namespace bb::avm2
