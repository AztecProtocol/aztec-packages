// AUTOGENERATED FILE
#pragma once

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

#include <cstddef>
#include <string_view>
#include <tuple>

namespace bb::avm2 {

/////////////////// lookup_data_copy_mem_write ///////////////////

struct lookup_data_copy_mem_write_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_MEM_WRITE";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_mem_write;
    static constexpr Column DST_SELECTOR = Column::memory_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_mem_write_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_mem_write_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_write_addr,
        ColumnAndShifts::data_copy_value,
        ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::data_copy_one,
        ColumnAndShifts::data_copy_dst_context_id
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::memory_address,
                                                                                    ColumnAndShifts::memory_value,
                                                                                    ColumnAndShifts::memory_tag,
                                                                                    ColumnAndShifts::memory_rw,
                                                                                    ColumnAndShifts::memory_space_id };
};

using lookup_data_copy_mem_write_settings = lookup_settings<lookup_data_copy_mem_write_settings_>;
template <typename FF_>
using lookup_data_copy_mem_write_relation = lookup_relation_base<FF_, lookup_data_copy_mem_write_settings>;

/////////////////// lookup_data_copy_mem_read ///////////////////

struct lookup_data_copy_mem_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_MEM_READ";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::data_copy_sel_mem_read;
    static constexpr Column DST_SELECTOR = Column::memory_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_mem_read_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_mem_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_read_addr,
        ColumnAndShifts::data_copy_value,
        ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::data_copy_src_context_id
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::memory_address,
                                                                                    ColumnAndShifts::memory_value,
                                                                                    ColumnAndShifts::memory_tag,
                                                                                    ColumnAndShifts::memory_rw,
                                                                                    ColumnAndShifts::memory_space_id };
};

using lookup_data_copy_mem_read_settings = lookup_settings<lookup_data_copy_mem_read_settings_>;
template <typename FF_>
using lookup_data_copy_mem_read_relation = lookup_relation_base<FF_, lookup_data_copy_mem_read_settings>;

/////////////////// lookup_data_copy_col_read ///////////////////

struct lookup_data_copy_col_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_DATA_COPY_COL_READ";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::data_copy_cd_copy_col_read;
    static constexpr Column DST_SELECTOR = Column::calldata_sel;
    static constexpr Column COUNTS = Column::lookup_data_copy_col_read_counts;
    static constexpr Column INVERSES = Column::lookup_data_copy_col_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::data_copy_value, ColumnAndShifts::data_copy_dst_context_id, ColumnAndShifts::data_copy_cd_index
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::calldata_value, ColumnAndShifts::calldata_context_id, ColumnAndShifts::calldata_index
    };
};

using lookup_data_copy_col_read_settings = lookup_settings<lookup_data_copy_col_read_settings_>;
template <typename FF_>
using lookup_data_copy_col_read_relation = lookup_relation_base<FF_, lookup_data_copy_col_read_settings>;

} // namespace bb::avm2
