// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_class_id_derivation_class_id_poseidon2_0 ///////////////////

struct lookup_class_id_derivation_class_id_poseidon2_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CLASS_ID_DERIVATION_CLASS_ID_POSEIDON2_0";
    static constexpr std::string_view RELATION_NAME = "class_id_derivation";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::class_id_derivation_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_hash_start);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::class_id_derivation_temp_constant_for_lookup),
                        ColumnExpression(ColumnAndShifts::class_id_derivation_artifact_hash),
                        ColumnExpression(ColumnAndShifts::class_id_derivation_private_function_root),
                        ColumnExpression(ColumnAndShifts::class_id_derivation_class_id));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_hash_input_0),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_input_1),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_input_2),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_output));
    static constexpr Column COUNTS = Column::lookup_class_id_derivation_class_id_poseidon2_0_counts;
    static constexpr Column INVERSES = Column::lookup_class_id_derivation_class_id_poseidon2_0_inv;
};

using lookup_class_id_derivation_class_id_poseidon2_0_settings =
    lookup_settings<lookup_class_id_derivation_class_id_poseidon2_0_settings_>;
template <typename FF_>
using lookup_class_id_derivation_class_id_poseidon2_0_relation =
    lookup_relation_base<FF_, lookup_class_id_derivation_class_id_poseidon2_0_settings>;

/////////////////// lookup_class_id_derivation_class_id_poseidon2_1 ///////////////////

struct lookup_class_id_derivation_class_id_poseidon2_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CLASS_ID_DERIVATION_CLASS_ID_POSEIDON2_1";
    static constexpr std::string_view RELATION_NAME = "class_id_derivation";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::class_id_derivation_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_hash_end);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::class_id_derivation_public_bytecode_commitment),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::class_id_derivation_class_id));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_hash_input_0),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_input_1),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_input_2),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_hash_output));
    static constexpr Column COUNTS = Column::lookup_class_id_derivation_class_id_poseidon2_1_counts;
    static constexpr Column INVERSES = Column::lookup_class_id_derivation_class_id_poseidon2_1_inv;
};

using lookup_class_id_derivation_class_id_poseidon2_1_settings =
    lookup_settings<lookup_class_id_derivation_class_id_poseidon2_1_settings_>;
template <typename FF_>
using lookup_class_id_derivation_class_id_poseidon2_1_relation =
    lookup_relation_base<FF_, lookup_class_id_derivation_class_id_poseidon2_1_settings>;

} // namespace bb::avm2
