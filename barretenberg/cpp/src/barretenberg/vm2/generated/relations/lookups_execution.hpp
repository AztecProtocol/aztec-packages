// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_execution_bytecode_retrieval_result ///////////////////

struct lookup_execution_bytecode_retrieval_result_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_EXECUTION_BYTECODE_RETRIEVAL_RESULT";
    static constexpr std::string_view RELATION_NAME = "execution";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::execution_sel;
    static constexpr Column DST_SELECTOR = Column::bc_retrieval_sel;
    static constexpr Column COUNTS = Column::lookup_execution_bytecode_retrieval_result_counts;
    static constexpr Column INVERSES = Column::lookup_execution_bytecode_retrieval_result_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_bytecode_id,
        ColumnAndShifts::execution_contract_address,
        ColumnAndShifts::execution_sel_bytecode_retrieval_failure
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::bc_retrieval_bytecode_id,
        ColumnAndShifts::bc_retrieval_address,
        ColumnAndShifts::bc_retrieval_error
    };
};

using lookup_execution_bytecode_retrieval_result_settings =
    lookup_settings<lookup_execution_bytecode_retrieval_result_settings_>;
template <typename FF_>
using lookup_execution_bytecode_retrieval_result_relation =
    lookup_relation_base<FF_, lookup_execution_bytecode_retrieval_result_settings>;

/////////////////// lookup_execution_instruction_fetching_result ///////////////////

struct lookup_execution_instruction_fetching_result_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_EXECUTION_INSTRUCTION_FETCHING_RESULT";
    static constexpr std::string_view RELATION_NAME = "execution";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_bytecode_retrieval_success;
    static constexpr Column DST_SELECTOR = Column::instr_fetching_sel;
    static constexpr Column COUNTS = Column::lookup_execution_instruction_fetching_result_counts;
    static constexpr Column INVERSES = Column::lookup_execution_instruction_fetching_result_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_pc,
        ColumnAndShifts::execution_bytecode_id,
        ColumnAndShifts::execution_sel_instruction_fetching_failure
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::instr_fetching_pc,
        ColumnAndShifts::instr_fetching_bytecode_id,
        ColumnAndShifts::instr_fetching_sel_parsing_err
    };
};

using lookup_execution_instruction_fetching_result_settings =
    lookup_settings<lookup_execution_instruction_fetching_result_settings_>;
template <typename FF_>
using lookup_execution_instruction_fetching_result_relation =
    lookup_relation_base<FF_, lookup_execution_instruction_fetching_result_settings>;

/////////////////// lookup_execution_instruction_fetching_body ///////////////////

struct lookup_execution_instruction_fetching_body_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_EXECUTION_INSTRUCTION_FETCHING_BODY";
    static constexpr std::string_view RELATION_NAME = "execution";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 12;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_instruction_fetching_success;
    static constexpr Column DST_SELECTOR = Column::instr_fetching_sel;
    static constexpr Column COUNTS = Column::lookup_execution_instruction_fetching_body_counts;
    static constexpr Column INVERSES = Column::lookup_execution_instruction_fetching_body_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_pc,        ColumnAndShifts::execution_bytecode_id,
        ColumnAndShifts::execution_ex_opcode, ColumnAndShifts::execution_instr_length,
        ColumnAndShifts::execution_indirect,  ColumnAndShifts::execution_op_0_,
        ColumnAndShifts::execution_op_1_,     ColumnAndShifts::execution_op_2_,
        ColumnAndShifts::execution_op_3_,     ColumnAndShifts::execution_op_4_,
        ColumnAndShifts::execution_op_5_,     ColumnAndShifts::execution_op_6_
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::instr_fetching_pc,          ColumnAndShifts::instr_fetching_bytecode_id,
        ColumnAndShifts::instr_fetching_exec_opcode, ColumnAndShifts::instr_fetching_instr_size,
        ColumnAndShifts::instr_fetching_indirect,    ColumnAndShifts::instr_fetching_op1,
        ColumnAndShifts::instr_fetching_op2,         ColumnAndShifts::instr_fetching_op3,
        ColumnAndShifts::instr_fetching_op4,         ColumnAndShifts::instr_fetching_op5,
        ColumnAndShifts::instr_fetching_op6,         ColumnAndShifts::instr_fetching_op7
    };
};

using lookup_execution_instruction_fetching_body_settings =
    lookup_settings<lookup_execution_instruction_fetching_body_settings_>;
template <typename FF_>
using lookup_execution_instruction_fetching_body_relation =
    lookup_relation_base<FF_, lookup_execution_instruction_fetching_body_settings>;

/////////////////// lookup_execution_exec_spec_read ///////////////////

struct lookup_execution_exec_spec_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_EXECUTION_EXEC_SPEC_READ";
    static constexpr std::string_view RELATION_NAME = "execution";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 48;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_instruction_fetching_success;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_exec_spec;
    static constexpr Column COUNTS = Column::lookup_execution_exec_spec_read_counts;
    static constexpr Column INVERSES = Column::lookup_execution_exec_spec_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_ex_opcode,
        ColumnAndShifts::execution_opcode_gas,
        ColumnAndShifts::execution_base_da_gas,
        ColumnAndShifts::execution_dynamic_l2_gas,
        ColumnAndShifts::execution_dynamic_da_gas,
        ColumnAndShifts::execution_sel_op_is_address_0_,
        ColumnAndShifts::execution_sel_op_is_address_1_,
        ColumnAndShifts::execution_sel_op_is_address_2_,
        ColumnAndShifts::execution_sel_op_is_address_3_,
        ColumnAndShifts::execution_sel_op_is_address_4_,
        ColumnAndShifts::execution_sel_op_is_address_5_,
        ColumnAndShifts::execution_sel_op_is_address_6_,
        ColumnAndShifts::execution_subtrace_operation_id,
        ColumnAndShifts::execution_sel_execution,
        ColumnAndShifts::execution_sel_alu,
        ColumnAndShifts::execution_sel_bitwise,
        ColumnAndShifts::execution_sel_poseidon2_perm,
        ColumnAndShifts::execution_sel_to_radix,
        ColumnAndShifts::execution_sel_ecc_add,
        ColumnAndShifts::execution_sel_keccakf1600,
<<<<<<< HEAD
        ColumnAndShifts::execution_sel_mem_op_reg_0_,
        ColumnAndShifts::execution_sel_mem_op_reg_1_,
        ColumnAndShifts::execution_sel_mem_op_reg_2_,
        ColumnAndShifts::execution_sel_mem_op_reg_3_,
        ColumnAndShifts::execution_sel_mem_op_reg_4_,
        ColumnAndShifts::execution_sel_mem_op_reg_5_,
        ColumnAndShifts::execution_sel_mem_op_reg_6_,
        ColumnAndShifts::execution_rw_reg_0_,
        ColumnAndShifts::execution_rw_reg_1_,
        ColumnAndShifts::execution_rw_reg_2_,
        ColumnAndShifts::execution_rw_reg_3_,
        ColumnAndShifts::execution_rw_reg_4_,
        ColumnAndShifts::execution_rw_reg_5_,
        ColumnAndShifts::execution_rw_reg_6_,
        ColumnAndShifts::execution_sel_tag_check_reg_0_,
        ColumnAndShifts::execution_sel_tag_check_reg_1_,
        ColumnAndShifts::execution_sel_tag_check_reg_2_,
        ColumnAndShifts::execution_sel_tag_check_reg_3_,
        ColumnAndShifts::execution_sel_tag_check_reg_4_,
        ColumnAndShifts::execution_sel_tag_check_reg_5_,
        ColumnAndShifts::execution_sel_tag_check_reg_6_,
        ColumnAndShifts::execution_expected_tag_reg_0_,
        ColumnAndShifts::execution_expected_tag_reg_1_,
        ColumnAndShifts::execution_expected_tag_reg_2_,
        ColumnAndShifts::execution_expected_tag_reg_3_,
        ColumnAndShifts::execution_expected_tag_reg_4_,
        ColumnAndShifts::execution_expected_tag_reg_5_,
        ColumnAndShifts::execution_expected_tag_reg_6_
=======
        ColumnAndShifts::execution_sel_data_copy,
        ColumnAndShifts::execution_mem_op_0_,
        ColumnAndShifts::execution_mem_op_1_,
        ColumnAndShifts::execution_mem_op_2_,
        ColumnAndShifts::execution_mem_op_3_,
        ColumnAndShifts::execution_mem_op_4_,
        ColumnAndShifts::execution_mem_op_5_,
        ColumnAndShifts::execution_mem_op_6_,
        ColumnAndShifts::execution_rw_0_,
        ColumnAndShifts::execution_rw_1_,
        ColumnAndShifts::execution_rw_2_,
        ColumnAndShifts::execution_rw_3_,
        ColumnAndShifts::execution_rw_4_,
        ColumnAndShifts::execution_rw_5_,
        ColumnAndShifts::execution_rw_6_
>>>>>>> d037a48473 (feat!: data copy err handling)
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk,
        ColumnAndShifts::precomputed_exec_opcode_opcode_gas,
        ColumnAndShifts::precomputed_exec_opcode_base_da_gas,
        ColumnAndShifts::precomputed_exec_opcode_dynamic_l2_gas,
        ColumnAndShifts::precomputed_exec_opcode_dynamic_da_gas,
        ColumnAndShifts::precomputed_sel_op_is_address_0_,
        ColumnAndShifts::precomputed_sel_op_is_address_1_,
        ColumnAndShifts::precomputed_sel_op_is_address_2_,
        ColumnAndShifts::precomputed_sel_op_is_address_3_,
        ColumnAndShifts::precomputed_sel_op_is_address_4_,
        ColumnAndShifts::precomputed_sel_op_is_address_5_,
        ColumnAndShifts::precomputed_sel_op_is_address_6_,
        ColumnAndShifts::precomputed_subtrace_operation_id,
        ColumnAndShifts::precomputed_sel_dispatch_execution,
        ColumnAndShifts::precomputed_sel_dispatch_alu,
        ColumnAndShifts::precomputed_sel_dispatch_bitwise,
        ColumnAndShifts::precomputed_sel_dispatch_poseidon_perm,
        ColumnAndShifts::precomputed_sel_dispatch_to_radix,
        ColumnAndShifts::precomputed_sel_dispatch_ecc,
        ColumnAndShifts::precomputed_sel_dispatch_keccakf1600,
<<<<<<< HEAD
        ColumnAndShifts::precomputed_sel_mem_op_reg_0_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_1_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_2_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_3_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_4_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_5_,
        ColumnAndShifts::precomputed_sel_mem_op_reg_6_,
        ColumnAndShifts::precomputed_rw_reg_0_,
        ColumnAndShifts::precomputed_rw_reg_1_,
        ColumnAndShifts::precomputed_rw_reg_2_,
        ColumnAndShifts::precomputed_rw_reg_3_,
        ColumnAndShifts::precomputed_rw_reg_4_,
        ColumnAndShifts::precomputed_rw_reg_5_,
        ColumnAndShifts::precomputed_rw_reg_6_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_0_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_1_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_2_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_3_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_4_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_5_,
        ColumnAndShifts::precomputed_sel_tag_check_reg_6_,
        ColumnAndShifts::precomputed_expected_tag_reg_0_,
        ColumnAndShifts::precomputed_expected_tag_reg_1_,
        ColumnAndShifts::precomputed_expected_tag_reg_2_,
        ColumnAndShifts::precomputed_expected_tag_reg_3_,
        ColumnAndShifts::precomputed_expected_tag_reg_4_,
        ColumnAndShifts::precomputed_expected_tag_reg_5_,
        ColumnAndShifts::precomputed_expected_tag_reg_6_
=======
        ColumnAndShifts::precomputed_sel_dispatch_data_copy,
        ColumnAndShifts::precomputed_mem_op_reg_0_,
        ColumnAndShifts::precomputed_mem_op_reg_1_,
        ColumnAndShifts::precomputed_mem_op_reg_2_,
        ColumnAndShifts::precomputed_mem_op_reg_3_,
        ColumnAndShifts::precomputed_mem_op_reg_4_,
        ColumnAndShifts::precomputed_mem_op_reg_5_,
        ColumnAndShifts::precomputed_mem_op_reg_6_,
        ColumnAndShifts::precomputed_rw_0_,
        ColumnAndShifts::precomputed_rw_1_,
        ColumnAndShifts::precomputed_rw_2_,
        ColumnAndShifts::precomputed_rw_3_,
        ColumnAndShifts::precomputed_rw_4_,
        ColumnAndShifts::precomputed_rw_5_,
        ColumnAndShifts::precomputed_rw_6_
>>>>>>> d037a48473 (feat!: data copy err handling)
    };
};

using lookup_execution_exec_spec_read_settings = lookup_settings<lookup_execution_exec_spec_read_settings_>;
template <typename FF_>
using lookup_execution_exec_spec_read_relation = lookup_relation_base<FF_, lookup_execution_exec_spec_read_settings>;

} // namespace bb::avm2
