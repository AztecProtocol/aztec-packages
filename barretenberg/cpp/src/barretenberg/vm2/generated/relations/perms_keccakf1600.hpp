// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_permutation/generic_permutation_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// perm_keccakf1600_read_to_slice ///////////////////

struct perm_keccakf1600_read_to_slice_settings_ {
    static constexpr std::string_view NAME = "PERM_KECCAKF1600_READ_TO_SLICE";
    static constexpr std::string_view RELATION_NAME = "keccakf1600";
    static constexpr size_t COLUMNS_PER_SET = 29;
    static constexpr Column SRC_SELECTOR = Column::keccakf1600_sel_slice_read;
    static constexpr Column DST_SELECTOR = Column::keccak_memory_start_read;
    static constexpr Column INVERSES = Column::perm_keccakf1600_read_to_slice_inv;
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> SRC_COLUMNS = {
        ColumnAndShifts::keccakf1600_state_in_00, ColumnAndShifts::keccakf1600_state_in_01,
        ColumnAndShifts::keccakf1600_state_in_02, ColumnAndShifts::keccakf1600_state_in_03,
        ColumnAndShifts::keccakf1600_state_in_04, ColumnAndShifts::keccakf1600_state_in_10,
        ColumnAndShifts::keccakf1600_state_in_11, ColumnAndShifts::keccakf1600_state_in_12,
        ColumnAndShifts::keccakf1600_state_in_13, ColumnAndShifts::keccakf1600_state_in_14,
        ColumnAndShifts::keccakf1600_state_in_20, ColumnAndShifts::keccakf1600_state_in_21,
        ColumnAndShifts::keccakf1600_state_in_22, ColumnAndShifts::keccakf1600_state_in_23,
        ColumnAndShifts::keccakf1600_state_in_24, ColumnAndShifts::keccakf1600_state_in_30,
        ColumnAndShifts::keccakf1600_state_in_31, ColumnAndShifts::keccakf1600_state_in_32,
        ColumnAndShifts::keccakf1600_state_in_33, ColumnAndShifts::keccakf1600_state_in_34,
        ColumnAndShifts::keccakf1600_state_in_40, ColumnAndShifts::keccakf1600_state_in_41,
        ColumnAndShifts::keccakf1600_state_in_42, ColumnAndShifts::keccakf1600_state_in_43,
        ColumnAndShifts::keccakf1600_state_in_44, ColumnAndShifts::keccakf1600_clk,
        ColumnAndShifts::keccakf1600_src_addr,    ColumnAndShifts::keccakf1600_space_id,
        ColumnAndShifts::keccakf1600_tag_error
    };
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> DST_COLUMNS = {
        ColumnAndShifts::keccak_memory_val00,    ColumnAndShifts::keccak_memory_val01,
        ColumnAndShifts::keccak_memory_val02,    ColumnAndShifts::keccak_memory_val03,
        ColumnAndShifts::keccak_memory_val04,    ColumnAndShifts::keccak_memory_val10,
        ColumnAndShifts::keccak_memory_val11,    ColumnAndShifts::keccak_memory_val12,
        ColumnAndShifts::keccak_memory_val13,    ColumnAndShifts::keccak_memory_val14,
        ColumnAndShifts::keccak_memory_val20,    ColumnAndShifts::keccak_memory_val21,
        ColumnAndShifts::keccak_memory_val22,    ColumnAndShifts::keccak_memory_val23,
        ColumnAndShifts::keccak_memory_val24,    ColumnAndShifts::keccak_memory_val30,
        ColumnAndShifts::keccak_memory_val31,    ColumnAndShifts::keccak_memory_val32,
        ColumnAndShifts::keccak_memory_val33,    ColumnAndShifts::keccak_memory_val34,
        ColumnAndShifts::keccak_memory_val40,    ColumnAndShifts::keccak_memory_val41,
        ColumnAndShifts::keccak_memory_val42,    ColumnAndShifts::keccak_memory_val43,
        ColumnAndShifts::keccak_memory_val44,    ColumnAndShifts::keccak_memory_clk,
        ColumnAndShifts::keccak_memory_addr,     ColumnAndShifts::keccak_memory_space_id,
        ColumnAndShifts::keccak_memory_tag_error
    };
};

using perm_keccakf1600_read_to_slice_settings = permutation_settings<perm_keccakf1600_read_to_slice_settings_>;
template <typename FF_>
using perm_keccakf1600_read_to_slice_relation = permutation_relation_base<FF_, perm_keccakf1600_read_to_slice_settings>;

/////////////////// perm_keccakf1600_write_to_slice ///////////////////

struct perm_keccakf1600_write_to_slice_settings_ {
    static constexpr std::string_view NAME = "PERM_KECCAKF1600_WRITE_TO_SLICE";
    static constexpr std::string_view RELATION_NAME = "keccakf1600";
    static constexpr size_t COLUMNS_PER_SET = 29;
    static constexpr Column SRC_SELECTOR = Column::keccakf1600_sel_slice_write;
    static constexpr Column DST_SELECTOR = Column::keccak_memory_start_write;
    static constexpr Column INVERSES = Column::perm_keccakf1600_write_to_slice_inv;
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> SRC_COLUMNS = {
        ColumnAndShifts::keccakf1600_state_iota_00, ColumnAndShifts::keccakf1600_state_chi_01,
        ColumnAndShifts::keccakf1600_state_chi_02,  ColumnAndShifts::keccakf1600_state_chi_03,
        ColumnAndShifts::keccakf1600_state_chi_04,  ColumnAndShifts::keccakf1600_state_chi_10,
        ColumnAndShifts::keccakf1600_state_chi_11,  ColumnAndShifts::keccakf1600_state_chi_12,
        ColumnAndShifts::keccakf1600_state_chi_13,  ColumnAndShifts::keccakf1600_state_chi_14,
        ColumnAndShifts::keccakf1600_state_chi_20,  ColumnAndShifts::keccakf1600_state_chi_21,
        ColumnAndShifts::keccakf1600_state_chi_22,  ColumnAndShifts::keccakf1600_state_chi_23,
        ColumnAndShifts::keccakf1600_state_chi_24,  ColumnAndShifts::keccakf1600_state_chi_30,
        ColumnAndShifts::keccakf1600_state_chi_31,  ColumnAndShifts::keccakf1600_state_chi_32,
        ColumnAndShifts::keccakf1600_state_chi_33,  ColumnAndShifts::keccakf1600_state_chi_34,
        ColumnAndShifts::keccakf1600_state_chi_40,  ColumnAndShifts::keccakf1600_state_chi_41,
        ColumnAndShifts::keccakf1600_state_chi_42,  ColumnAndShifts::keccakf1600_state_chi_43,
        ColumnAndShifts::keccakf1600_state_chi_44,  ColumnAndShifts::keccakf1600_clk,
        ColumnAndShifts::keccakf1600_dst_addr,      ColumnAndShifts::keccakf1600_space_id,
        ColumnAndShifts::keccakf1600_round
    };
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> DST_COLUMNS = {
        ColumnAndShifts::keccak_memory_val00,     ColumnAndShifts::keccak_memory_val01,
        ColumnAndShifts::keccak_memory_val02,     ColumnAndShifts::keccak_memory_val03,
        ColumnAndShifts::keccak_memory_val04,     ColumnAndShifts::keccak_memory_val10,
        ColumnAndShifts::keccak_memory_val11,     ColumnAndShifts::keccak_memory_val12,
        ColumnAndShifts::keccak_memory_val13,     ColumnAndShifts::keccak_memory_val14,
        ColumnAndShifts::keccak_memory_val20,     ColumnAndShifts::keccak_memory_val21,
        ColumnAndShifts::keccak_memory_val22,     ColumnAndShifts::keccak_memory_val23,
        ColumnAndShifts::keccak_memory_val24,     ColumnAndShifts::keccak_memory_val30,
        ColumnAndShifts::keccak_memory_val31,     ColumnAndShifts::keccak_memory_val32,
        ColumnAndShifts::keccak_memory_val33,     ColumnAndShifts::keccak_memory_val34,
        ColumnAndShifts::keccak_memory_val40,     ColumnAndShifts::keccak_memory_val41,
        ColumnAndShifts::keccak_memory_val42,     ColumnAndShifts::keccak_memory_val43,
        ColumnAndShifts::keccak_memory_val44,     ColumnAndShifts::keccak_memory_clk,
        ColumnAndShifts::keccak_memory_addr,      ColumnAndShifts::keccak_memory_space_id,
        ColumnAndShifts::keccak_memory_num_rounds
    };
};

using perm_keccakf1600_write_to_slice_settings = permutation_settings<perm_keccakf1600_write_to_slice_settings_>;
template <typename FF_>
using perm_keccakf1600_write_to_slice_relation =
    permutation_relation_base<FF_, perm_keccakf1600_write_to_slice_settings>;

} // namespace bb::avm2
