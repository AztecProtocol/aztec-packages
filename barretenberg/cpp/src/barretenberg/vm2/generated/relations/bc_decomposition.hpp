// AUTOGENERATED FILE
#pragma once

#include <string_view>

#include "barretenberg/relations/relation_parameters.hpp"
#include "barretenberg/relations/relation_types.hpp"
#include "barretenberg/vm2/generated/columns.hpp"

namespace bb::avm2 {

template <typename FF_> class bc_decompositionImpl {
  public:
    using FF = FF_;

    static constexpr std::array<size_t, 51> SUBRELATION_PARTIAL_LENGTHS = { 3, 3, 4, 4, 5, 3, 4, 4, 3, 3, 4, 4, 3,
                                                                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                                                                            3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };

    template <typename AllEntities> inline static bool skip(const AllEntities& in)
    {
        using C = ColumnAndShifts;
        return (in.get(C::bc_decomposition_sel)).is_zero();
    }

    template <typename ContainerOverSubrelations, typename AllEntities>
    void static accumulate(ContainerOverSubrelations& evals,
                           const AllEntities& in,
                           [[maybe_unused]] const RelationParameters<FF>&,
                           [[maybe_unused]] const FF& scaling_factor)
    {
        using C = ColumnAndShifts;

        const auto bc_decomposition_WINDOW_SIZE = FF(37);
        const auto bc_decomposition_FIRST_OR_LAST_CONTRACT =
            in.get(C::precomputed_first_row) + in.get(C::bc_decomposition_last_of_contract);

        {
            using Accumulator = typename std::tuple_element_t<0, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel) * (FF(1) - in.get(C::bc_decomposition_sel));
            tmp *= scaling_factor;
            std::get<0>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<1, ContainerOverSubrelations>;
            auto tmp =
                in.get(C::bc_decomposition_last_of_contract) * (FF(1) - in.get(C::bc_decomposition_last_of_contract));
            tmp *= scaling_factor;
            std::get<1>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_SEL_BYTES_REM_NON_ZERO
            using Accumulator = typename std::tuple_element_t<2, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_remaining) *
                     ((FF(1) - in.get(C::bc_decomposition_sel)) * (FF(1) - in.get(C::bc_decomposition_bytes_rem_inv)) +
                      in.get(C::bc_decomposition_bytes_rem_inv)) -
                 in.get(C::bc_decomposition_sel));
            tmp *= scaling_factor;
            std::get<2>(evals) += typename Accumulator::View(tmp);
        }
        { // TRACE_CONTINUITY
            using Accumulator = typename std::tuple_element_t<3, ContainerOverSubrelations>;
            auto tmp = (FF(1) - in.get(C::precomputed_first_row)) * (FF(1) - in.get(C::bc_decomposition_sel)) *
                       in.get(C::bc_decomposition_sel_shift);
            tmp *= scaling_factor;
            std::get<3>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_LAST_CONTRACT_BYTES_REM_ONE
            using Accumulator = typename std::tuple_element_t<4, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel) *
                       (((in.get(C::bc_decomposition_bytes_remaining) - FF(1)) *
                             (in.get(C::bc_decomposition_last_of_contract) *
                                  (FF(1) - in.get(C::bc_decomposition_bytes_rem_min_one_inv)) +
                              in.get(C::bc_decomposition_bytes_rem_min_one_inv)) +
                         in.get(C::bc_decomposition_last_of_contract)) -
                        FF(1));
            tmp *= scaling_factor;
            std::get<4>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_PC_ZERO_INITIALIZATION
            using Accumulator = typename std::tuple_element_t<5, ContainerOverSubrelations>;
            auto tmp = bc_decomposition_FIRST_OR_LAST_CONTRACT * in.get(C::bc_decomposition_pc_shift);
            tmp *= scaling_factor;
            std::get<5>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_PC_INCREMENT
            using Accumulator = typename std::tuple_element_t<6, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel) * (FF(1) - in.get(C::bc_decomposition_last_of_contract)) *
                       ((in.get(C::bc_decomposition_pc_shift) - in.get(C::bc_decomposition_pc)) - FF(1));
            tmp *= scaling_factor;
            std::get<6>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_BYTES_REMAINING_DECREMENT
            using Accumulator = typename std::tuple_element_t<7, ContainerOverSubrelations>;
            auto tmp =
                in.get(C::bc_decomposition_sel) * (FF(1) - in.get(C::bc_decomposition_last_of_contract)) *
                ((in.get(C::bc_decomposition_bytes_remaining_shift) - in.get(C::bc_decomposition_bytes_remaining)) +
                 FF(1));
            tmp *= scaling_factor;
            std::get<7>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_ID_CONSTANT
            using Accumulator = typename std::tuple_element_t<8, ContainerOverSubrelations>;
            auto tmp = (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                       (in.get(C::bc_decomposition_id_shift) - in.get(C::bc_decomposition_id));
            tmp *= scaling_factor;
            std::get<8>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<9, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel_overflow_correction_needed) *
                       (FF(1) - in.get(C::bc_decomposition_sel_overflow_correction_needed));
            tmp *= scaling_factor;
            std::get<9>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_ABS_DIFF
            using Accumulator = typename std::tuple_element_t<10, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel) *
                       (((FF(2) * in.get(C::bc_decomposition_sel_overflow_correction_needed) *
                              (bc_decomposition_WINDOW_SIZE - in.get(C::bc_decomposition_bytes_remaining)) -
                          bc_decomposition_WINDOW_SIZE) +
                         in.get(C::bc_decomposition_bytes_remaining)) -
                        in.get(C::bc_decomposition_abs_diff));
            tmp *= scaling_factor;
            std::get<10>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DEC_OVERFLOW_CORRECTION_VALUE
            using Accumulator = typename std::tuple_element_t<11, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel) *
                       ((FF(1) - in.get(C::bc_decomposition_sel_overflow_correction_needed)) *
                            (in.get(C::bc_decomposition_bytes_to_read) - bc_decomposition_WINDOW_SIZE) +
                        in.get(C::bc_decomposition_sel_overflow_correction_needed) *
                            (in.get(C::bc_decomposition_bytes_to_read) - in.get(C::bc_decomposition_bytes_remaining)));
            tmp *= scaling_factor;
            std::get<11>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<12, ContainerOverSubrelations>;
            auto tmp = (in.get(C::bc_decomposition_bytes_pc_plus_1) -
                        (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_shift));
            tmp *= scaling_factor;
            std::get<12>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<13, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_2) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_1_shift));
            tmp *= scaling_factor;
            std::get<13>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<14, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_3) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_2_shift));
            tmp *= scaling_factor;
            std::get<14>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<15, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_4) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_3_shift));
            tmp *= scaling_factor;
            std::get<15>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<16, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_5) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_4_shift));
            tmp *= scaling_factor;
            std::get<16>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<17, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_6) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_5_shift));
            tmp *= scaling_factor;
            std::get<17>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<18, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_7) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_6_shift));
            tmp *= scaling_factor;
            std::get<18>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<19, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_8) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_7_shift));
            tmp *= scaling_factor;
            std::get<19>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<20, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_9) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_8_shift));
            tmp *= scaling_factor;
            std::get<20>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<21, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_10) -
                 (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) * in.get(C::bc_decomposition_bytes_pc_plus_9_shift));
            tmp *= scaling_factor;
            std::get<21>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<22, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_11) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_10_shift));
            tmp *= scaling_factor;
            std::get<22>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<23, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_12) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_11_shift));
            tmp *= scaling_factor;
            std::get<23>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<24, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_13) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_12_shift));
            tmp *= scaling_factor;
            std::get<24>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<25, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_14) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_13_shift));
            tmp *= scaling_factor;
            std::get<25>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<26, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_15) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_14_shift));
            tmp *= scaling_factor;
            std::get<26>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<27, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_16) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_15_shift));
            tmp *= scaling_factor;
            std::get<27>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<28, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_17) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_16_shift));
            tmp *= scaling_factor;
            std::get<28>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<29, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_18) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_17_shift));
            tmp *= scaling_factor;
            std::get<29>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<30, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_19) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_18_shift));
            tmp *= scaling_factor;
            std::get<30>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<31, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_20) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_19_shift));
            tmp *= scaling_factor;
            std::get<31>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<32, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_21) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_20_shift));
            tmp *= scaling_factor;
            std::get<32>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<33, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_22) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_21_shift));
            tmp *= scaling_factor;
            std::get<33>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<34, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_23) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_22_shift));
            tmp *= scaling_factor;
            std::get<34>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<35, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_24) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_23_shift));
            tmp *= scaling_factor;
            std::get<35>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<36, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_25) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_24_shift));
            tmp *= scaling_factor;
            std::get<36>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<37, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_26) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_25_shift));
            tmp *= scaling_factor;
            std::get<37>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<38, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_27) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_26_shift));
            tmp *= scaling_factor;
            std::get<38>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<39, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_28) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_27_shift));
            tmp *= scaling_factor;
            std::get<39>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<40, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_29) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_28_shift));
            tmp *= scaling_factor;
            std::get<40>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<41, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_30) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_29_shift));
            tmp *= scaling_factor;
            std::get<41>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<42, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_31) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_30_shift));
            tmp *= scaling_factor;
            std::get<42>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<43, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_32) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_31_shift));
            tmp *= scaling_factor;
            std::get<43>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<44, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_33) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_32_shift));
            tmp *= scaling_factor;
            std::get<44>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<45, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_34) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_33_shift));
            tmp *= scaling_factor;
            std::get<45>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<46, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_35) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_34_shift));
            tmp *= scaling_factor;
            std::get<46>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<47, ContainerOverSubrelations>;
            auto tmp =
                (in.get(C::bc_decomposition_bytes_pc_plus_36) - (FF(1) - bc_decomposition_FIRST_OR_LAST_CONTRACT) *
                                                                    in.get(C::bc_decomposition_bytes_pc_plus_35_shift));
            tmp *= scaling_factor;
            std::get<47>(evals) += typename Accumulator::View(tmp);
        }
        {
            using Accumulator = typename std::tuple_element_t<48, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel_packed) * (FF(1) - in.get(C::bc_decomposition_sel_packed));
            tmp *= scaling_factor;
            std::get<48>(evals) += typename Accumulator::View(tmp);
        }
        { // SEL_TOGGLED_AT_PACKED
            using Accumulator = typename std::tuple_element_t<49, ContainerOverSubrelations>;
            auto tmp = in.get(C::bc_decomposition_sel_packed) * (FF(1) - in.get(C::bc_decomposition_sel));
            tmp *= scaling_factor;
            std::get<49>(evals) += typename Accumulator::View(tmp);
        }
        { // BC_DECOMPOSITION_REPACKING
            using Accumulator = typename std::tuple_element_t<50, ContainerOverSubrelations>;
            auto tmp =
                in.get(C::bc_decomposition_sel_packed) *
                ((FF(1) * in.get(C::bc_decomposition_bytes_pc_plus_30) +
                  FF(256) * in.get(C::bc_decomposition_bytes_pc_plus_29) +
                  FF(65536) * in.get(C::bc_decomposition_bytes_pc_plus_28) +
                  FF(16777216) * in.get(C::bc_decomposition_bytes_pc_plus_27) +
                  FF(4294967296UL) * in.get(C::bc_decomposition_bytes_pc_plus_26) +
                  FF(1099511627776UL) * in.get(C::bc_decomposition_bytes_pc_plus_25) +
                  FF(281474976710656UL) * in.get(C::bc_decomposition_bytes_pc_plus_24) +
                  FF(72057594037927936UL) * in.get(C::bc_decomposition_bytes_pc_plus_23) +
                  FF(uint256_t{ 0UL, 1UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_22) +
                  FF(uint256_t{ 0UL, 256UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_21) +
                  FF(uint256_t{ 0UL, 65536UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_20) +
                  FF(uint256_t{ 0UL, 16777216UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_19) +
                  FF(uint256_t{ 0UL, 4294967296UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_18) +
                  FF(uint256_t{ 0UL, 1099511627776UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_17) +
                  FF(uint256_t{ 0UL, 281474976710656UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_16) +
                  FF(uint256_t{ 0UL, 72057594037927936UL, 0UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_15) +
                  FF(uint256_t{ 0UL, 0UL, 1UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_14) +
                  FF(uint256_t{ 0UL, 0UL, 256UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_13) +
                  FF(uint256_t{ 0UL, 0UL, 65536UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_12) +
                  FF(uint256_t{ 0UL, 0UL, 16777216UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_11) +
                  FF(uint256_t{ 0UL, 0UL, 4294967296UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_10) +
                  FF(uint256_t{ 0UL, 0UL, 1099511627776UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_9) +
                  FF(uint256_t{ 0UL, 0UL, 281474976710656UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_8) +
                  FF(uint256_t{ 0UL, 0UL, 72057594037927936UL, 0UL }) * in.get(C::bc_decomposition_bytes_pc_plus_7) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 1UL }) * in.get(C::bc_decomposition_bytes_pc_plus_6) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 256UL }) * in.get(C::bc_decomposition_bytes_pc_plus_5) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 65536UL }) * in.get(C::bc_decomposition_bytes_pc_plus_4) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 16777216UL }) * in.get(C::bc_decomposition_bytes_pc_plus_3) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 4294967296UL }) * in.get(C::bc_decomposition_bytes_pc_plus_2) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 1099511627776UL }) * in.get(C::bc_decomposition_bytes_pc_plus_1) +
                  FF(uint256_t{ 0UL, 0UL, 0UL, 281474976710656UL }) * in.get(C::bc_decomposition_bytes)) -
                 in.get(C::bc_decomposition_packed_field));
            tmp *= scaling_factor;
            std::get<50>(evals) += typename Accumulator::View(tmp);
        }
    }
};

template <typename FF> class bc_decomposition : public Relation<bc_decompositionImpl<FF>> {
  public:
    static constexpr const std::string_view NAME = "bc_decomposition";

    static std::string get_subrelation_label(size_t index)
    {
        switch (index) {
        case 2:
            return "BC_DEC_SEL_BYTES_REM_NON_ZERO";
        case 3:
            return "TRACE_CONTINUITY";
        case 4:
            return "BC_DEC_LAST_CONTRACT_BYTES_REM_ONE";
        case 5:
            return "BC_DEC_PC_ZERO_INITIALIZATION";
        case 6:
            return "BC_DEC_PC_INCREMENT";
        case 7:
            return "BC_DEC_BYTES_REMAINING_DECREMENT";
        case 8:
            return "BC_DEC_ID_CONSTANT";
        case 10:
            return "BC_DEC_ABS_DIFF";
        case 11:
            return "BC_DEC_OVERFLOW_CORRECTION_VALUE";
        case 49:
            return "SEL_TOGGLED_AT_PACKED";
        case 50:
            return "BC_DECOMPOSITION_REPACKING";
        }
        return std::to_string(index);
    }

    // Subrelation indices constants, to be used in tests.
    static constexpr size_t SR_BC_DEC_SEL_BYTES_REM_NON_ZERO = 2;
    static constexpr size_t SR_TRACE_CONTINUITY = 3;
    static constexpr size_t SR_BC_DEC_LAST_CONTRACT_BYTES_REM_ONE = 4;
    static constexpr size_t SR_BC_DEC_PC_ZERO_INITIALIZATION = 5;
    static constexpr size_t SR_BC_DEC_PC_INCREMENT = 6;
    static constexpr size_t SR_BC_DEC_BYTES_REMAINING_DECREMENT = 7;
    static constexpr size_t SR_BC_DEC_ID_CONSTANT = 8;
    static constexpr size_t SR_BC_DEC_ABS_DIFF = 10;
    static constexpr size_t SR_BC_DEC_OVERFLOW_CORRECTION_VALUE = 11;
    static constexpr size_t SR_SEL_TOGGLED_AT_PACKED = 49;
    static constexpr size_t SR_BC_DECOMPOSITION_REPACKING = 50;
};

} // namespace bb::avm2
