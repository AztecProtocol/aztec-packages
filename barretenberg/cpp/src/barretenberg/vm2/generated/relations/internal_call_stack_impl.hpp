// AUTOGENERATED FILE
#pragma once

#include "barretenberg/vm2/generated/relations/internal_call_stack.hpp"

namespace bb::avm2 {

template <typename FF_>
template <typename ContainerOverSubrelations, typename AllEntities>
void internal_call_stackImpl<FF_>::accumulate(ContainerOverSubrelations& evals,
                                              const AllEntities& in,
                                              [[maybe_unused]] const RelationParameters<FF_>&,
                                              [[maybe_unused]] const FF_& scaling_factor)
{
    using C = ColumnAndShifts;

    BB_BENCH_NESTED_NAME("accumulate/internal_call_stack");

    {
        using Accumulator = typename std::tuple_element_t<0, ContainerOverSubrelations>;
        auto tmp = in.get(C::internal_call_stack_sel) * (FF(1) - in.get(C::internal_call_stack_sel));
        tmp *= scaling_factor;
        std::get<0>(evals) += typename Accumulator::View(tmp);
    }
}

} // namespace bb::avm2
