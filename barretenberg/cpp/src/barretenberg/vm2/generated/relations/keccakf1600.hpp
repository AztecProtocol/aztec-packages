// AUTOGENERATED FILE
#pragma once

#include <string_view>

#include "barretenberg/common/bb_bench.hpp"
#include "barretenberg/relations/relation_parameters.hpp"
#include "barretenberg/relations/relation_types.hpp"
#include "barretenberg/vm2/generated/columns.hpp"

namespace bb::avm2 {

template <typename FF_> class keccakf1600Impl {
  public:
    using FF = FF_;

    static constexpr std::array<size_t, 159> SUBRELATION_PARTIAL_LENGTHS = {
        3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
        2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
        3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 4, 3, 3, 3, 3, 4, 3
    };

    template <typename AllEntities> inline static bool skip(const AllEntities& in)
    {
        using C = ColumnAndShifts;

        return ((in.get(C::keccakf1600_sel) + in.get(C::keccakf1600_last))).is_zero();
    }

    template <typename ContainerOverSubrelations, typename AllEntities>
    void static accumulate(ContainerOverSubrelations& evals,
                           const AllEntities& in,
                           [[maybe_unused]] const RelationParameters<FF>&,
                           [[maybe_unused]] const FF& scaling_factor);
};

template <typename FF> class keccakf1600 : public Relation<keccakf1600Impl<FF>> {
  public:
    static constexpr const std::string_view NAME = "keccakf1600";

    static std::string get_subrelation_label(size_t index)
    {
        switch (index) {
        case 1:
            return "SEL_NO_ERROR";
        case 4:
            return "KECCAK_SEL_ROUND_NON_ZERO";
        case 5:
            return "KECCAK_ROUND_INCREMENT";
        case 10:
            return "THETA_XOR_ROW_MSB_0_BOOLEAN";
        case 11:
            return "THETA_XOR_ROW_0_DECOMPOSITION";
        case 12:
            return "THETA_XOR_ROW_ROTL1_0";
        case 13:
            return "THETA_XOR_ROW_MSB_1_BOOLEAN";
        case 14:
            return "THETA_XOR_ROW_1_DECOMPOSITION";
        case 15:
            return "THETA_XOR_ROW_ROTL1_1";
        case 16:
            return "THETA_XOR_ROW_MSB_2_BOOLEAN";
        case 17:
            return "THETA_XOR_ROW_2_DECOMPOSITION";
        case 18:
            return "THETA_XOR_ROW_ROTL1_2";
        case 19:
            return "THETA_XOR_ROW_MSB_3_BOOLEAN";
        case 20:
            return "THETA_XOR_ROW_3_DECOMPOSITION";
        case 21:
            return "THETA_XOR_ROW_ROTL1_3";
        case 22:
            return "THETA_XOR_ROW_MSB_4_BOOLEAN";
        case 23:
            return "THETA_XOR_ROW_4_DECOMPOSITION";
        case 24:
            return "THETA_XOR_ROW_ROTL1_4";
        case 25:
            return "STATE_THETA_01_DECOMPOSE";
        case 26:
            return "STATE_RHO_01";
        case 27:
            return "STATE_THETA_02_DECOMPOSE";
        case 28:
            return "STATE_RHO_02";
        case 29:
            return "STATE_THETA_03_DECOMPOSE";
        case 30:
            return "STATE_RHO_03";
        case 31:
            return "STATE_THETA_04_DECOMPOSE";
        case 32:
            return "STATE_RHO_04";
        case 33:
            return "STATE_THETA_10_DECOMPOSE";
        case 34:
            return "STATE_RHO_10";
        case 35:
            return "STATE_THETA_11_DECOMPOSE";
        case 36:
            return "STATE_RHO_11";
        case 37:
            return "STATE_THETA_12_DECOMPOSE";
        case 38:
            return "STATE_RHO_12";
        case 39:
            return "STATE_THETA_13_DECOMPOSE";
        case 40:
            return "STATE_RHO_13";
        case 41:
            return "STATE_THETA_14_DECOMPOSE";
        case 42:
            return "STATE_RHO_14";
        case 43:
            return "STATE_THETA_20_DECOMPOSE";
        case 44:
            return "STATE_RHO_20";
        case 45:
            return "STATE_THETA_21_DECOMPOSE";
        case 46:
            return "STATE_RHO_21";
        case 47:
            return "STATE_THETA_22_DECOMPOSE";
        case 48:
            return "STATE_RHO_22";
        case 49:
            return "STATE_THETA_23_DECOMPOSE";
        case 50:
            return "STATE_RHO_23";
        case 51:
            return "STATE_THETA_24_DECOMPOSE";
        case 52:
            return "STATE_RHO_24";
        case 53:
            return "STATE_THETA_30_DECOMPOSE";
        case 54:
            return "STATE_RHO_30";
        case 55:
            return "STATE_THETA_31_DECOMPOSE";
        case 56:
            return "STATE_RHO_31";
        case 57:
            return "STATE_THETA_32_DECOMPOSE";
        case 58:
            return "STATE_RHO_32";
        case 59:
            return "STATE_THETA_33_DECOMPOSE";
        case 60:
            return "STATE_RHO_33";
        case 61:
            return "STATE_THETA_34_DECOMPOSE";
        case 62:
            return "STATE_RHO_34";
        case 63:
            return "STATE_THETA_40_DECOMPOSE";
        case 64:
            return "STATE_RHO_40";
        case 65:
            return "STATE_THETA_41_DECOMPOSE";
        case 66:
            return "STATE_RHO_41";
        case 67:
            return "STATE_THETA_42_DECOMPOSE";
        case 68:
            return "STATE_RHO_42";
        case 69:
            return "STATE_THETA_43_DECOMPOSE";
        case 70:
            return "STATE_RHO_43";
        case 71:
            return "STATE_THETA_44_DECOMPOSE";
        case 72:
            return "STATE_RHO_44";
        case 97:
            return "STATE_PI_NOT_00";
        case 98:
            return "STATE_PI_NOT_01";
        case 99:
            return "STATE_PI_NOT_02";
        case 100:
            return "STATE_PI_NOT_03";
        case 101:
            return "STATE_PI_NOT_04";
        case 102:
            return "STATE_PI_NOT_10";
        case 103:
            return "STATE_PI_NOT_11";
        case 104:
            return "STATE_PI_NOT_12";
        case 105:
            return "STATE_PI_NOT_13";
        case 106:
            return "STATE_PI_NOT_14";
        case 107:
            return "STATE_PI_NOT_20";
        case 108:
            return "STATE_PI_NOT_21";
        case 109:
            return "STATE_PI_NOT_22";
        case 110:
            return "STATE_PI_NOT_23";
        case 111:
            return "STATE_PI_NOT_24";
        case 112:
            return "STATE_PI_NOT_30";
        case 113:
            return "STATE_PI_NOT_31";
        case 114:
            return "STATE_PI_NOT_32";
        case 115:
            return "STATE_PI_NOT_33";
        case 116:
            return "STATE_PI_NOT_34";
        case 117:
            return "STATE_PI_NOT_40";
        case 118:
            return "STATE_PI_NOT_41";
        case 119:
            return "STATE_PI_NOT_42";
        case 120:
            return "STATE_PI_NOT_43";
        case 121:
            return "STATE_PI_NOT_44";
        case 122:
            return "NEXT_STATE_IN_00";
        case 123:
            return "NEXT_STATE_IN_01";
        case 124:
            return "NEXT_STATE_IN_02";
        case 125:
            return "NEXT_STATE_IN_03";
        case 126:
            return "NEXT_STATE_IN_04";
        case 127:
            return "NEXT_STATE_IN_10";
        case 128:
            return "NEXT_STATE_IN_11";
        case 129:
            return "NEXT_STATE_IN_12";
        case 130:
            return "NEXT_STATE_IN_13";
        case 131:
            return "NEXT_STATE_IN_14";
        case 132:
            return "NEXT_STATE_IN_20";
        case 133:
            return "NEXT_STATE_IN_21";
        case 134:
            return "NEXT_STATE_IN_22";
        case 135:
            return "NEXT_STATE_IN_23";
        case 136:
            return "NEXT_STATE_IN_24";
        case 137:
            return "NEXT_STATE_IN_30";
        case 138:
            return "NEXT_STATE_IN_31";
        case 139:
            return "NEXT_STATE_IN_32";
        case 140:
            return "NEXT_STATE_IN_33";
        case 141:
            return "NEXT_STATE_IN_34";
        case 142:
            return "NEXT_STATE_IN_40";
        case 143:
            return "NEXT_STATE_IN_41";
        case 144:
            return "NEXT_STATE_IN_42";
        case 145:
            return "NEXT_STATE_IN_43";
        case 146:
            return "NEXT_STATE_IN_44";
        case 147:
            return "SRC_OUT_OF_RANGE_ERROR_BOOLEAN";
        case 148:
            return "DST_OUT_OF_RANGE_ERROR_BOOLEAN";
        case 149:
            return "SRC_OUT_OF_RANGE_TOGGLE";
        case 150:
            return "DST_OUT_OF_RANGE_TOGGLE";
        case 152:
            return "ERROR";
        case 153:
            return "DST_ADDR_PROPAGATION";
        case 154:
            return "CLK_PROPAGATION";
        case 155:
            return "SPACE_ID_PROPAGATION";
        case 156:
            return "SEL_NO_ERROR_PROPAGATION";
        case 157:
            return "SEL_SLICE_READ";
        case 158:
            return "SEL_SLICE_WRITE";
        }
        return std::to_string(index);
    }

    // Subrelation indices constants, to be used in tests.
    static constexpr size_t SR_SEL_NO_ERROR = 1;
    static constexpr size_t SR_KECCAK_SEL_ROUND_NON_ZERO = 4;
    static constexpr size_t SR_KECCAK_ROUND_INCREMENT = 5;
    static constexpr size_t SR_THETA_XOR_ROW_MSB_0_BOOLEAN = 10;
    static constexpr size_t SR_THETA_XOR_ROW_0_DECOMPOSITION = 11;
    static constexpr size_t SR_THETA_XOR_ROW_ROTL1_0 = 12;
    static constexpr size_t SR_THETA_XOR_ROW_MSB_1_BOOLEAN = 13;
    static constexpr size_t SR_THETA_XOR_ROW_1_DECOMPOSITION = 14;
    static constexpr size_t SR_THETA_XOR_ROW_ROTL1_1 = 15;
    static constexpr size_t SR_THETA_XOR_ROW_MSB_2_BOOLEAN = 16;
    static constexpr size_t SR_THETA_XOR_ROW_2_DECOMPOSITION = 17;
    static constexpr size_t SR_THETA_XOR_ROW_ROTL1_2 = 18;
    static constexpr size_t SR_THETA_XOR_ROW_MSB_3_BOOLEAN = 19;
    static constexpr size_t SR_THETA_XOR_ROW_3_DECOMPOSITION = 20;
    static constexpr size_t SR_THETA_XOR_ROW_ROTL1_3 = 21;
    static constexpr size_t SR_THETA_XOR_ROW_MSB_4_BOOLEAN = 22;
    static constexpr size_t SR_THETA_XOR_ROW_4_DECOMPOSITION = 23;
    static constexpr size_t SR_THETA_XOR_ROW_ROTL1_4 = 24;
    static constexpr size_t SR_STATE_THETA_01_DECOMPOSE = 25;
    static constexpr size_t SR_STATE_RHO_01 = 26;
    static constexpr size_t SR_STATE_THETA_02_DECOMPOSE = 27;
    static constexpr size_t SR_STATE_RHO_02 = 28;
    static constexpr size_t SR_STATE_THETA_03_DECOMPOSE = 29;
    static constexpr size_t SR_STATE_RHO_03 = 30;
    static constexpr size_t SR_STATE_THETA_04_DECOMPOSE = 31;
    static constexpr size_t SR_STATE_RHO_04 = 32;
    static constexpr size_t SR_STATE_THETA_10_DECOMPOSE = 33;
    static constexpr size_t SR_STATE_RHO_10 = 34;
    static constexpr size_t SR_STATE_THETA_11_DECOMPOSE = 35;
    static constexpr size_t SR_STATE_RHO_11 = 36;
    static constexpr size_t SR_STATE_THETA_12_DECOMPOSE = 37;
    static constexpr size_t SR_STATE_RHO_12 = 38;
    static constexpr size_t SR_STATE_THETA_13_DECOMPOSE = 39;
    static constexpr size_t SR_STATE_RHO_13 = 40;
    static constexpr size_t SR_STATE_THETA_14_DECOMPOSE = 41;
    static constexpr size_t SR_STATE_RHO_14 = 42;
    static constexpr size_t SR_STATE_THETA_20_DECOMPOSE = 43;
    static constexpr size_t SR_STATE_RHO_20 = 44;
    static constexpr size_t SR_STATE_THETA_21_DECOMPOSE = 45;
    static constexpr size_t SR_STATE_RHO_21 = 46;
    static constexpr size_t SR_STATE_THETA_22_DECOMPOSE = 47;
    static constexpr size_t SR_STATE_RHO_22 = 48;
    static constexpr size_t SR_STATE_THETA_23_DECOMPOSE = 49;
    static constexpr size_t SR_STATE_RHO_23 = 50;
    static constexpr size_t SR_STATE_THETA_24_DECOMPOSE = 51;
    static constexpr size_t SR_STATE_RHO_24 = 52;
    static constexpr size_t SR_STATE_THETA_30_DECOMPOSE = 53;
    static constexpr size_t SR_STATE_RHO_30 = 54;
    static constexpr size_t SR_STATE_THETA_31_DECOMPOSE = 55;
    static constexpr size_t SR_STATE_RHO_31 = 56;
    static constexpr size_t SR_STATE_THETA_32_DECOMPOSE = 57;
    static constexpr size_t SR_STATE_RHO_32 = 58;
    static constexpr size_t SR_STATE_THETA_33_DECOMPOSE = 59;
    static constexpr size_t SR_STATE_RHO_33 = 60;
    static constexpr size_t SR_STATE_THETA_34_DECOMPOSE = 61;
    static constexpr size_t SR_STATE_RHO_34 = 62;
    static constexpr size_t SR_STATE_THETA_40_DECOMPOSE = 63;
    static constexpr size_t SR_STATE_RHO_40 = 64;
    static constexpr size_t SR_STATE_THETA_41_DECOMPOSE = 65;
    static constexpr size_t SR_STATE_RHO_41 = 66;
    static constexpr size_t SR_STATE_THETA_42_DECOMPOSE = 67;
    static constexpr size_t SR_STATE_RHO_42 = 68;
    static constexpr size_t SR_STATE_THETA_43_DECOMPOSE = 69;
    static constexpr size_t SR_STATE_RHO_43 = 70;
    static constexpr size_t SR_STATE_THETA_44_DECOMPOSE = 71;
    static constexpr size_t SR_STATE_RHO_44 = 72;
    static constexpr size_t SR_STATE_PI_NOT_00 = 97;
    static constexpr size_t SR_STATE_PI_NOT_01 = 98;
    static constexpr size_t SR_STATE_PI_NOT_02 = 99;
    static constexpr size_t SR_STATE_PI_NOT_03 = 100;
    static constexpr size_t SR_STATE_PI_NOT_04 = 101;
    static constexpr size_t SR_STATE_PI_NOT_10 = 102;
    static constexpr size_t SR_STATE_PI_NOT_11 = 103;
    static constexpr size_t SR_STATE_PI_NOT_12 = 104;
    static constexpr size_t SR_STATE_PI_NOT_13 = 105;
    static constexpr size_t SR_STATE_PI_NOT_14 = 106;
    static constexpr size_t SR_STATE_PI_NOT_20 = 107;
    static constexpr size_t SR_STATE_PI_NOT_21 = 108;
    static constexpr size_t SR_STATE_PI_NOT_22 = 109;
    static constexpr size_t SR_STATE_PI_NOT_23 = 110;
    static constexpr size_t SR_STATE_PI_NOT_24 = 111;
    static constexpr size_t SR_STATE_PI_NOT_30 = 112;
    static constexpr size_t SR_STATE_PI_NOT_31 = 113;
    static constexpr size_t SR_STATE_PI_NOT_32 = 114;
    static constexpr size_t SR_STATE_PI_NOT_33 = 115;
    static constexpr size_t SR_STATE_PI_NOT_34 = 116;
    static constexpr size_t SR_STATE_PI_NOT_40 = 117;
    static constexpr size_t SR_STATE_PI_NOT_41 = 118;
    static constexpr size_t SR_STATE_PI_NOT_42 = 119;
    static constexpr size_t SR_STATE_PI_NOT_43 = 120;
    static constexpr size_t SR_STATE_PI_NOT_44 = 121;
    static constexpr size_t SR_NEXT_STATE_IN_00 = 122;
    static constexpr size_t SR_NEXT_STATE_IN_01 = 123;
    static constexpr size_t SR_NEXT_STATE_IN_02 = 124;
    static constexpr size_t SR_NEXT_STATE_IN_03 = 125;
    static constexpr size_t SR_NEXT_STATE_IN_04 = 126;
    static constexpr size_t SR_NEXT_STATE_IN_10 = 127;
    static constexpr size_t SR_NEXT_STATE_IN_11 = 128;
    static constexpr size_t SR_NEXT_STATE_IN_12 = 129;
    static constexpr size_t SR_NEXT_STATE_IN_13 = 130;
    static constexpr size_t SR_NEXT_STATE_IN_14 = 131;
    static constexpr size_t SR_NEXT_STATE_IN_20 = 132;
    static constexpr size_t SR_NEXT_STATE_IN_21 = 133;
    static constexpr size_t SR_NEXT_STATE_IN_22 = 134;
    static constexpr size_t SR_NEXT_STATE_IN_23 = 135;
    static constexpr size_t SR_NEXT_STATE_IN_24 = 136;
    static constexpr size_t SR_NEXT_STATE_IN_30 = 137;
    static constexpr size_t SR_NEXT_STATE_IN_31 = 138;
    static constexpr size_t SR_NEXT_STATE_IN_32 = 139;
    static constexpr size_t SR_NEXT_STATE_IN_33 = 140;
    static constexpr size_t SR_NEXT_STATE_IN_34 = 141;
    static constexpr size_t SR_NEXT_STATE_IN_40 = 142;
    static constexpr size_t SR_NEXT_STATE_IN_41 = 143;
    static constexpr size_t SR_NEXT_STATE_IN_42 = 144;
    static constexpr size_t SR_NEXT_STATE_IN_43 = 145;
    static constexpr size_t SR_NEXT_STATE_IN_44 = 146;
    static constexpr size_t SR_SRC_OUT_OF_RANGE_ERROR_BOOLEAN = 147;
    static constexpr size_t SR_DST_OUT_OF_RANGE_ERROR_BOOLEAN = 148;
    static constexpr size_t SR_SRC_OUT_OF_RANGE_TOGGLE = 149;
    static constexpr size_t SR_DST_OUT_OF_RANGE_TOGGLE = 150;
    static constexpr size_t SR_ERROR = 152;
    static constexpr size_t SR_DST_ADDR_PROPAGATION = 153;
    static constexpr size_t SR_CLK_PROPAGATION = 154;
    static constexpr size_t SR_SPACE_ID_PROPAGATION = 155;
    static constexpr size_t SR_SEL_NO_ERROR_PROPAGATION = 156;
    static constexpr size_t SR_SEL_SLICE_READ = 157;
    static constexpr size_t SR_SEL_SLICE_WRITE = 158;
};

} // namespace bb::avm2
