// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_context_ctx_stack_call ///////////////////

struct lookup_context_ctx_stack_call_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTEXT_CTX_STACK_CALL";
    static constexpr std::string_view RELATION_NAME = "context";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 13;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_sel_enter_call);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::context_stack_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::execution_next_context_id),
                                                      ColumnExpression(ColumnAndShifts::execution_context_id),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_id),
                                                      ColumnExpression(ColumnAndShifts::execution_next_pc),
                                                      ColumnExpression(ColumnAndShifts::execution_msg_sender),
                                                      ColumnExpression(ColumnAndShifts::execution_contract_address),
                                                      ColumnExpression(ColumnAndShifts::execution_is_static),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_calldata_addr),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_calldata_size),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_limit),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_da_gas_limit),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_used),
                                                      ColumnExpression(ColumnAndShifts::execution_parent_da_gas_used));
    static constexpr auto DST_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::context_stack_entered_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_id),
                        ColumnExpression(ColumnAndShifts::context_stack_next_pc),
                        ColumnExpression(ColumnAndShifts::context_stack_msg_sender),
                        ColumnExpression(ColumnAndShifts::context_stack_contract_address),
                        ColumnExpression(ColumnAndShifts::context_stack_is_static),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_addr),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_size),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_used),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_used));
    static constexpr Column COUNTS = Column::lookup_context_ctx_stack_call_counts;
    static constexpr Column INVERSES = Column::lookup_context_ctx_stack_call_inv;
};

using lookup_context_ctx_stack_call_settings = lookup_settings<lookup_context_ctx_stack_call_settings_>;
template <typename FF_>
using lookup_context_ctx_stack_call_relation = lookup_relation_base<FF_, lookup_context_ctx_stack_call_settings>;

/////////////////// lookup_context_ctx_stack_rollback ///////////////////

struct lookup_context_ctx_stack_rollback_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTEXT_CTX_STACK_ROLLBACK";
    static constexpr std::string_view RELATION_NAME = "context";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 13;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_rollback_context);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::context_stack_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::execution_context_id),
                        ColumnExpression(ColumnAndShifts::execution_context_id_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_id_shift),
                        ColumnExpression(ColumnAndShifts::execution_pc_shift),
                        ColumnExpression(ColumnAndShifts::execution_msg_sender_shift),
                        ColumnExpression(ColumnAndShifts::execution_contract_address_shift),
                        ColumnExpression(ColumnAndShifts::execution_is_static_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_calldata_addr_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_calldata_size_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_limit_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_da_gas_limit_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_used_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_da_gas_used_shift));
    static constexpr auto DST_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::context_stack_entered_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_id),
                        ColumnExpression(ColumnAndShifts::context_stack_next_pc),
                        ColumnExpression(ColumnAndShifts::context_stack_msg_sender),
                        ColumnExpression(ColumnAndShifts::context_stack_contract_address),
                        ColumnExpression(ColumnAndShifts::context_stack_is_static),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_addr),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_size),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_used),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_used));
    static constexpr Column COUNTS = Column::lookup_context_ctx_stack_rollback_counts;
    static constexpr Column INVERSES = Column::lookup_context_ctx_stack_rollback_inv;
};

using lookup_context_ctx_stack_rollback_settings = lookup_settings<lookup_context_ctx_stack_rollback_settings_>;
template <typename FF_>
using lookup_context_ctx_stack_rollback_relation =
    lookup_relation_base<FF_, lookup_context_ctx_stack_rollback_settings>;

/////////////////// lookup_context_ctx_stack_return ///////////////////

struct lookup_context_ctx_stack_return_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTEXT_CTX_STACK_RETURN";
    static constexpr std::string_view RELATION_NAME = "context";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 13;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_nested_return);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::context_stack_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::execution_context_id),
                        ColumnExpression(ColumnAndShifts::execution_context_id_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_id_shift),
                        ColumnExpression(ColumnAndShifts::execution_pc_shift),
                        ColumnExpression(ColumnAndShifts::execution_msg_sender_shift),
                        ColumnExpression(ColumnAndShifts::execution_contract_address_shift),
                        ColumnExpression(ColumnAndShifts::execution_is_static_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_calldata_addr_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_calldata_size_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_limit_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_da_gas_limit_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_l2_gas_used_shift),
                        ColumnExpression(ColumnAndShifts::execution_parent_da_gas_used_shift));
    static constexpr auto DST_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::context_stack_entered_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_context_id),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_id),
                        ColumnExpression(ColumnAndShifts::context_stack_next_pc),
                        ColumnExpression(ColumnAndShifts::context_stack_msg_sender),
                        ColumnExpression(ColumnAndShifts::context_stack_contract_address),
                        ColumnExpression(ColumnAndShifts::context_stack_is_static),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_addr),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_calldata_size),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_limit),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_l2_gas_used),
                        ColumnExpression(ColumnAndShifts::context_stack_parent_da_gas_used));
    static constexpr Column COUNTS = Column::lookup_context_ctx_stack_return_counts;
    static constexpr Column INVERSES = Column::lookup_context_ctx_stack_return_inv;
};

using lookup_context_ctx_stack_return_settings = lookup_settings<lookup_context_ctx_stack_return_settings_>;
template <typename FF_>
using lookup_context_ctx_stack_return_relation = lookup_relation_base<FF_, lookup_context_ctx_stack_return_settings>;

} // namespace bb::avm2
