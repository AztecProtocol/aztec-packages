// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_sha256_mem_check_state_addr_in_range ///////////////////

struct lookup_sha256_mem_check_state_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MEM_CHECK_STATE_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "sha256_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_start;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_mem_check_state_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_mem_check_state_addr_in_range_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_max_state_addr,
        ColumnAndShifts::sha256_max_mem_addr,
        ColumnAndShifts::sha256_sel_state_out_of_range_err
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_mem_check_state_addr_in_range_settings =
    lookup_settings<lookup_sha256_mem_check_state_addr_in_range_settings_>;
template <typename FF_>
using lookup_sha256_mem_check_state_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_sha256_mem_check_state_addr_in_range_settings>;

/////////////////// lookup_sha256_mem_check_input_addr_in_range ///////////////////

struct lookup_sha256_mem_check_input_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MEM_CHECK_INPUT_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "sha256_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_start;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_mem_check_input_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_mem_check_input_addr_in_range_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_max_input_addr,
        ColumnAndShifts::sha256_max_mem_addr,
        ColumnAndShifts::sha256_sel_input_out_of_range_err
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_mem_check_input_addr_in_range_settings =
    lookup_settings<lookup_sha256_mem_check_input_addr_in_range_settings_>;
template <typename FF_>
using lookup_sha256_mem_check_input_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_sha256_mem_check_input_addr_in_range_settings>;

/////////////////// lookup_sha256_mem_check_output_addr_in_range ///////////////////

struct lookup_sha256_mem_check_output_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MEM_CHECK_OUTPUT_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "sha256_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_start;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_mem_check_output_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_mem_check_output_addr_in_range_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_max_output_addr,
        ColumnAndShifts::sha256_max_mem_addr,
        ColumnAndShifts::sha256_sel_output_out_of_range_err
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_mem_check_output_addr_in_range_settings =
    lookup_settings<lookup_sha256_mem_check_output_addr_in_range_settings_>;
template <typename FF_>
using lookup_sha256_mem_check_output_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_sha256_mem_check_output_addr_in_range_settings>;

} // namespace bb::avm2
