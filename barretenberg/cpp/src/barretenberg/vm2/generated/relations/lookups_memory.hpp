// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_memory_range_check_limb_0 ///////////////////

struct lookup_memory_range_check_limb_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_MEMORY_RANGE_CHECK_LIMB_0";
    static constexpr std::string_view RELATION_NAME = "memory";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 1;
    static constexpr Column SRC_SELECTOR = Column::memory_sel_rng_chk;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_range_16;
    static constexpr Column COUNTS = Column::lookup_memory_range_check_limb_0_counts;
    static constexpr Column INVERSES = Column::lookup_memory_range_check_limb_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::memory_limb_0_ };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::precomputed_clk };
};

using lookup_memory_range_check_limb_0_settings = lookup_settings<lookup_memory_range_check_limb_0_settings_>;
template <typename FF_>
using lookup_memory_range_check_limb_0_relation = lookup_relation_base<FF_, lookup_memory_range_check_limb_0_settings>;

/////////////////// lookup_memory_range_check_limb_1 ///////////////////

struct lookup_memory_range_check_limb_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_MEMORY_RANGE_CHECK_LIMB_1";
    static constexpr std::string_view RELATION_NAME = "memory";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 1;
    static constexpr Column SRC_SELECTOR = Column::memory_sel_rng_chk;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_range_16;
    static constexpr Column COUNTS = Column::lookup_memory_range_check_limb_1_counts;
    static constexpr Column INVERSES = Column::lookup_memory_range_check_limb_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::memory_limb_1_ };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::precomputed_clk };
};

using lookup_memory_range_check_limb_1_settings = lookup_settings<lookup_memory_range_check_limb_1_settings_>;
template <typename FF_>
using lookup_memory_range_check_limb_1_relation = lookup_relation_base<FF_, lookup_memory_range_check_limb_1_settings>;

/////////////////// lookup_memory_range_check_limb_2 ///////////////////

struct lookup_memory_range_check_limb_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_MEMORY_RANGE_CHECK_LIMB_2";
    static constexpr std::string_view RELATION_NAME = "memory";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 1;
    static constexpr Column SRC_SELECTOR = Column::memory_sel_rng_chk;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_range_16;
    static constexpr Column COUNTS = Column::lookup_memory_range_check_limb_2_counts;
    static constexpr Column INVERSES = Column::lookup_memory_range_check_limb_2_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::memory_limb_2_ };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::precomputed_clk };
};

using lookup_memory_range_check_limb_2_settings = lookup_settings<lookup_memory_range_check_limb_2_settings_>;
template <typename FF_>
using lookup_memory_range_check_limb_2_relation = lookup_relation_base<FF_, lookup_memory_range_check_limb_2_settings>;

/////////////////// lookup_memory_tag_max_bits ///////////////////

struct lookup_memory_tag_max_bits_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_MEMORY_TAG_MAX_BITS";
    static constexpr std::string_view RELATION_NAME = "memory";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::memory_sel_rng_write;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_tag_parameters;
    static constexpr Column COUNTS = Column::lookup_memory_tag_max_bits_counts;
    static constexpr Column INVERSES = Column::lookup_memory_tag_max_bits_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::memory_tag,
                                                                                    ColumnAndShifts::memory_max_bits };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::precomputed_tag_max_bits
    };
};

using lookup_memory_tag_max_bits_settings = lookup_settings<lookup_memory_tag_max_bits_settings_>;
template <typename FF_>
using lookup_memory_tag_max_bits_relation = lookup_relation_base<FF_, lookup_memory_tag_max_bits_settings>;

/////////////////// lookup_memory_range_check_write_tagged_value ///////////////////

struct lookup_memory_range_check_write_tagged_value_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_MEMORY_RANGE_CHECK_WRITE_TAGGED_VALUE";
    static constexpr std::string_view RELATION_NAME = "memory";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::memory_sel_rng_write;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_memory_range_check_write_tagged_value_counts;
    static constexpr Column INVERSES = Column::lookup_memory_range_check_write_tagged_value_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::memory_value,
                                                                                    ColumnAndShifts::memory_max_bits };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_memory_range_check_write_tagged_value_settings =
    lookup_settings<lookup_memory_range_check_write_tagged_value_settings_>;
template <typename FF_>
using lookup_memory_range_check_write_tagged_value_relation =
    lookup_relation_base<FF_, lookup_memory_range_check_write_tagged_value_settings>;

} // namespace bb::avm2
