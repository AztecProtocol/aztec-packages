// AUTOGENERATED FILE
#pragma once

#include "barretenberg/vm2/generated/relations/calldata_hashing.hpp"

namespace bb::avm2 {

template <typename FF_>
template <typename ContainerOverSubrelations, typename AllEntities>
void calldata_hashingImpl<FF_>::accumulate(ContainerOverSubrelations& evals,
                                           const AllEntities& in,
                                           [[maybe_unused]] const RelationParameters<FF_>&,
                                           [[maybe_unused]] const FF_& scaling_factor)
{
    using C = ColumnAndShifts;

    BB_BENCH_NESTED_NAME("accumulate/calldata_hashing");

    { // TRACE_CONTINUITY
        using Accumulator = typename std::tuple_element_t<0, ContainerOverSubrelations>;
        auto tmp = (FF(1) - in.get(C::precomputed_first_row)) * (FF(1) - in.get(C::cd_hashing_sel)) *
                   in.get(C::cd_hashing_sel_shift);
        tmp *= scaling_factor;
        std::get<0>(evals) += typename Accumulator::View(tmp);
    }
}

} // namespace bb::avm2
