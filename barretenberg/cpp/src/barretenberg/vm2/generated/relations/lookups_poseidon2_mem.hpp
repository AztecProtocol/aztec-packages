// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_poseidon2_mem_check_src_addr_in_range ///////////////////

struct lookup_poseidon2_mem_check_src_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_CHECK_SRC_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::gt_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_read_address_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_max_mem_addr),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_src_out_of_range_err));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::gt_input_a),
                                                      ColumnExpression(ColumnAndShifts::gt_input_b),
                                                      ColumnExpression(ColumnAndShifts::gt_res));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_check_src_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_check_src_addr_in_range_inv;
};

using lookup_poseidon2_mem_check_src_addr_in_range_settings =
    lookup_settings<lookup_poseidon2_mem_check_src_addr_in_range_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_check_src_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_check_src_addr_in_range_settings>;

/////////////////// lookup_poseidon2_mem_check_dst_addr_in_range ///////////////////

struct lookup_poseidon2_mem_check_dst_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_CHECK_DST_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::gt_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_write_address_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_max_mem_addr),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_dst_out_of_range_err));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::gt_input_a),
                                                      ColumnExpression(ColumnAndShifts::gt_input_b),
                                                      ColumnExpression(ColumnAndShifts::gt_res));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_check_dst_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_check_dst_addr_in_range_inv;
};

using lookup_poseidon2_mem_check_dst_addr_in_range_settings =
    lookup_settings<lookup_poseidon2_mem_check_dst_addr_in_range_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_check_dst_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_check_dst_addr_in_range_settings>;

/////////////////// lookup_poseidon2_mem_pos_read_mem_0 ///////////////////

struct lookup_poseidon2_mem_pos_read_mem_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_READ_MEM_0";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_read_mem);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_read_address_0_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_0_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_tag_0_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::precomputed_zero));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_read_mem_0_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_read_mem_0_inv;
};

using lookup_poseidon2_mem_pos_read_mem_0_settings = lookup_settings<lookup_poseidon2_mem_pos_read_mem_0_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_read_mem_0_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_read_mem_0_settings>;

/////////////////// lookup_poseidon2_mem_pos_read_mem_1 ///////////////////

struct lookup_poseidon2_mem_pos_read_mem_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_READ_MEM_1";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_read_mem);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_read_address_1_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_1_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_tag_1_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::precomputed_zero));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_read_mem_1_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_read_mem_1_inv;
};

using lookup_poseidon2_mem_pos_read_mem_1_settings = lookup_settings<lookup_poseidon2_mem_pos_read_mem_1_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_read_mem_1_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_read_mem_1_settings>;

/////////////////// lookup_poseidon2_mem_pos_read_mem_2 ///////////////////

struct lookup_poseidon2_mem_pos_read_mem_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_READ_MEM_2";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_read_mem);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_read_address_2_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_2_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_tag_2_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::precomputed_zero));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_read_mem_2_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_read_mem_2_inv;
};

using lookup_poseidon2_mem_pos_read_mem_2_settings = lookup_settings<lookup_poseidon2_mem_pos_read_mem_2_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_read_mem_2_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_read_mem_2_settings>;

/////////////////// lookup_poseidon2_mem_pos_read_mem_3 ///////////////////

struct lookup_poseidon2_mem_pos_read_mem_3_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_READ_MEM_3";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_read_mem);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_read_address_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_tag_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::precomputed_zero));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_read_mem_3_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_read_mem_3_inv;
};

using lookup_poseidon2_mem_pos_read_mem_3_settings = lookup_settings<lookup_poseidon2_mem_pos_read_mem_3_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_read_mem_3_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_read_mem_3_settings>;

/////////////////// lookup_poseidon2_mem_input_output_poseidon2_perm ///////////////////

struct lookup_poseidon2_mem_input_output_poseidon2_perm_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_INPUT_OUTPUT_POSEIDON2_PERM";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 8;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_0_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_1_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_2_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_input_3_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_0_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_1_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_2_),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_3_));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_a_0),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_a_1),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_a_2),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_a_3),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_b_0),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_b_1),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_b_2),
                                                      ColumnExpression(ColumnAndShifts::poseidon2_perm_b_3));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_input_output_poseidon2_perm_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_input_output_poseidon2_perm_inv;
};

using lookup_poseidon2_mem_input_output_poseidon2_perm_settings =
    lookup_settings<lookup_poseidon2_mem_input_output_poseidon2_perm_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_input_output_poseidon2_perm_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_input_output_poseidon2_perm_settings>;

/////////////////// lookup_poseidon2_mem_pos_write_mem_0 ///////////////////

struct lookup_poseidon2_mem_pos_write_mem_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_WRITE_MEM_0";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_write_address_0_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_0_),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_write_mem_0_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_write_mem_0_inv;
};

using lookup_poseidon2_mem_pos_write_mem_0_settings = lookup_settings<lookup_poseidon2_mem_pos_write_mem_0_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_write_mem_0_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_write_mem_0_settings>;

/////////////////// lookup_poseidon2_mem_pos_write_mem_1 ///////////////////

struct lookup_poseidon2_mem_pos_write_mem_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_WRITE_MEM_1";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_write_address_1_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_1_),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_write_mem_1_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_write_mem_1_inv;
};

using lookup_poseidon2_mem_pos_write_mem_1_settings = lookup_settings<lookup_poseidon2_mem_pos_write_mem_1_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_write_mem_1_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_write_mem_1_settings>;

/////////////////// lookup_poseidon2_mem_pos_write_mem_2 ///////////////////

struct lookup_poseidon2_mem_pos_write_mem_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_WRITE_MEM_2";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_write_address_2_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_2_),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_write_mem_2_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_write_mem_2_inv;
};

using lookup_poseidon2_mem_pos_write_mem_2_settings = lookup_settings<lookup_poseidon2_mem_pos_write_mem_2_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_write_mem_2_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_write_mem_2_settings>;

/////////////////// lookup_poseidon2_mem_pos_write_mem_3 ///////////////////

struct lookup_poseidon2_mem_pos_write_mem_3_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_POSEIDON2_MEM_POS_WRITE_MEM_3";
    static constexpr std::string_view RELATION_NAME = "poseidon2_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_execution_clk),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_write_address_3_),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_output_3_),
                        ColumnExpression(ColumnAndShifts::precomputed_zero),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_space_id),
                        ColumnExpression(ColumnAndShifts::poseidon2_perm_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_poseidon2_mem_pos_write_mem_3_counts;
    static constexpr Column INVERSES = Column::lookup_poseidon2_mem_pos_write_mem_3_inv;
};

using lookup_poseidon2_mem_pos_write_mem_3_settings = lookup_settings<lookup_poseidon2_mem_pos_write_mem_3_settings_>;
template <typename FF_>
using lookup_poseidon2_mem_pos_write_mem_3_relation =
    lookup_relation_base<FF_, lookup_poseidon2_mem_pos_write_mem_3_settings>;

} // namespace bb::avm2
