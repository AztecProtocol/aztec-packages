// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_emit_nullifier_write_nullifier ///////////////////

struct lookup_emit_nullifier_write_nullifier_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_EMIT_NULLIFIER_WRITE_NULLIFIER";
    static constexpr std::string_view RELATION_NAME = "emit_nullifier";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 9;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_write_nullifier;
    static constexpr Column DST_SELECTOR = Column::nullifier_check_write;
    static constexpr Column COUNTS = Column::lookup_emit_nullifier_write_nullifier_counts;
    static constexpr Column INVERSES = Column::lookup_emit_nullifier_write_nullifier_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_register_0_,
        ColumnAndShifts::execution_prev_nullifier_tree_root,
        ColumnAndShifts::execution_sel_opcode_error,
        ColumnAndShifts::execution_nullifier_tree_root,
        ColumnAndShifts::execution_prev_nullifier_tree_size,
        ColumnAndShifts::execution_discard,
        ColumnAndShifts::execution_prev_num_nullifiers_emitted,
        ColumnAndShifts::execution_sel_write_nullifier,
        ColumnAndShifts::execution_contract_address
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::nullifier_check_nullifier,
        ColumnAndShifts::nullifier_check_root,
        ColumnAndShifts::nullifier_check_exists,
        ColumnAndShifts::nullifier_check_write_root,
        ColumnAndShifts::nullifier_check_tree_size_before_write,
        ColumnAndShifts::nullifier_check_discard,
        ColumnAndShifts::nullifier_check_nullifier_index,
        ColumnAndShifts::nullifier_check_should_silo,
        ColumnAndShifts::nullifier_check_address
    };
};

using lookup_emit_nullifier_write_nullifier_settings = lookup_settings<lookup_emit_nullifier_write_nullifier_settings_>;
template <typename FF_>
using lookup_emit_nullifier_write_nullifier_relation =
    lookup_relation_base<FF_, lookup_emit_nullifier_write_nullifier_settings>;

} // namespace bb::avm2
