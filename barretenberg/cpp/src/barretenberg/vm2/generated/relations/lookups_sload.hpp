// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_sload_storage_read ///////////////////

struct lookup_sload_storage_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SLOAD_STORAGE_READ";
    static constexpr std::string_view RELATION_NAME = "sload";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_execute_sload;
    static constexpr Column DST_SELECTOR = Column::public_data_check_sel;
    static constexpr Column COUNTS = Column::lookup_sload_storage_read_counts;
    static constexpr Column INVERSES = Column::lookup_sload_storage_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_contract_address,
        ColumnAndShifts::execution_register_0_,
        ColumnAndShifts::execution_register_1_,
        ColumnAndShifts::execution_prev_public_data_tree_root
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::public_data_check_address,
        ColumnAndShifts::public_data_check_slot,
        ColumnAndShifts::public_data_check_value,
        ColumnAndShifts::public_data_check_root
    };
};

using lookup_sload_storage_read_settings = lookup_settings<lookup_sload_storage_read_settings_>;
template <typename FF_>
using lookup_sload_storage_read_relation = lookup_relation_base<FF_, lookup_sload_storage_read_settings>;

} // namespace bb::avm2
