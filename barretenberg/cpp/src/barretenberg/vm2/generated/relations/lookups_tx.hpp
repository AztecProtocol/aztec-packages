// AUTOGENERATED FILE
#pragma once

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

#include <cstddef>
#include <string_view>
#include <tuple>

namespace bb::avm2 {

/////////////////// lookup_tx_lookup_get_phase_table ///////////////////

struct lookup_tx_lookup_get_phase_table_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_TX_LOOKUP_GET_PHASE_TABLE";
    static constexpr std::string_view RELATION_NAME = "tx";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 12;
    static constexpr Column SRC_SELECTOR = Column::tx_start_phase;
    static constexpr Column DST_SELECTOR = Column::precomputed_phase_sel;
    static constexpr Column COUNTS = Column::lookup_tx_lookup_get_phase_table_counts;
    static constexpr Column INVERSES = Column::lookup_tx_lookup_get_phase_table_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::tx_phase_value,
        ColumnAndShifts::tx_is_public_call_request,
        ColumnAndShifts::tx_is_l2_l1_msg_phase,
        ColumnAndShifts::tx_is_collect_fee,
        ColumnAndShifts::tx_is_revertible,
        ColumnAndShifts::tx_read_pi_offset,
        ColumnAndShifts::tx_read_pi_length_offset,
        ColumnAndShifts::tx_write_pi_offset,
        ColumnAndShifts::tx_sel_non_revertible_append_note_hash,
        ColumnAndShifts::tx_sel_non_revertible_append_nullifier,
        ColumnAndShifts::tx_sel_revertible_append_note_hash,
        ColumnAndShifts::tx_sel_revertible_append_nullifier
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_phase_value,
        ColumnAndShifts::precomputed_is_public_call_request_phase,
        ColumnAndShifts::precomputed_is_l2_l1_message_phase,
        ColumnAndShifts::precomputed_sel_collect_fee,
        ColumnAndShifts::precomputed_is_revertible,
        ColumnAndShifts::precomputed_read_public_input_offset,
        ColumnAndShifts::precomputed_read_public_input_length_offset,
        ColumnAndShifts::precomputed_write_public_input_offset,
        ColumnAndShifts::precomputed_sel_non_revertible_append_note_hash,
        ColumnAndShifts::precomputed_sel_non_revertible_append_nullifier,
        ColumnAndShifts::precomputed_sel_revertible_append_note_hash,
        ColumnAndShifts::precomputed_sel_revertible_append_nullifier
    };
};

using lookup_tx_lookup_get_phase_table_settings = lookup_settings<lookup_tx_lookup_get_phase_table_settings_>;
template <typename FF_>
using lookup_tx_lookup_get_phase_table_relation = lookup_relation_base<FF_, lookup_tx_lookup_get_phase_table_settings>;

/////////////////// lookup_tx_lookup_jump_on_revert ///////////////////

struct lookup_tx_lookup_jump_on_revert_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_TX_LOOKUP_JUMP_ON_REVERT";
    static constexpr std::string_view RELATION_NAME = "tx";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::tx_reverted;
    static constexpr Column DST_SELECTOR = Column::precomputed_phase_sel;
    static constexpr Column COUNTS = Column::lookup_tx_lookup_jump_on_revert_counts;
    static constexpr Column INVERSES = Column::lookup_tx_lookup_jump_on_revert_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::tx_phase_value, ColumnAndShifts::tx_phase_value_shift
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_phase_value, ColumnAndShifts::precomputed_next_phase_on_revert
    };
};

using lookup_tx_lookup_jump_on_revert_settings = lookup_settings<lookup_tx_lookup_jump_on_revert_settings_>;
template <typename FF_>
using lookup_tx_lookup_jump_on_revert_relation = lookup_relation_base<FF_, lookup_tx_lookup_jump_on_revert_settings>;

/////////////////// lookup_tx_lookup_get_tree_insert_value ///////////////////

struct lookup_tx_lookup_get_tree_insert_value_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_TX_LOOKUP_GET_TREE_INSERT_VALUE";
    static constexpr std::string_view RELATION_NAME = "tx";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::tx_is_tree_insert_phase;
    static constexpr Column DST_SELECTOR = Column::public_inputs_sel;
    static constexpr Column COUNTS = Column::lookup_tx_lookup_get_tree_insert_value_counts;
    static constexpr Column INVERSES = Column::lookup_tx_lookup_get_tree_insert_value_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::tx_read_pi_offset,
                                                                                    ColumnAndShifts::tx_leaf_value };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::public_inputs_cols_0_
    };
};

using lookup_tx_lookup_get_tree_insert_value_settings =
    lookup_settings<lookup_tx_lookup_get_tree_insert_value_settings_>;
template <typename FF_>
using lookup_tx_lookup_get_tree_insert_value_relation =
    lookup_relation_base<FF_, lookup_tx_lookup_get_tree_insert_value_settings>;

} // namespace bb::avm2
