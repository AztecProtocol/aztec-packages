// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_ecc_mem_check_dst_addr_in_range ///////////////////

struct lookup_ecc_mem_check_dst_addr_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ECC_MEM_CHECK_DST_ADDR_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "ecc_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_add_mem_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::gt_sel);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_add_mem_dst_addr_2_),
                        ColumnExpression(ColumnAndShifts::ecc_add_mem_max_mem_addr),
                        ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_dst_out_of_range_err));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::gt_input_a),
                                                      ColumnExpression(ColumnAndShifts::gt_input_b),
                                                      ColumnExpression(ColumnAndShifts::gt_res));
    static constexpr Column COUNTS = Column::lookup_ecc_mem_check_dst_addr_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_ecc_mem_check_dst_addr_in_range_inv;
};

using lookup_ecc_mem_check_dst_addr_in_range_settings =
    lookup_settings<lookup_ecc_mem_check_dst_addr_in_range_settings_>;
template <typename FF_>
using lookup_ecc_mem_check_dst_addr_in_range_relation =
    lookup_relation_base<FF_, lookup_ecc_mem_check_dst_addr_in_range_settings>;

/////////////////// lookup_ecc_mem_input_output_ecc_add ///////////////////

struct lookup_ecc_mem_input_output_ecc_add_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ECC_MEM_INPUT_OUTPUT_ECC_ADD";
    static constexpr std::string_view RELATION_NAME = "ecc_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 9;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_add_mem_p_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_p_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_p_is_inf),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_q_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_q_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_q_is_inf),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_is_inf));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_p_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_p_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_p_is_inf),
                                                      ColumnExpression(ColumnAndShifts::ecc_q_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_q_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_q_is_inf),
                                                      ColumnExpression(ColumnAndShifts::ecc_r_x),
                                                      ColumnExpression(ColumnAndShifts::ecc_r_y),
                                                      ColumnExpression(ColumnAndShifts::ecc_r_is_inf));
    static constexpr Column COUNTS = Column::lookup_ecc_mem_input_output_ecc_add_counts;
    static constexpr Column INVERSES = Column::lookup_ecc_mem_input_output_ecc_add_inv;
};

using lookup_ecc_mem_input_output_ecc_add_settings = lookup_settings<lookup_ecc_mem_input_output_ecc_add_settings_>;
template <typename FF_>
using lookup_ecc_mem_input_output_ecc_add_relation =
    lookup_relation_base<FF_, lookup_ecc_mem_input_output_ecc_add_settings>;

/////////////////// lookup_ecc_mem_write_mem_0 ///////////////////

struct lookup_ecc_mem_write_mem_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ECC_MEM_WRITE_MEM_0";
    static constexpr std::string_view RELATION_NAME = "ecc_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_add_mem_execution_clk),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_dst_addr_0_),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_x),
                                                      ColumnExpression(ColumnAndShifts::precomputed_zero),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_space_id),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_ecc_mem_write_mem_0_counts;
    static constexpr Column INVERSES = Column::lookup_ecc_mem_write_mem_0_inv;
};

using lookup_ecc_mem_write_mem_0_settings = lookup_settings<lookup_ecc_mem_write_mem_0_settings_>;
template <typename FF_>
using lookup_ecc_mem_write_mem_0_relation = lookup_relation_base<FF_, lookup_ecc_mem_write_mem_0_settings>;

/////////////////// lookup_ecc_mem_write_mem_1 ///////////////////

struct lookup_ecc_mem_write_mem_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ECC_MEM_WRITE_MEM_1";
    static constexpr std::string_view RELATION_NAME = "ecc_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_add_mem_execution_clk),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_dst_addr_1_),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_y),
                                                      ColumnExpression(ColumnAndShifts::precomputed_zero),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_space_id),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_ecc_mem_write_mem_1_counts;
    static constexpr Column INVERSES = Column::lookup_ecc_mem_write_mem_1_inv;
};

using lookup_ecc_mem_write_mem_1_settings = lookup_settings<lookup_ecc_mem_write_mem_1_settings_>;
template <typename FF_>
using lookup_ecc_mem_write_mem_1_relation = lookup_relation_base<FF_, lookup_ecc_mem_write_mem_1_settings>;

/////////////////// lookup_ecc_mem_write_mem_2 ///////////////////

struct lookup_ecc_mem_write_mem_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ECC_MEM_WRITE_MEM_2";
    static constexpr std::string_view RELATION_NAME = "ecc_mem";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::memory_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::ecc_add_mem_execution_clk),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_dst_addr_2_),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_res_is_inf),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_space_id),
                                                      ColumnExpression(ColumnAndShifts::ecc_add_mem_sel_should_exec));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::memory_clk),
                                                      ColumnExpression(ColumnAndShifts::memory_address),
                                                      ColumnExpression(ColumnAndShifts::memory_value),
                                                      ColumnExpression(ColumnAndShifts::memory_tag),
                                                      ColumnExpression(ColumnAndShifts::memory_space_id),
                                                      ColumnExpression(ColumnAndShifts::memory_rw));
    static constexpr Column COUNTS = Column::lookup_ecc_mem_write_mem_2_counts;
    static constexpr Column INVERSES = Column::lookup_ecc_mem_write_mem_2_inv;
};

using lookup_ecc_mem_write_mem_2_settings = lookup_settings<lookup_ecc_mem_write_mem_2_settings_>;
template <typename FF_>
using lookup_ecc_mem_write_mem_2_relation = lookup_relation_base<FF_, lookup_ecc_mem_write_mem_2_settings>;

} // namespace bb::avm2
