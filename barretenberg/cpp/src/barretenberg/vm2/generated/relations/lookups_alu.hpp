// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_alu_register_tag_value ///////////////////

struct lookup_alu_register_tag_value_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ALU_REGISTER_TAG_VALUE";
    static constexpr std::string_view RELATION_NAME = "alu";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 8;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_alu;
    static constexpr Column DST_SELECTOR = Column::alu_sel;
    static constexpr Column COUNTS = Column::lookup_alu_register_tag_value_counts;
    static constexpr Column INVERSES = Column::lookup_alu_register_tag_value_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_register_0_,           ColumnAndShifts::execution_mem_tag_reg_0_,
        ColumnAndShifts::execution_register_1_,           ColumnAndShifts::execution_mem_tag_reg_1_,
        ColumnAndShifts::execution_register_2_,           ColumnAndShifts::execution_mem_tag_reg_2_,
        ColumnAndShifts::execution_subtrace_operation_id, ColumnAndShifts::execution_sel_opcode_error
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::alu_ia,     ColumnAndShifts::alu_ia_tag,     ColumnAndShifts::alu_ib,
        ColumnAndShifts::alu_ib_tag, ColumnAndShifts::alu_ic,         ColumnAndShifts::alu_ic_tag,
        ColumnAndShifts::alu_op_id,  ColumnAndShifts::alu_sel_tag_err
    };
};

using lookup_alu_register_tag_value_settings = lookup_settings<lookup_alu_register_tag_value_settings_>;
template <typename FF_>
using lookup_alu_register_tag_value_relation = lookup_relation_base<FF_, lookup_alu_register_tag_value_settings>;

/////////////////// lookup_alu_tag_max_value ///////////////////

struct lookup_alu_tag_max_value_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ALU_TAG_MAX_VALUE";
    static constexpr std::string_view RELATION_NAME = "alu";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::alu_sel;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_tag_parameters;
    static constexpr Column COUNTS = Column::lookup_alu_tag_max_value_counts;
    static constexpr Column INVERSES = Column::lookup_alu_tag_max_value_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::alu_ia_tag,
                                                                                    ColumnAndShifts::alu_max_value };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::precomputed_tag_max_value
    };
};

using lookup_alu_tag_max_value_settings = lookup_settings<lookup_alu_tag_max_value_settings_>;
template <typename FF_>
using lookup_alu_tag_max_value_relation = lookup_relation_base<FF_, lookup_alu_tag_max_value_settings>;

} // namespace bb::avm2
