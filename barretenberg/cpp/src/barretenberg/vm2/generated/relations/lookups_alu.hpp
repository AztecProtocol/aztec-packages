// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_alu_value_tag_lookup ///////////////////

struct lookup_alu_value_tag_lookup_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ALU_VALUE_TAG_LOOKUP";
    static constexpr std::string_view RELATION_NAME = "alu";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 7;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_alu;
    static constexpr Column DST_SELECTOR = Column::alu_sel;
    static constexpr Column COUNTS = Column::lookup_alu_value_tag_lookup_counts;
    static constexpr Column INVERSES = Column::lookup_alu_value_tag_lookup_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_register_0_,          ColumnAndShifts::execution_mem_tag_0_,
        ColumnAndShifts::execution_register_1_,          ColumnAndShifts::execution_mem_tag_1_,
        ColumnAndShifts::execution_register_2_,          ColumnAndShifts::execution_mem_tag_2_,
        ColumnAndShifts::execution_subtrace_operation_id
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::alu_ia, ColumnAndShifts::alu_ia_tag, ColumnAndShifts::alu_ib,   ColumnAndShifts::alu_ib_tag,
        ColumnAndShifts::alu_ic, ColumnAndShifts::alu_ic_tag, ColumnAndShifts::alu_op_id
    };
};

using lookup_alu_value_tag_lookup_settings = lookup_settings<lookup_alu_value_tag_lookup_settings_>;
template <typename FF_>
using lookup_alu_value_tag_lookup_relation = lookup_relation_base<FF_, lookup_alu_value_tag_lookup_settings>;

/////////////////// lookup_alu_c_range_check ///////////////////

struct lookup_alu_c_range_check_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ALU_C_RANGE_CHECK";
    static constexpr std::string_view RELATION_NAME = "alu";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::alu_sel;
    static constexpr Column DST_SELECTOR = Column::range_check_sel;
    static constexpr Column COUNTS = Column::lookup_alu_c_range_check_counts;
    static constexpr Column INVERSES = Column::lookup_alu_c_range_check_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::alu_ic,
                                                                                    ColumnAndShifts::alu_max_bits };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::range_check_value, ColumnAndShifts::range_check_rng_chk_bits
    };
};

using lookup_alu_c_range_check_settings = lookup_settings<lookup_alu_c_range_check_settings_>;
template <typename FF_>
using lookup_alu_c_range_check_relation = lookup_relation_base<FF_, lookup_alu_c_range_check_settings>;

/////////////////// lookup_alu_tag_bits_lookup ///////////////////

struct lookup_alu_tag_bits_lookup_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_ALU_TAG_BITS_LOOKUP";
    static constexpr std::string_view RELATION_NAME = "alu";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::alu_cf;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_range_8;
    static constexpr Column COUNTS = Column::lookup_alu_tag_bits_lookup_counts;
    static constexpr Column INVERSES = Column::lookup_alu_tag_bits_lookup_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::alu_max_bits,
                                                                                    ColumnAndShifts::alu_max_value };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::precomputed_power_of_2
    };
};

using lookup_alu_tag_bits_lookup_settings = lookup_settings<lookup_alu_tag_bits_lookup_settings_>;
template <typename FF_>
using lookup_alu_tag_bits_lookup_relation = lookup_relation_base<FF_, lookup_alu_tag_bits_lookup_settings>;

} // namespace bb::avm2
