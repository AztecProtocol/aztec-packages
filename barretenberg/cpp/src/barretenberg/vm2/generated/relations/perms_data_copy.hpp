// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_permutation/generic_permutation_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// perm_data_copy_dispatch_cd_copy ///////////////////

struct perm_data_copy_dispatch_cd_copy_settings_ {
    static constexpr std::string_view NAME = "PERM_DATA_COPY_DISPATCH_CD_COPY";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t COLUMNS_PER_SET = 10;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_execute_calldata_copy;
    static constexpr Column DST_SELECTOR = Column::data_copy_sel_cd_copy_start;
    static constexpr Column INVERSES = Column::perm_data_copy_dispatch_cd_copy_inv;
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> SRC_COLUMNS = {
        ColumnAndShifts::precomputed_clk,
        ColumnAndShifts::execution_parent_id,
        ColumnAndShifts::execution_context_id,
        ColumnAndShifts::execution_register_0_,
        ColumnAndShifts::execution_register_1_,
        ColumnAndShifts::execution_rop_2_,
        ColumnAndShifts::execution_parent_calldata_addr,
        ColumnAndShifts::execution_parent_calldata_size,
        ColumnAndShifts::execution_sel_execute_calldata_copy,
        ColumnAndShifts::execution_sel_opcode_error
    };
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> DST_COLUMNS = {
        ColumnAndShifts::data_copy_clk,
        ColumnAndShifts::data_copy_src_context_id,
        ColumnAndShifts::data_copy_dst_context_id,
        ColumnAndShifts::data_copy_copy_size,
        ColumnAndShifts::data_copy_offset,
        ColumnAndShifts::data_copy_dst_addr,
        ColumnAndShifts::data_copy_src_addr,
        ColumnAndShifts::data_copy_src_data_size,
        ColumnAndShifts::data_copy_sel_cd_copy,
        ColumnAndShifts::data_copy_err
    };
};

using perm_data_copy_dispatch_cd_copy_settings = permutation_settings<perm_data_copy_dispatch_cd_copy_settings_>;
template <typename FF_>
using perm_data_copy_dispatch_cd_copy_relation =
    permutation_relation_base<FF_, perm_data_copy_dispatch_cd_copy_settings>;

/////////////////// perm_data_copy_dispatch_rd_copy ///////////////////

struct perm_data_copy_dispatch_rd_copy_settings_ {
    static constexpr std::string_view NAME = "PERM_DATA_COPY_DISPATCH_RD_COPY";
    static constexpr std::string_view RELATION_NAME = "data_copy";
    static constexpr size_t COLUMNS_PER_SET = 10;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_execute_returndata_copy;
    static constexpr Column DST_SELECTOR = Column::data_copy_sel_rd_copy_start;
    static constexpr Column INVERSES = Column::perm_data_copy_dispatch_rd_copy_inv;
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> SRC_COLUMNS = {
        ColumnAndShifts::precomputed_clk,
        ColumnAndShifts::execution_last_child_id,
        ColumnAndShifts::execution_context_id,
        ColumnAndShifts::execution_register_0_,
        ColumnAndShifts::execution_register_1_,
        ColumnAndShifts::execution_rop_2_,
        ColumnAndShifts::execution_last_child_returndata_addr,
        ColumnAndShifts::execution_last_child_returndata_size,
        ColumnAndShifts::execution_sel_execute_returndata_copy,
        ColumnAndShifts::execution_sel_opcode_error
    };
    static constexpr std::array<ColumnAndShifts, COLUMNS_PER_SET> DST_COLUMNS = {
        ColumnAndShifts::data_copy_clk,
        ColumnAndShifts::data_copy_src_context_id,
        ColumnAndShifts::data_copy_dst_context_id,
        ColumnAndShifts::data_copy_copy_size,
        ColumnAndShifts::data_copy_offset,
        ColumnAndShifts::data_copy_dst_addr,
        ColumnAndShifts::data_copy_src_addr,
        ColumnAndShifts::data_copy_src_data_size,
        ColumnAndShifts::data_copy_sel_rd_copy,
        ColumnAndShifts::data_copy_err
    };
};

using perm_data_copy_dispatch_rd_copy_settings = permutation_settings<perm_data_copy_dispatch_rd_copy_settings_>;
template <typename FF_>
using perm_data_copy_dispatch_rd_copy_relation =
    permutation_relation_base<FF_, perm_data_copy_dispatch_rd_copy_settings>;

} // namespace bb::avm2
