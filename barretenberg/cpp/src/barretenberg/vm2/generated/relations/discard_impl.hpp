// AUTOGENERATED FILE
#pragma once

#include "barretenberg/vm2/generated/relations/discard.hpp"

namespace bb::avm2 {

template <typename FF_>
template <typename ContainerOverSubrelations, typename AllEntities>
void discardImpl<FF_>::accumulate(ContainerOverSubrelations& evals,
                                  const AllEntities& in,
                                  [[maybe_unused]] const RelationParameters<FF_>&,
                                  [[maybe_unused]] const FF_& scaling_factor)
{
    using C = ColumnAndShifts;

    BB_BENCH_TRACY_NAME("accumulate/discard");

    const auto execution_DYING_CONTEXT_DIFF = (in.get(C::execution_context_id) - in.get(C::execution_dying_context_id));

    { // SEL_FAILURE
        using Accumulator = typename std::tuple_element_t<0, ContainerOverSubrelations>;
        auto tmp = (in.get(C::execution_sel_failure) - (FF(1) - (FF(1) - in.get(C::execution_sel_error)) *
                                                                    (FF(1) - in.get(C::execution_sel_execute_revert))));
        tmp *= scaling_factor;
        std::get<0>(evals) += typename Accumulator::View(tmp);
    }
    {
        using Accumulator = typename std::tuple_element_t<1, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_discard) * (FF(1) - in.get(C::execution_discard));
        tmp *= scaling_factor;
        std::get<1>(evals) += typename Accumulator::View(tmp);
    }
    { // DISCARD_IFF_DYING_CONTEXT
        using Accumulator = typename std::tuple_element_t<2, ContainerOverSubrelations>;
        auto tmp = (in.get(C::execution_dying_context_id) *
                        ((FF(1) - in.get(C::execution_discard)) * (FF(1) - in.get(C::execution_dying_context_id_inv)) +
                         in.get(C::execution_dying_context_id_inv)) -
                    in.get(C::execution_discard));
        tmp *= scaling_factor;
        std::get<2>(evals) += typename Accumulator::View(tmp);
    }
    { // DISCARD_IF_FAILURE
        using Accumulator = typename std::tuple_element_t<3, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel_failure) * (FF(1) - in.get(C::execution_discard));
        tmp *= scaling_factor;
        std::get<3>(evals) += typename Accumulator::View(tmp);
    }
    {
        using Accumulator = typename std::tuple_element_t<4, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_is_dying_context) * (FF(1) - in.get(C::execution_is_dying_context));
        tmp *= scaling_factor;
        std::get<4>(evals) += typename Accumulator::View(tmp);
    }
    { // IS_DYING_CONTEXT_CHECK
        using Accumulator = typename std::tuple_element_t<5, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel) *
                   ((execution_DYING_CONTEXT_DIFF * (in.get(C::execution_is_dying_context) *
                                                         (FF(1) - in.get(C::execution_dying_context_diff_inv)) +
                                                     in.get(C::execution_dying_context_diff_inv)) -
                     FF(1)) +
                    in.get(C::execution_is_dying_context));
        tmp *= scaling_factor;
        std::get<5>(evals) += typename Accumulator::View(tmp);
    }
    { // RESOLVES_DYING_CONTEXT
        using Accumulator = typename std::tuple_element_t<6, ContainerOverSubrelations>;
        auto tmp = (in.get(C::execution_resolves_dying_context) -
                    in.get(C::execution_sel_failure) * in.get(C::execution_is_dying_context));
        tmp *= scaling_factor;
        std::get<6>(evals) += typename Accumulator::View(tmp);
    }
    { // NESTED_CALL_FROM_UNDISCARDED_CONTEXT
        using Accumulator = typename std::tuple_element_t<7, ContainerOverSubrelations>;
        auto tmp = (in.get(C::execution_nested_call_from_undiscarded_context) -
                    in.get(C::execution_sel_enter_call) * (FF(1) - in.get(C::execution_discard)));
        tmp *= scaling_factor;
        std::get<7>(evals) += typename Accumulator::View(tmp);
    }
    { // SHOULD_PROPAGATE_DISCARD
        using Accumulator = typename std::tuple_element_t<8, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel) * (in.get(C::execution_propagate_discard) -
                                               (FF(1) - in.get(C::execution_enqueued_call_end)) *
                                                   (FF(1) - in.get(C::execution_resolves_dying_context)) *
                                                   (FF(1) - in.get(C::execution_nested_call_from_undiscarded_context)));
        tmp *= scaling_factor;
        std::get<8>(evals) += typename Accumulator::View(tmp);
    }
    { // DISCARD_PROPAGATION
        using Accumulator = typename std::tuple_element_t<9, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel) * (FF(1) - in.get(C::execution_last)) *
                   in.get(C::execution_propagate_discard) *
                   (in.get(C::execution_discard_shift) - in.get(C::execution_discard));
        tmp *= scaling_factor;
        std::get<9>(evals) += typename Accumulator::View(tmp);
    }
    { // DYING_CONTEXT_PROPAGATION
        using Accumulator = typename std::tuple_element_t<10, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel) * (FF(1) - in.get(C::execution_last)) *
                   in.get(C::execution_propagate_discard) *
                   (in.get(C::execution_dying_context_id_shift) - in.get(C::execution_dying_context_id));
        tmp *= scaling_factor;
        std::get<10>(evals) += typename Accumulator::View(tmp);
    }
    { // DYING_CONTEXT_MUST_FAIL
        using Accumulator = typename std::tuple_element_t<11, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_is_dying_context) * in.get(C::execution_sel_exit_call) *
                   (FF(1) - in.get(C::execution_sel_failure));
        tmp *= scaling_factor;
        std::get<11>(evals) += typename Accumulator::View(tmp);
    }
    { // ENTER_CALL_DISCARD_MUST_BE_DYING_CONTEXT
        using Accumulator = typename std::tuple_element_t<12, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel_enter_call) * (FF(1) - in.get(C::execution_discard)) *
                   in.get(C::execution_discard_shift) *
                   (in.get(C::execution_context_id_shift) - in.get(C::execution_dying_context_id_shift));
        tmp *= scaling_factor;
        std::get<12>(evals) += typename Accumulator::View(tmp);
    }
    { // DYING_CONTEXT_WITH_PARENT_MUST_CLEAR_DISCARD
        using Accumulator = typename std::tuple_element_t<13, ContainerOverSubrelations>;
        auto tmp = in.get(C::execution_sel_failure) * in.get(C::execution_is_dying_context) *
                   in.get(C::execution_has_parent_ctx) * in.get(C::execution_discard_shift);
        tmp *= scaling_factor;
        std::get<13>(evals) += typename Accumulator::View(tmp);
    }
}

} // namespace bb::avm2
