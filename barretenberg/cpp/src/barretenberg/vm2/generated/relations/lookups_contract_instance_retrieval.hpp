// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_contract_instance_retrieval_deployment_nullifier_read ///////////////////

struct lookup_contract_instance_retrieval_deployment_nullifier_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTRACT_INSTANCE_RETRIEVAL_DEPLOYMENT_NULLIFIER_READ";
    static constexpr std::string_view RELATION_NAME = "contract_instance_retrieval";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::contract_instance_retrieval_sel;
    static constexpr Column DST_SELECTOR = Column::nullifier_check_sel;
    static constexpr Column COUNTS = Column::lookup_contract_instance_retrieval_deployment_nullifier_read_counts;
    static constexpr Column INVERSES = Column::lookup_contract_instance_retrieval_deployment_nullifier_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::contract_instance_retrieval_exists,
        ColumnAndShifts::contract_instance_retrieval_address,
        ColumnAndShifts::contract_instance_retrieval_nullifier_tree_root,
        ColumnAndShifts::contract_instance_retrieval_deployer_protocol_contract_address,
        ColumnAndShifts::contract_instance_retrieval_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::nullifier_check_exists,
        ColumnAndShifts::nullifier_check_nullifier,
        ColumnAndShifts::nullifier_check_root,
        ColumnAndShifts::nullifier_check_address,
        ColumnAndShifts::nullifier_check_should_silo
    };
};

using lookup_contract_instance_retrieval_deployment_nullifier_read_settings =
    lookup_settings<lookup_contract_instance_retrieval_deployment_nullifier_read_settings_>;
template <typename FF_>
using lookup_contract_instance_retrieval_deployment_nullifier_read_relation =
    lookup_relation_base<FF_, lookup_contract_instance_retrieval_deployment_nullifier_read_settings>;

/////////////////// lookup_contract_instance_retrieval_address_derivation ///////////////////

struct lookup_contract_instance_retrieval_address_derivation_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTRACT_INSTANCE_RETRIEVAL_ADDRESS_DERIVATION";
    static constexpr std::string_view RELATION_NAME = "contract_instance_retrieval";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 13;
    static constexpr Column SRC_SELECTOR = Column::contract_instance_retrieval_exists;
    static constexpr Column DST_SELECTOR = Column::address_derivation_sel;
    static constexpr Column COUNTS = Column::lookup_contract_instance_retrieval_address_derivation_counts;
    static constexpr Column INVERSES = Column::lookup_contract_instance_retrieval_address_derivation_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::contract_instance_retrieval_address,
        ColumnAndShifts::contract_instance_retrieval_salt,
        ColumnAndShifts::contract_instance_retrieval_deployer_addr,
        ColumnAndShifts::contract_instance_retrieval_original_class_id,
        ColumnAndShifts::contract_instance_retrieval_init_hash,
        ColumnAndShifts::contract_instance_retrieval_nullifier_key_x,
        ColumnAndShifts::contract_instance_retrieval_nullifier_key_y,
        ColumnAndShifts::contract_instance_retrieval_incoming_viewing_key_x,
        ColumnAndShifts::contract_instance_retrieval_incoming_viewing_key_y,
        ColumnAndShifts::contract_instance_retrieval_outgoing_viewing_key_x,
        ColumnAndShifts::contract_instance_retrieval_outgoing_viewing_key_y,
        ColumnAndShifts::contract_instance_retrieval_tagging_key_x,
        ColumnAndShifts::contract_instance_retrieval_tagging_key_y
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::address_derivation_address,
        ColumnAndShifts::address_derivation_salt,
        ColumnAndShifts::address_derivation_deployer_addr,
        ColumnAndShifts::address_derivation_class_id,
        ColumnAndShifts::address_derivation_init_hash,
        ColumnAndShifts::address_derivation_nullifier_key_x,
        ColumnAndShifts::address_derivation_nullifier_key_y,
        ColumnAndShifts::address_derivation_incoming_viewing_key_x,
        ColumnAndShifts::address_derivation_incoming_viewing_key_y,
        ColumnAndShifts::address_derivation_outgoing_viewing_key_x,
        ColumnAndShifts::address_derivation_outgoing_viewing_key_y,
        ColumnAndShifts::address_derivation_tagging_key_x,
        ColumnAndShifts::address_derivation_tagging_key_y
    };
};

using lookup_contract_instance_retrieval_address_derivation_settings =
    lookup_settings<lookup_contract_instance_retrieval_address_derivation_settings_>;
template <typename FF_>
using lookup_contract_instance_retrieval_address_derivation_relation =
    lookup_relation_base<FF_, lookup_contract_instance_retrieval_address_derivation_settings>;

/////////////////// lookup_contract_instance_retrieval_update_check ///////////////////

struct lookup_contract_instance_retrieval_update_check_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_CONTRACT_INSTANCE_RETRIEVAL_UPDATE_CHECK";
    static constexpr std::string_view RELATION_NAME = "contract_instance_retrieval";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::contract_instance_retrieval_exists;
    static constexpr Column DST_SELECTOR = Column::update_check_sel;
    static constexpr Column COUNTS = Column::lookup_contract_instance_retrieval_update_check_counts;
    static constexpr Column INVERSES = Column::lookup_contract_instance_retrieval_update_check_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::contract_instance_retrieval_address,
        ColumnAndShifts::contract_instance_retrieval_current_class_id,
        ColumnAndShifts::contract_instance_retrieval_original_class_id,
        ColumnAndShifts::contract_instance_retrieval_public_data_tree_root
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::update_check_address,
        ColumnAndShifts::update_check_current_class_id,
        ColumnAndShifts::update_check_original_class_id,
        ColumnAndShifts::update_check_public_data_tree_root
    };
};

using lookup_contract_instance_retrieval_update_check_settings =
    lookup_settings<lookup_contract_instance_retrieval_update_check_settings_>;
template <typename FF_>
using lookup_contract_instance_retrieval_update_check_relation =
    lookup_relation_base<FF_, lookup_contract_instance_retrieval_update_check_settings>;

} // namespace bb::avm2
