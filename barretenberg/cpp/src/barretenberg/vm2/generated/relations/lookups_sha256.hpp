// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_sha256_w_s_0_xor_0 ///////////////////

struct lookup_sha256_w_s_0_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_0_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_0_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_0_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_15_rotr_7,
        ColumnAndShifts::sha256_w_15_rotr_18,
        ColumnAndShifts::sha256_w_15_rotr_7_xor_w_15_rotr_18,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_w_s_0_xor_0_settings = lookup_settings<lookup_sha256_w_s_0_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_w_s_0_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_w_s_0_xor_0_settings>;

/////////////////// lookup_sha256_w_s_0_xor_1 ///////////////////

struct lookup_sha256_w_s_0_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_0_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_0_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_0_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_15_rotr_7_xor_w_15_rotr_18,
        ColumnAndShifts::sha256_w_15_rshift_3,
        ColumnAndShifts::sha256_w_s_0,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_w_s_0_xor_1_settings = lookup_settings<lookup_sha256_w_s_0_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_w_s_0_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_w_s_0_xor_1_settings>;

/////////////////// lookup_sha256_w_s_1_xor_0 ///////////////////

struct lookup_sha256_w_s_1_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_1_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_1_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_1_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_2_rotr_17,
        ColumnAndShifts::sha256_w_2_rotr_19,
        ColumnAndShifts::sha256_w_2_rotr_17_xor_w_2_rotr_19,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_w_s_1_xor_0_settings = lookup_settings<lookup_sha256_w_s_1_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_w_s_1_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_w_s_1_xor_0_settings>;

/////////////////// lookup_sha256_w_s_1_xor_1 ///////////////////

struct lookup_sha256_w_s_1_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_1_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_1_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_1_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_2_rotr_17_xor_w_2_rotr_19,
        ColumnAndShifts::sha256_w_2_rshift_10,
        ColumnAndShifts::sha256_w_s_1,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_w_s_1_xor_1_settings = lookup_settings<lookup_sha256_w_s_1_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_w_s_1_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_w_s_1_xor_1_settings>;

/////////////////// lookup_sha256_s_1_xor_0 ///////////////////

struct lookup_sha256_s_1_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_1_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_1_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_1_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_e_rotr_6,
        ColumnAndShifts::sha256_e_rotr_11,
        ColumnAndShifts::sha256_e_rotr_6_xor_e_rotr_11,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_s_1_xor_0_settings = lookup_settings<lookup_sha256_s_1_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_s_1_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_s_1_xor_0_settings>;

/////////////////// lookup_sha256_s_1_xor_1 ///////////////////

struct lookup_sha256_s_1_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_1_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_1_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_1_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_e_rotr_6_xor_e_rotr_11,
        ColumnAndShifts::sha256_e_rotr_25,
        ColumnAndShifts::sha256_s_1,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_s_1_xor_1_settings = lookup_settings<lookup_sha256_s_1_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_s_1_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_s_1_xor_1_settings>;

/////////////////// lookup_sha256_ch_and_0 ///////////////////

struct lookup_sha256_ch_and_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_AND_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_and_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_and_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_e,
                                                                                    ColumnAndShifts::sha256_f,
                                                                                    ColumnAndShifts::sha256_e_and_f,
                                                                                    ColumnAndShifts::sha256_and_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_ch_and_0_settings = lookup_settings<lookup_sha256_ch_and_0_settings_>;
template <typename FF_>
using lookup_sha256_ch_and_0_relation = lookup_relation_base<FF_, lookup_sha256_ch_and_0_settings>;

/////////////////// lookup_sha256_ch_and_1 ///////////////////

struct lookup_sha256_ch_and_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_AND_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_and_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_and_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_not_e,
                                                                                    ColumnAndShifts::sha256_g,
                                                                                    ColumnAndShifts::sha256_not_e_and_g,
                                                                                    ColumnAndShifts::sha256_and_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_ch_and_1_settings = lookup_settings<lookup_sha256_ch_and_1_settings_>;
template <typename FF_>
using lookup_sha256_ch_and_1_relation = lookup_relation_base<FF_, lookup_sha256_ch_and_1_settings>;

/////////////////// lookup_sha256_ch_xor ///////////////////

struct lookup_sha256_ch_xor_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_XOR";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_xor_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_xor_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_e_and_f,
                                                                                    ColumnAndShifts::sha256_not_e_and_g,
                                                                                    ColumnAndShifts::sha256_ch,
                                                                                    ColumnAndShifts::sha256_xor_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_ch_xor_settings = lookup_settings<lookup_sha256_ch_xor_settings_>;
template <typename FF_> using lookup_sha256_ch_xor_relation = lookup_relation_base<FF_, lookup_sha256_ch_xor_settings>;

/////////////////// lookup_sha256_round_constant ///////////////////

struct lookup_sha256_round_constant_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_ROUND_CONSTANT";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_sha256_compression;
    static constexpr Column COUNTS = Column::lookup_sha256_round_constant_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_round_constant_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_round_count, ColumnAndShifts::sha256_round_constant
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::precomputed_sha256_compression_round_constant
    };
};

using lookup_sha256_round_constant_settings = lookup_settings<lookup_sha256_round_constant_settings_>;
template <typename FF_>
using lookup_sha256_round_constant_relation = lookup_relation_base<FF_, lookup_sha256_round_constant_settings>;

/////////////////// lookup_sha256_s_0_xor_0 ///////////////////

struct lookup_sha256_s_0_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_0_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_0_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_0_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_rotr_2,
        ColumnAndShifts::sha256_a_rotr_13,
        ColumnAndShifts::sha256_a_rotr_2_xor_a_rotr_13,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_s_0_xor_0_settings = lookup_settings<lookup_sha256_s_0_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_s_0_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_s_0_xor_0_settings>;

/////////////////// lookup_sha256_s_0_xor_1 ///////////////////

struct lookup_sha256_s_0_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_0_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_0_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_0_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_rotr_2_xor_a_rotr_13,
        ColumnAndShifts::sha256_a_rotr_22,
        ColumnAndShifts::sha256_s_0,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_s_0_xor_1_settings = lookup_settings<lookup_sha256_s_0_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_s_0_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_s_0_xor_1_settings>;

/////////////////// lookup_sha256_maj_and_0 ///////////////////

struct lookup_sha256_maj_and_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_a,
                                                                                    ColumnAndShifts::sha256_b,
                                                                                    ColumnAndShifts::sha256_a_and_b,
                                                                                    ColumnAndShifts::sha256_and_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_maj_and_0_settings = lookup_settings<lookup_sha256_maj_and_0_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_0_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_0_settings>;

/////////////////// lookup_sha256_maj_and_1 ///////////////////

struct lookup_sha256_maj_and_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_a,
                                                                                    ColumnAndShifts::sha256_c,
                                                                                    ColumnAndShifts::sha256_a_and_c,
                                                                                    ColumnAndShifts::sha256_and_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_maj_and_1_settings = lookup_settings<lookup_sha256_maj_and_1_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_1_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_1_settings>;

/////////////////// lookup_sha256_maj_and_2 ///////////////////

struct lookup_sha256_maj_and_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_2";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_2_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_2_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_b,
                                                                                    ColumnAndShifts::sha256_c,
                                                                                    ColumnAndShifts::sha256_b_and_c,
                                                                                    ColumnAndShifts::sha256_and_sel };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_maj_and_2_settings = lookup_settings<lookup_sha256_maj_and_2_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_2_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_2_settings>;

/////////////////// lookup_sha256_maj_xor_0 ///////////////////

struct lookup_sha256_maj_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_and_b,
        ColumnAndShifts::sha256_a_and_c,
        ColumnAndShifts::sha256_a_and_b_xor_a_and_c,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_maj_xor_0_settings = lookup_settings<lookup_sha256_maj_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_maj_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_maj_xor_0_settings>;

/////////////////// lookup_sha256_maj_xor_1 ///////////////////

struct lookup_sha256_maj_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_and_b_xor_a_and_c,
        ColumnAndShifts::sha256_b_and_c,
        ColumnAndShifts::sha256_maj,
        ColumnAndShifts::sha256_xor_sel
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id };
};

using lookup_sha256_maj_xor_1_settings = lookup_settings<lookup_sha256_maj_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_maj_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_maj_xor_1_settings>;

} // namespace bb::avm2
