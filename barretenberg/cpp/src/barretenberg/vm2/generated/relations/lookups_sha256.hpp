// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_sha256_range_comp_w_lhs ///////////////////

struct lookup_sha256_range_comp_w_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_W_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_w_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_w_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32,
        ColumnAndShifts::sha256_computed_w_lhs,
        ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_w_lhs_settings = lookup_settings<lookup_sha256_range_comp_w_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_w_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_w_lhs_settings>;

/////////////////// lookup_sha256_range_comp_w_rhs ///////////////////

struct lookup_sha256_range_comp_w_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_W_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_w_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_w_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32,
        ColumnAndShifts::sha256_computed_w_rhs,
        ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_w_rhs_settings = lookup_settings<lookup_sha256_range_comp_w_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_w_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_w_rhs_settings>;

/////////////////// lookup_sha256_range_rhs_w_7 ///////////////////

struct lookup_sha256_range_rhs_w_7_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_7";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_7_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_7_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_7, ColumnAndShifts::sha256_rhs_w_7, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_7_settings = lookup_settings<lookup_sha256_range_rhs_w_7_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_7_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_7_settings>;

/////////////////// lookup_sha256_range_rhs_w_18 ///////////////////

struct lookup_sha256_range_rhs_w_18_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_18";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_18_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_18_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_18, ColumnAndShifts::sha256_rhs_w_18, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_18_settings = lookup_settings<lookup_sha256_range_rhs_w_18_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_18_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_18_settings>;

/////////////////// lookup_sha256_range_rhs_w_3 ///////////////////

struct lookup_sha256_range_rhs_w_3_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_3";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_3_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_3_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_3, ColumnAndShifts::sha256_rhs_w_3, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_3_settings = lookup_settings<lookup_sha256_range_rhs_w_3_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_3_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_3_settings>;

/////////////////// lookup_sha256_w_s_0_xor_0 ///////////////////

struct lookup_sha256_w_s_0_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_0_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_0_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_0_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_15_rotr_7,
        ColumnAndShifts::sha256_w_15_rotr_18,
        ColumnAndShifts::sha256_w_15_rotr_7_xor_w_15_rotr_18,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_w_s_0_xor_0_settings = lookup_settings<lookup_sha256_w_s_0_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_w_s_0_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_w_s_0_xor_0_settings>;

/////////////////// lookup_sha256_w_s_0_xor_1 ///////////////////

struct lookup_sha256_w_s_0_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_0_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_0_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_0_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_15_rotr_7_xor_w_15_rotr_18,
        ColumnAndShifts::sha256_w_15_rshift_3,
        ColumnAndShifts::sha256_w_s_0,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_w_s_0_xor_1_settings = lookup_settings<lookup_sha256_w_s_0_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_w_s_0_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_w_s_0_xor_1_settings>;

/////////////////// lookup_sha256_range_rhs_w_17 ///////////////////

struct lookup_sha256_range_rhs_w_17_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_17";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_17_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_17_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_17, ColumnAndShifts::sha256_rhs_w_17, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_17_settings = lookup_settings<lookup_sha256_range_rhs_w_17_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_17_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_17_settings>;

/////////////////// lookup_sha256_range_rhs_w_19 ///////////////////

struct lookup_sha256_range_rhs_w_19_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_19";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_19_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_19_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_19, ColumnAndShifts::sha256_rhs_w_19, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_19_settings = lookup_settings<lookup_sha256_range_rhs_w_19_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_19_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_19_settings>;

/////////////////// lookup_sha256_range_rhs_w_10 ///////////////////

struct lookup_sha256_range_rhs_w_10_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_W_10";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_w_10_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_w_10_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_10, ColumnAndShifts::sha256_rhs_w_10, ColumnAndShifts::sha256_sel_compute_w
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_w_10_settings = lookup_settings<lookup_sha256_range_rhs_w_10_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_w_10_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_w_10_settings>;

/////////////////// lookup_sha256_w_s_1_xor_0 ///////////////////

struct lookup_sha256_w_s_1_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_1_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_1_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_1_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_2_rotr_17,
        ColumnAndShifts::sha256_w_2_rotr_19,
        ColumnAndShifts::sha256_w_2_rotr_17_xor_w_2_rotr_19,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_w_s_1_xor_0_settings = lookup_settings<lookup_sha256_w_s_1_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_w_s_1_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_w_s_1_xor_0_settings>;

/////////////////// lookup_sha256_w_s_1_xor_1 ///////////////////

struct lookup_sha256_w_s_1_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_W_S_1_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 6;
    static constexpr Column SRC_SELECTOR = Column::sha256_sel_compute_w;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_w_s_1_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_w_s_1_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_w_2_rotr_17_xor_w_2_rotr_19,
        ColumnAndShifts::sha256_w_2_rshift_10,
        ColumnAndShifts::sha256_w_s_1,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::bitwise_acc_ia, ColumnAndShifts::bitwise_acc_ib, ColumnAndShifts::bitwise_acc_ic,
        ColumnAndShifts::bitwise_op_id,  ColumnAndShifts::bitwise_tag_a,  ColumnAndShifts::bitwise_tag_a
    };
};

using lookup_sha256_w_s_1_xor_1_settings = lookup_settings<lookup_sha256_w_s_1_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_w_s_1_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_w_s_1_xor_1_settings>;

/////////////////// lookup_sha256_range_rhs_e_6 ///////////////////

struct lookup_sha256_range_rhs_e_6_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_E_6";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_e_6_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_e_6_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_6, ColumnAndShifts::sha256_rhs_e_6, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_e_6_settings = lookup_settings<lookup_sha256_range_rhs_e_6_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_e_6_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_e_6_settings>;

/////////////////// lookup_sha256_range_rhs_e_11 ///////////////////

struct lookup_sha256_range_rhs_e_11_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_E_11";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_e_11_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_e_11_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_11, ColumnAndShifts::sha256_rhs_e_11, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_e_11_settings = lookup_settings<lookup_sha256_range_rhs_e_11_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_e_11_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_e_11_settings>;

/////////////////// lookup_sha256_range_rhs_e_25 ///////////////////

struct lookup_sha256_range_rhs_e_25_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_E_25";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_e_25_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_e_25_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_25, ColumnAndShifts::sha256_rhs_e_25, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_e_25_settings = lookup_settings<lookup_sha256_range_rhs_e_25_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_e_25_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_e_25_settings>;

/////////////////// lookup_sha256_s_1_xor_0 ///////////////////

struct lookup_sha256_s_1_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_1_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_1_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_1_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_e_rotr_6,
        ColumnAndShifts::sha256_e_rotr_11,
        ColumnAndShifts::sha256_e_rotr_6_xor_e_rotr_11,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_s_1_xor_0_settings = lookup_settings<lookup_sha256_s_1_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_s_1_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_s_1_xor_0_settings>;

/////////////////// lookup_sha256_s_1_xor_1 ///////////////////

struct lookup_sha256_s_1_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_1_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_1_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_1_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_e_rotr_6_xor_e_rotr_11,
        ColumnAndShifts::sha256_e_rotr_25,
        ColumnAndShifts::sha256_s_1,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_s_1_xor_1_settings = lookup_settings<lookup_sha256_s_1_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_s_1_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_s_1_xor_1_settings>;

/////////////////// lookup_sha256_ch_and_0 ///////////////////

struct lookup_sha256_ch_and_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_AND_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_and_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_and_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_e,
                                                                                    ColumnAndShifts::sha256_f,
                                                                                    ColumnAndShifts::sha256_e_and_f,
                                                                                    ColumnAndShifts::sha256_and_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_ch_and_0_settings = lookup_settings<lookup_sha256_ch_and_0_settings_>;
template <typename FF_>
using lookup_sha256_ch_and_0_relation = lookup_relation_base<FF_, lookup_sha256_ch_and_0_settings>;

/////////////////// lookup_sha256_ch_and_1 ///////////////////

struct lookup_sha256_ch_and_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_AND_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_and_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_and_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_not_e,
                                                                                    ColumnAndShifts::sha256_g,
                                                                                    ColumnAndShifts::sha256_not_e_and_g,
                                                                                    ColumnAndShifts::sha256_and_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_ch_and_1_settings = lookup_settings<lookup_sha256_ch_and_1_settings_>;
template <typename FF_>
using lookup_sha256_ch_and_1_relation = lookup_relation_base<FF_, lookup_sha256_ch_and_1_settings>;

/////////////////// lookup_sha256_ch_xor ///////////////////

struct lookup_sha256_ch_xor_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_CH_XOR";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_ch_xor_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_ch_xor_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_e_and_f,
                                                                                    ColumnAndShifts::sha256_not_e_and_g,
                                                                                    ColumnAndShifts::sha256_ch,
                                                                                    ColumnAndShifts::sha256_xor_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_ch_xor_settings = lookup_settings<lookup_sha256_ch_xor_settings_>;
template <typename FF_> using lookup_sha256_ch_xor_relation = lookup_relation_base<FF_, lookup_sha256_ch_xor_settings>;

/////////////////// lookup_sha256_round_constant ///////////////////

struct lookup_sha256_round_constant_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_ROUND_CONSTANT";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_sha256_compression;
    static constexpr Column COUNTS = Column::lookup_sha256_round_constant_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_round_constant_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_round_count, ColumnAndShifts::sha256_round_constant
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::precomputed_sha256_compression_round_constant
    };
};

using lookup_sha256_round_constant_settings = lookup_settings<lookup_sha256_round_constant_settings_>;
template <typename FF_>
using lookup_sha256_round_constant_relation = lookup_relation_base<FF_, lookup_sha256_round_constant_settings>;

/////////////////// lookup_sha256_range_rhs_a_2 ///////////////////

struct lookup_sha256_range_rhs_a_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_A_2";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_a_2_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_a_2_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_2, ColumnAndShifts::sha256_rhs_a_2, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_a_2_settings = lookup_settings<lookup_sha256_range_rhs_a_2_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_a_2_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_a_2_settings>;

/////////////////// lookup_sha256_range_rhs_a_13 ///////////////////

struct lookup_sha256_range_rhs_a_13_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_A_13";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_a_13_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_a_13_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_13, ColumnAndShifts::sha256_rhs_a_13, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_a_13_settings = lookup_settings<lookup_sha256_range_rhs_a_13_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_a_13_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_a_13_settings>;

/////////////////// lookup_sha256_range_rhs_a_22 ///////////////////

struct lookup_sha256_range_rhs_a_22_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_RHS_A_22";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_rhs_a_22_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_rhs_a_22_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_22, ColumnAndShifts::sha256_rhs_a_22, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_rhs_a_22_settings = lookup_settings<lookup_sha256_range_rhs_a_22_settings_>;
template <typename FF_>
using lookup_sha256_range_rhs_a_22_relation = lookup_relation_base<FF_, lookup_sha256_range_rhs_a_22_settings>;

/////////////////// lookup_sha256_s_0_xor_0 ///////////////////

struct lookup_sha256_s_0_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_0_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_0_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_0_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_rotr_2,
        ColumnAndShifts::sha256_a_rotr_13,
        ColumnAndShifts::sha256_a_rotr_2_xor_a_rotr_13,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_s_0_xor_0_settings = lookup_settings<lookup_sha256_s_0_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_s_0_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_s_0_xor_0_settings>;

/////////////////// lookup_sha256_s_0_xor_1 ///////////////////

struct lookup_sha256_s_0_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_S_0_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_s_0_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_s_0_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_rotr_2_xor_a_rotr_13,
        ColumnAndShifts::sha256_a_rotr_22,
        ColumnAndShifts::sha256_s_0,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_s_0_xor_1_settings = lookup_settings<lookup_sha256_s_0_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_s_0_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_s_0_xor_1_settings>;

/////////////////// lookup_sha256_maj_and_0 ///////////////////

struct lookup_sha256_maj_and_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_a,
                                                                                    ColumnAndShifts::sha256_b,
                                                                                    ColumnAndShifts::sha256_a_and_b,
                                                                                    ColumnAndShifts::sha256_and_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_maj_and_0_settings = lookup_settings<lookup_sha256_maj_and_0_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_0_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_0_settings>;

/////////////////// lookup_sha256_maj_and_1 ///////////////////

struct lookup_sha256_maj_and_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_a,
                                                                                    ColumnAndShifts::sha256_c,
                                                                                    ColumnAndShifts::sha256_a_and_c,
                                                                                    ColumnAndShifts::sha256_and_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_maj_and_1_settings = lookup_settings<lookup_sha256_maj_and_1_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_1_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_1_settings>;

/////////////////// lookup_sha256_maj_and_2 ///////////////////

struct lookup_sha256_maj_and_2_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_AND_2";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_and_2_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_and_2_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = { ColumnAndShifts::sha256_b,
                                                                                    ColumnAndShifts::sha256_c,
                                                                                    ColumnAndShifts::sha256_b_and_c,
                                                                                    ColumnAndShifts::sha256_and_sel,
                                                                                    ColumnAndShifts::sha256_u32_tag };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_maj_and_2_settings = lookup_settings<lookup_sha256_maj_and_2_settings_>;
template <typename FF_>
using lookup_sha256_maj_and_2_relation = lookup_relation_base<FF_, lookup_sha256_maj_and_2_settings>;

/////////////////// lookup_sha256_maj_xor_0 ///////////////////

struct lookup_sha256_maj_xor_0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_XOR_0";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_xor_0_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_xor_0_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_and_b,
        ColumnAndShifts::sha256_a_and_c,
        ColumnAndShifts::sha256_a_and_b_xor_a_and_c,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_maj_xor_0_settings = lookup_settings<lookup_sha256_maj_xor_0_settings_>;
template <typename FF_>
using lookup_sha256_maj_xor_0_relation = lookup_relation_base<FF_, lookup_sha256_maj_xor_0_settings>;

/////////////////// lookup_sha256_maj_xor_1 ///////////////////

struct lookup_sha256_maj_xor_1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_MAJ_XOR_1";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::bitwise_start;
    static constexpr Column COUNTS = Column::lookup_sha256_maj_xor_1_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_maj_xor_1_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_a_and_b_xor_a_and_c,
        ColumnAndShifts::sha256_b_and_c,
        ColumnAndShifts::sha256_maj,
        ColumnAndShifts::sha256_xor_sel,
        ColumnAndShifts::sha256_u32_tag
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::bitwise_acc_ia,
                                                                                    ColumnAndShifts::bitwise_acc_ib,
                                                                                    ColumnAndShifts::bitwise_acc_ic,
                                                                                    ColumnAndShifts::bitwise_op_id,
                                                                                    ColumnAndShifts::bitwise_tag_a };
};

using lookup_sha256_maj_xor_1_settings = lookup_settings<lookup_sha256_maj_xor_1_settings_>;
template <typename FF_>
using lookup_sha256_maj_xor_1_relation = lookup_relation_base<FF_, lookup_sha256_maj_xor_1_settings>;

/////////////////// lookup_sha256_range_comp_next_a_lhs ///////////////////

struct lookup_sha256_range_comp_next_a_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_NEXT_A_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_next_a_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_next_a_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_next_a_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_next_a_lhs_settings = lookup_settings<lookup_sha256_range_comp_next_a_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_next_a_lhs_relation =
    lookup_relation_base<FF_, lookup_sha256_range_comp_next_a_lhs_settings>;

/////////////////// lookup_sha256_range_comp_next_a_rhs ///////////////////

struct lookup_sha256_range_comp_next_a_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_NEXT_A_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_next_a_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_next_a_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_next_a_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_next_a_rhs_settings = lookup_settings<lookup_sha256_range_comp_next_a_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_next_a_rhs_relation =
    lookup_relation_base<FF_, lookup_sha256_range_comp_next_a_rhs_settings>;

/////////////////// lookup_sha256_range_comp_next_e_lhs ///////////////////

struct lookup_sha256_range_comp_next_e_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_NEXT_E_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_next_e_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_next_e_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_next_e_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_next_e_lhs_settings = lookup_settings<lookup_sha256_range_comp_next_e_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_next_e_lhs_relation =
    lookup_relation_base<FF_, lookup_sha256_range_comp_next_e_lhs_settings>;

/////////////////// lookup_sha256_range_comp_next_e_rhs ///////////////////

struct lookup_sha256_range_comp_next_e_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_NEXT_E_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_next_e_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_next_e_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_next_e_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_next_e_rhs_settings = lookup_settings<lookup_sha256_range_comp_next_e_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_next_e_rhs_relation =
    lookup_relation_base<FF_, lookup_sha256_range_comp_next_e_rhs_settings>;

/////////////////// lookup_sha256_range_comp_a_lhs ///////////////////

struct lookup_sha256_range_comp_a_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_A_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_a_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_a_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_a_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_a_lhs_settings = lookup_settings<lookup_sha256_range_comp_a_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_a_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_a_lhs_settings>;

/////////////////// lookup_sha256_range_comp_a_rhs ///////////////////

struct lookup_sha256_range_comp_a_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_A_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_a_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_a_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_a_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_a_rhs_settings = lookup_settings<lookup_sha256_range_comp_a_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_a_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_a_rhs_settings>;

/////////////////// lookup_sha256_range_comp_b_lhs ///////////////////

struct lookup_sha256_range_comp_b_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_B_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_b_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_b_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_b_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_b_lhs_settings = lookup_settings<lookup_sha256_range_comp_b_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_b_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_b_lhs_settings>;

/////////////////// lookup_sha256_range_comp_b_rhs ///////////////////

struct lookup_sha256_range_comp_b_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_B_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_b_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_b_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_b_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_b_rhs_settings = lookup_settings<lookup_sha256_range_comp_b_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_b_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_b_rhs_settings>;

/////////////////// lookup_sha256_range_comp_c_lhs ///////////////////

struct lookup_sha256_range_comp_c_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_C_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_c_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_c_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_c_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_c_lhs_settings = lookup_settings<lookup_sha256_range_comp_c_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_c_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_c_lhs_settings>;

/////////////////// lookup_sha256_range_comp_c_rhs ///////////////////

struct lookup_sha256_range_comp_c_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_C_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_c_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_c_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_c_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_c_rhs_settings = lookup_settings<lookup_sha256_range_comp_c_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_c_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_c_rhs_settings>;

/////////////////// lookup_sha256_range_comp_d_lhs ///////////////////

struct lookup_sha256_range_comp_d_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_D_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_d_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_d_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_d_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_d_lhs_settings = lookup_settings<lookup_sha256_range_comp_d_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_d_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_d_lhs_settings>;

/////////////////// lookup_sha256_range_comp_d_rhs ///////////////////

struct lookup_sha256_range_comp_d_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_D_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_d_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_d_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_d_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_d_rhs_settings = lookup_settings<lookup_sha256_range_comp_d_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_d_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_d_rhs_settings>;

/////////////////// lookup_sha256_range_comp_e_lhs ///////////////////

struct lookup_sha256_range_comp_e_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_E_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_e_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_e_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_e_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_e_lhs_settings = lookup_settings<lookup_sha256_range_comp_e_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_e_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_e_lhs_settings>;

/////////////////// lookup_sha256_range_comp_e_rhs ///////////////////

struct lookup_sha256_range_comp_e_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_E_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_e_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_e_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_e_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_e_rhs_settings = lookup_settings<lookup_sha256_range_comp_e_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_e_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_e_rhs_settings>;

/////////////////// lookup_sha256_range_comp_f_lhs ///////////////////

struct lookup_sha256_range_comp_f_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_F_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_f_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_f_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_f_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_f_lhs_settings = lookup_settings<lookup_sha256_range_comp_f_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_f_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_f_lhs_settings>;

/////////////////// lookup_sha256_range_comp_f_rhs ///////////////////

struct lookup_sha256_range_comp_f_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_F_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_f_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_f_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_f_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_f_rhs_settings = lookup_settings<lookup_sha256_range_comp_f_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_f_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_f_rhs_settings>;

/////////////////// lookup_sha256_range_comp_g_lhs ///////////////////

struct lookup_sha256_range_comp_g_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_G_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_g_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_g_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_g_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_g_lhs_settings = lookup_settings<lookup_sha256_range_comp_g_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_g_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_g_lhs_settings>;

/////////////////// lookup_sha256_range_comp_g_rhs ///////////////////

struct lookup_sha256_range_comp_g_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_G_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_g_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_g_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_g_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_g_rhs_settings = lookup_settings<lookup_sha256_range_comp_g_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_g_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_g_rhs_settings>;

/////////////////// lookup_sha256_range_comp_h_lhs ///////////////////

struct lookup_sha256_range_comp_h_lhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_H_LHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_h_lhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_h_lhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_h_lhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_h_lhs_settings = lookup_settings<lookup_sha256_range_comp_h_lhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_h_lhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_h_lhs_settings>;

/////////////////// lookup_sha256_range_comp_h_rhs ///////////////////

struct lookup_sha256_range_comp_h_rhs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_SHA256_RANGE_COMP_H_RHS";
    static constexpr std::string_view RELATION_NAME = "sha256";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::sha256_perform_round;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_sha256_range_comp_h_rhs_counts;
    static constexpr Column INVERSES = Column::lookup_sha256_range_comp_h_rhs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::sha256_two_pow_32, ColumnAndShifts::sha256_output_h_rhs, ColumnAndShifts::sha256_perform_round
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_sha256_range_comp_h_rhs_settings = lookup_settings<lookup_sha256_range_comp_h_rhs_settings_>;
template <typename FF_>
using lookup_sha256_range_comp_h_rhs_relation = lookup_relation_base<FF_, lookup_sha256_range_comp_h_rhs_settings>;

} // namespace bb::avm2
