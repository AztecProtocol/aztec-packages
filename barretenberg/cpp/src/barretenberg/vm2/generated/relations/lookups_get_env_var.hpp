// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_get_env_var_precomputed_info ///////////////////

struct lookup_get_env_var_precomputed_info_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_GET_ENV_VAR_PRECOMPUTED_INFO";
    static constexpr std::string_view RELATION_NAME = "get_env_var";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 12;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_sel_execute_get_env_var);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::precomputed_sel_range_8);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::execution_rop_1_),
                        ColumnExpression(ColumnAndShifts::execution_sel_opcode_error),
                        ColumnExpression(ColumnAndShifts::execution_sel_envvar_pi_lookup_col0),
                        ColumnExpression(ColumnAndShifts::execution_sel_envvar_pi_lookup_col1),
                        ColumnExpression(ColumnAndShifts::execution_envvar_pi_row_idx),
                        ColumnExpression(ColumnAndShifts::execution_is_address),
                        ColumnExpression(ColumnAndShifts::execution_is_sender),
                        ColumnExpression(ColumnAndShifts::execution_is_transactionfee),
                        ColumnExpression(ColumnAndShifts::execution_is_isstaticcall),
                        ColumnExpression(ColumnAndShifts::execution_is_l2gasleft),
                        ColumnExpression(ColumnAndShifts::execution_is_dagasleft),
                        ColumnExpression(ColumnAndShifts::execution_mem_tag_reg_0_));
    static constexpr auto DST_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::precomputed_clk),
                        ColumnExpression(ColumnAndShifts::precomputed_invalid_envvar_enum),
                        ColumnExpression(ColumnAndShifts::precomputed_sel_envvar_pi_lookup_col0),
                        ColumnExpression(ColumnAndShifts::precomputed_sel_envvar_pi_lookup_col1),
                        ColumnExpression(ColumnAndShifts::precomputed_envvar_pi_row_idx),
                        ColumnExpression(ColumnAndShifts::precomputed_is_address),
                        ColumnExpression(ColumnAndShifts::precomputed_is_sender),
                        ColumnExpression(ColumnAndShifts::precomputed_is_transactionfee),
                        ColumnExpression(ColumnAndShifts::precomputed_is_isstaticcall),
                        ColumnExpression(ColumnAndShifts::precomputed_is_l2gasleft),
                        ColumnExpression(ColumnAndShifts::precomputed_is_dagasleft),
                        ColumnExpression(ColumnAndShifts::precomputed_out_tag));
    static constexpr Column COUNTS = Column::lookup_get_env_var_precomputed_info_counts;
    static constexpr Column INVERSES = Column::lookup_get_env_var_precomputed_info_inv;
};

using lookup_get_env_var_precomputed_info_settings = lookup_settings<lookup_get_env_var_precomputed_info_settings_>;
template <typename FF_>
using lookup_get_env_var_precomputed_info_relation =
    lookup_relation_base<FF_, lookup_get_env_var_precomputed_info_settings>;

/////////////////// lookup_get_env_var_read_from_public_inputs_col0 ///////////////////

struct lookup_get_env_var_read_from_public_inputs_col0_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_GET_ENV_VAR_READ_FROM_PUBLIC_INPUTS_COL0";
    static constexpr std::string_view RELATION_NAME = "get_env_var";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_sel_envvar_pi_lookup_col0);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::public_inputs_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::execution_envvar_pi_row_idx),
                                                      ColumnExpression(ColumnAndShifts::execution_value_from_pi));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::precomputed_clk),
                                                      ColumnExpression(ColumnAndShifts::public_inputs_cols_0_));
    static constexpr Column COUNTS = Column::lookup_get_env_var_read_from_public_inputs_col0_counts;
    static constexpr Column INVERSES = Column::lookup_get_env_var_read_from_public_inputs_col0_inv;
};

using lookup_get_env_var_read_from_public_inputs_col0_settings =
    lookup_settings<lookup_get_env_var_read_from_public_inputs_col0_settings_>;
template <typename FF_>
using lookup_get_env_var_read_from_public_inputs_col0_relation =
    lookup_relation_base<FF_, lookup_get_env_var_read_from_public_inputs_col0_settings>;

/////////////////// lookup_get_env_var_read_from_public_inputs_col1 ///////////////////

struct lookup_get_env_var_read_from_public_inputs_col1_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_GET_ENV_VAR_READ_FROM_PUBLIC_INPUTS_COL1";
    static constexpr std::string_view RELATION_NAME = "get_env_var";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 2;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::execution_sel_envvar_pi_lookup_col1);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::public_inputs_sel);
    static constexpr auto SRC_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::execution_envvar_pi_row_idx),
                                                      ColumnExpression(ColumnAndShifts::execution_value_from_pi));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::precomputed_clk),
                                                      ColumnExpression(ColumnAndShifts::public_inputs_cols_1_));
    static constexpr Column COUNTS = Column::lookup_get_env_var_read_from_public_inputs_col1_counts;
    static constexpr Column INVERSES = Column::lookup_get_env_var_read_from_public_inputs_col1_inv;
};

using lookup_get_env_var_read_from_public_inputs_col1_settings =
    lookup_settings<lookup_get_env_var_read_from_public_inputs_col1_settings_>;
template <typename FF_>
using lookup_get_env_var_read_from_public_inputs_col1_relation =
    lookup_relation_base<FF_, lookup_get_env_var_read_from_public_inputs_col1_settings>;

} // namespace bb::avm2
