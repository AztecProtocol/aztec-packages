// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_get_env_var_precomputed_info ///////////////////

struct lookup_get_env_var_precomputed_info_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_GET_ENV_VAR_PRECOMPUTED_INFO";
    static constexpr std::string_view RELATION_NAME = "get_env_var";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 11;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_get_env_var;
    static constexpr Column DST_SELECTOR = Column::precomputed_sel_range_8;
    static constexpr Column COUNTS = Column::lookup_get_env_var_precomputed_info_counts;
    static constexpr Column INVERSES = Column::lookup_get_env_var_precomputed_info_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_rop_1_,
        ColumnAndShifts::execution_opcode_error,
        ColumnAndShifts::execution_sel_envvar_pi_lookup,
        ColumnAndShifts::execution_envvar_pi_row_idx,
        ColumnAndShifts::execution_is_address,
        ColumnAndShifts::execution_is_sender,
        ColumnAndShifts::execution_is_transactionfee,
        ColumnAndShifts::execution_is_feeperl2gas,
        ColumnAndShifts::execution_is_isstaticcall,
        ColumnAndShifts::execution_is_l2gasleft,
        ColumnAndShifts::execution_is_dagasleft
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk,
        ColumnAndShifts::precomputed_invalid_envvar_enum,
        ColumnAndShifts::precomputed_sel_envvar_pi_lookup,
        ColumnAndShifts::precomputed_envvar_pi_row_idx,
        ColumnAndShifts::precomputed_is_address,
        ColumnAndShifts::precomputed_is_sender,
        ColumnAndShifts::precomputed_is_transactionfee,
        ColumnAndShifts::precomputed_is_feeperl2gas,
        ColumnAndShifts::precomputed_is_isstaticcall,
        ColumnAndShifts::precomputed_is_l2gasleft,
        ColumnAndShifts::precomputed_is_dagasleft
    };
};

using lookup_get_env_var_precomputed_info_settings = lookup_settings<lookup_get_env_var_precomputed_info_settings_>;
template <typename FF_>
using lookup_get_env_var_precomputed_info_relation =
    lookup_relation_base<FF_, lookup_get_env_var_precomputed_info_settings>;

/////////////////// lookup_get_env_var_read_from_public_inputs ///////////////////

struct lookup_get_env_var_read_from_public_inputs_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_GET_ENV_VAR_READ_FROM_PUBLIC_INPUTS";
    static constexpr std::string_view RELATION_NAME = "get_env_var";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_envvar_pi_lookup;
    static constexpr Column DST_SELECTOR = Column::public_inputs_sel;
    static constexpr Column COUNTS = Column::lookup_get_env_var_read_from_public_inputs_counts;
    static constexpr Column INVERSES = Column::lookup_get_env_var_read_from_public_inputs_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_envvar_pi_row_idx,
        ColumnAndShifts::execution_value_from_pi_col0,
        ColumnAndShifts::execution_value_from_pi_col1
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::precomputed_clk, ColumnAndShifts::public_inputs_cols_0_, ColumnAndShifts::public_inputs_cols_1_
    };
};

using lookup_get_env_var_read_from_public_inputs_settings =
    lookup_settings<lookup_get_env_var_read_from_public_inputs_settings_>;
template <typename FF_>
using lookup_get_env_var_read_from_public_inputs_relation =
    lookup_relation_base<FF_, lookup_get_env_var_read_from_public_inputs_settings>;

} // namespace bb::avm2
