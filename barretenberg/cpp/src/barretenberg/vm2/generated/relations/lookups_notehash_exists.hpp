// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_notehash_exists_note_hash_leaf_index_in_range ///////////////////

struct lookup_notehash_exists_note_hash_leaf_index_in_range_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_NOTEHASH_EXISTS_NOTE_HASH_LEAF_INDEX_IN_RANGE";
    static constexpr std::string_view RELATION_NAME = "notehash_exists";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 3;
    static constexpr Column SRC_SELECTOR = Column::execution_sel_execute_notehash_exists;
    static constexpr Column DST_SELECTOR = Column::gt_sel;
    static constexpr Column COUNTS = Column::lookup_notehash_exists_note_hash_leaf_index_in_range_counts;
    static constexpr Column INVERSES = Column::lookup_notehash_exists_note_hash_leaf_index_in_range_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::execution_note_hash_tree_leaf_count,
        ColumnAndShifts::execution_register_1_,
        ColumnAndShifts::execution_note_hash_leaf_in_range
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = { ColumnAndShifts::gt_input_a,
                                                                                    ColumnAndShifts::gt_input_b,
                                                                                    ColumnAndShifts::gt_res };
};

using lookup_notehash_exists_note_hash_leaf_index_in_range_settings =
    lookup_settings<lookup_notehash_exists_note_hash_leaf_index_in_range_settings_>;
template <typename FF_>
using lookup_notehash_exists_note_hash_leaf_index_in_range_relation =
    lookup_relation_base<FF_, lookup_notehash_exists_note_hash_leaf_index_in_range_settings>;

/////////////////// lookup_notehash_exists_note_hash_read ///////////////////

struct lookup_notehash_exists_note_hash_read_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_NOTEHASH_EXISTS_NOTE_HASH_READ";
    static constexpr std::string_view RELATION_NAME = "notehash_exists";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 5;
    static constexpr Column SRC_SELECTOR = Column::execution_note_hash_leaf_in_range;
    static constexpr Column DST_SELECTOR = Column::note_hash_tree_check_sel;
    static constexpr Column COUNTS = Column::lookup_notehash_exists_note_hash_read_counts;
    static constexpr Column INVERSES = Column::lookup_notehash_exists_note_hash_read_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::precomputed_zero,
        ColumnAndShifts::execution_register_0_,
        ColumnAndShifts::execution_register_1_,
        ColumnAndShifts::execution_prev_note_hash_tree_root,
        ColumnAndShifts::execution_register_2_
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::note_hash_tree_check_write,
        ColumnAndShifts::note_hash_tree_check_note_hash,
        ColumnAndShifts::note_hash_tree_check_leaf_index,
        ColumnAndShifts::note_hash_tree_check_prev_root,
        ColumnAndShifts::note_hash_tree_check_exists
    };
};

using lookup_notehash_exists_note_hash_read_settings = lookup_settings<lookup_notehash_exists_note_hash_read_settings_>;
template <typename FF_>
using lookup_notehash_exists_note_hash_read_relation =
    lookup_relation_base<FF_, lookup_notehash_exists_note_hash_read_settings>;

} // namespace bb::avm2
