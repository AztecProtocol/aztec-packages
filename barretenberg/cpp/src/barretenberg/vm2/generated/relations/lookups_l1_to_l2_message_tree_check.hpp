// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/common/expression.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_l1_to_l2_message_tree_check_merkle_check ///////////////////

struct lookup_l1_to_l2_message_tree_check_merkle_check_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_L1_TO_L2_MESSAGE_TREE_CHECK_MERKLE_CHECK";
    static constexpr std::string_view RELATION_NAME = "l1_to_l2_message_tree_check";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr auto SRC_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::l1_to_l2_message_tree_check_sel);
    static constexpr auto DST_SELECTOR_EXPR = ColumnExpression(ColumnAndShifts::merkle_check_start);
    static constexpr auto SRC_EXPRS =
        std::make_tuple(ColumnExpression(ColumnAndShifts::l1_to_l2_message_tree_check_leaf_value),
                        ColumnExpression(ColumnAndShifts::l1_to_l2_message_tree_check_leaf_index),
                        ColumnExpression(ColumnAndShifts::l1_to_l2_message_tree_check_l1_to_l2_message_tree_height),
                        ColumnExpression(ColumnAndShifts::l1_to_l2_message_tree_check_root));
    static constexpr auto DST_EXPRS = std::make_tuple(ColumnExpression(ColumnAndShifts::merkle_check_read_node),
                                                      ColumnExpression(ColumnAndShifts::merkle_check_index),
                                                      ColumnExpression(ColumnAndShifts::merkle_check_path_len),
                                                      ColumnExpression(ColumnAndShifts::merkle_check_read_root));
    static constexpr Column COUNTS = Column::lookup_l1_to_l2_message_tree_check_merkle_check_counts;
    static constexpr Column INVERSES = Column::lookup_l1_to_l2_message_tree_check_merkle_check_inv;
};

using lookup_l1_to_l2_message_tree_check_merkle_check_settings =
    lookup_settings<lookup_l1_to_l2_message_tree_check_merkle_check_settings_>;
template <typename FF_>
using lookup_l1_to_l2_message_tree_check_merkle_check_relation =
    lookup_relation_base<FF_, lookup_l1_to_l2_message_tree_check_merkle_check_settings>;

} // namespace bb::avm2
