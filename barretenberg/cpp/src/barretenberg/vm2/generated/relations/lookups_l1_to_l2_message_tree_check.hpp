// AUTOGENERATED FILE
#pragma once

#include <cstddef>
#include <string_view>
#include <tuple>

#include "../columns.hpp"
#include "barretenberg/relations/generic_lookup/generic_lookup_relation.hpp"
#include "barretenberg/vm2/constraining/relations/interactions_base.hpp"

namespace bb::avm2 {

/////////////////// lookup_l1_to_l2_message_tree_check_merkle_check ///////////////////

struct lookup_l1_to_l2_message_tree_check_merkle_check_settings_ {
    static constexpr std::string_view NAME = "LOOKUP_L1_TO_L2_MESSAGE_TREE_CHECK_MERKLE_CHECK";
    static constexpr std::string_view RELATION_NAME = "l1_to_l2_message_tree_check";
    static constexpr size_t LOOKUP_TUPLE_SIZE = 4;
    static constexpr Column SRC_SELECTOR = Column::l1_to_l2_message_tree_check_sel;
    static constexpr Column DST_SELECTOR = Column::merkle_check_start;
    static constexpr Column COUNTS = Column::lookup_l1_to_l2_message_tree_check_merkle_check_counts;
    static constexpr Column INVERSES = Column::lookup_l1_to_l2_message_tree_check_merkle_check_inv;
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> SRC_COLUMNS = {
        ColumnAndShifts::l1_to_l2_message_tree_check_leaf_value,
        ColumnAndShifts::l1_to_l2_message_tree_check_leaf_index,
        ColumnAndShifts::l1_to_l2_message_tree_check_l1_to_l2_message_tree_height,
        ColumnAndShifts::l1_to_l2_message_tree_check_root
    };
    static constexpr std::array<ColumnAndShifts, LOOKUP_TUPLE_SIZE> DST_COLUMNS = {
        ColumnAndShifts::merkle_check_read_node,
        ColumnAndShifts::merkle_check_index,
        ColumnAndShifts::merkle_check_path_len,
        ColumnAndShifts::merkle_check_read_root
    };
};

using lookup_l1_to_l2_message_tree_check_merkle_check_settings =
    lookup_settings<lookup_l1_to_l2_message_tree_check_merkle_check_settings_>;
template <typename FF_>
using lookup_l1_to_l2_message_tree_check_merkle_check_relation =
    lookup_relation_base<FF_, lookup_l1_to_l2_message_tree_check_merkle_check_settings>;

} // namespace bb::avm2
