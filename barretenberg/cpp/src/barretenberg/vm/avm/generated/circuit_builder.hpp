// AUTOGENERATED FILE
#pragma once

#include <vector>

#include "barretenberg/vm/avm/generated/flavor.hpp"
#include "barretenberg/vm/avm/generated/full_row.hpp"

namespace bb {

class AvmCircuitBuilder {
  public:
    // Do not use this constant directly, use get_circuit_subgroup_size() instead.
    constexpr static size_t CIRCUIT_SUBGROUP_SIZE = 1 << 21;

    using Flavor = bb::AvmFlavor;
    using FF = Flavor::FF;
    using Row = AvmFullRow<FF>;
    using Polynomial = Flavor::Polynomial;
    using ProverPolynomials = Flavor::ProverPolynomials;

    void set_trace(std::vector<Row>&& trace)
    {
        rows = std::move(trace);
        num_rows = rows.size();
    }
    void clear_trace()
    {
        rows.clear();
        rows.shrink_to_fit();
        num_rows = 0;
    }

    ProverPolynomials compute_polynomials() const;

    bool check_circuit() const;

    size_t get_num_gates() const { return num_rows; }

    size_t get_circuit_subgroup_size() const { return CIRCUIT_SUBGROUP_SIZE; }

  private:
    size_t num_rows = 0;
    std::vector<Row> rows;
};

} // namespace bb