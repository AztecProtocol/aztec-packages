{
  "version": 5,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 24,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "default",
      "displayName": "Build with Clang",
      "description": "Build with globally installed Clang",
      "binaryDir": "build",
      "generator": "Ninja",
      "environment": {
        "CC": "clang",
        "CXX": "clang++",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "cacheVariables": {
        "TARGET_ARCH": "skylake"
      }
    },
    {
      "name": "homebrew",
      "displayName": "Homebrew + Clang",
      "description": "Build with Clang installed via Homebrew",
      "inherits": "default",
      "environment": {
        "CC": "$env{BREW_PREFIX}/opt/llvm/bin/clang",
        "CXX": "$env{BREW_PREFIX}/opt/llvm/bin/clang++"
      }
    },
    {
      "name": "darwin-arm64",
      "displayName": "Apple arm64 Cross-compile",
      "inherits": "default",
      "binaryDir": "build-darwin-arm64",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_TOOLCHAIN_FILE": "/opt/osxcross/toolchain.cmake"
      },
      "environment": {
        "OSXCROSS_HOST": "arm64-apple-darwin23",
        "OSXCROSS_TARGET_DIR": "/opt/osxcross",
        "OSXCROSS_TARGET": "darwin23",
        "OSXCROSS_SDK": "/opt/osxcross/SDK/MacOSX14.0.sdk"
      }
    },
    {
      "name": "darwin-amd64",
      "displayName": "Apple amd64 Cross-compile",
      "inherits": "darwin-arm64",
      "binaryDir": "build-darwin-amd64",
      "environment": {
        "OSXCROSS_HOST": "x86_64-apple-darwin23"
      }
    },
    {
      "name": "clang16",
      "displayName": "Build with Clang-16",
      "description": "Build with globally installed Clang-16",
      "inherits": "default",
      "environment": {
        "CC": "clang-16",
        "CXX": "clang++-16"
      }
    },
    {
      "name": "clang16-dbg",
      "displayName": "Debugging build with Clang-16",
      "description": "Build with globally installed Clang-16 in debug mode",
      "inherits": "clang16",
      "binaryDir": "build-debug",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CFLAGS": "-gdwarf-4",
        "CXXFLAGS": "-gdwarf-4",
        "LDFLAGS": "-gdwarf-4"
      },
      "cacheVariables": {
        "ENABLE_ASAN": "OFF",
        "DISABLE_ASM": "ON"
      }
    },
    {
      "name": "tracy",
      "displayName": "Release build with tracy",
      "description": "Release build with tracy",
      "inherits": "clang16",
      "binaryDir": "build-tracy",
      "cacheVariables": {
        "ENABLE_TRACY": "ON"
      }
    },
    {
      "name": "wasm-tracy",
      "displayName": "WASM build with tracy",
      "description": "WASM build with tracy",
      "inherits": "clang16",
      "binaryDir": "build-wasm-tracy",
      "cacheVariables": {
        "ENABLE_TRACY": "ON"
      }
    },
    {
      "name": "clang16-dbg-fast",
      "displayName": "Optimized debug build with Clang-16",
      "description": "Build with globally installed Clang-16 in optimized debug mode",
      "inherits": "clang16-dbg",
      "binaryDir": "build-debug-fast",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CFLAGS": "-O2 -gdwarf",
        "CXXFLAGS": "-O2 -gdwarf-4",
        "LDFLAGS": "-O2 -gdwarf-4"
      }
    },
    {
      "name": "clang16-dbg-fast-circuit-check-traces",
      "displayName": "Optimized debug build with Clang-16 with stack traces for failing circuit checks",
      "description": "Build with globally installed Clang-16 in optimized debug mode with stack traces for failing circuit checks",
      "inherits": "clang16-dbg-fast",
      "binaryDir": "build-debug-fast-circuit-check-traces",
      "cacheVariables": {
        "CHECK_CIRCUIT_STACKTRACES": "ON"
      }
    },
    {
      "name": "clang16-assert",
      "binaryDir": "build-assert",
      "displayName": "Build with Clang-16 using RelWithAssert",
      "description": "Build with globally installed Clang-16 in release with ASSERTs mode",
      "inherits": "clang16",
      "environment": {
        "CMAKE_BUILD_TYPE": "RelWithAssert"
      }
    },
    {
      "name": "asan",
      "displayName": "Debugging build with address sanitizer on Clang-16",
      "description": "Build with address sanitizer on clang16 with debugging information",
      "inherits": "clang16-dbg",
      "binaryDir": "build-asan",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug"
      },
      "cacheVariables": {
        "ENABLE_ASAN": "ON",
        "DISABLE_ASM": "ON"
      }
    },
    {
      "name": "gcc",
      "displayName": "Build with GCC",
      "description": "Build with globally installed GCC",
      "inherits": "default",
      "binaryDir": "build-gcc",
      "environment": {
        "CC": "gcc",
        "CXX": "g++"
      }
    },
    {
      "name": "gcc10",
      "displayName": "Build with GCC-10",
      "description": "Build with globally installed GCC-10",
      "inherits": "default",
      "environment": {
        "CC": "gcc-10",
        "CXX": "g++-10"
      }
    },
    {
      "name": "gcc13",
      "displayName": "Build with GCC-13",
      "description": "Build with globally installed GCC-13",
      "inherits": "default",
      "environment": {
        "CC": "gcc-13",
        "CXX": "g++-13"
      }
    },
    {
      "name": "bench",
      "displayName": "Build benchmarks",
      "description": "Build default preset but with a special benchmark directory",
      "inherits": "clang16",
      "binaryDir": "build-bench"
    },
    {
      "name": "fuzzing",
      "displayName": "Build with fuzzing",
      "description": "Build default preset but with fuzzing enabled",
      "inherits": "clang16",
      "binaryDir": "build-fuzzing",
      "cacheVariables": {
        "FUZZING": "ON"
      }
    },
    {
      "name": "fuzzing-asan",
      "displayName": "Build with fuzzing",
      "description": "Build default preset but with fuzzing enabled",
      "inherits": "clang16-dbg",
      "binaryDir": "build-fuzzing",
      "cacheVariables": {
        "FUZZING": "ON",
        "ENABLE_ASAN": "ON",
        "DISABLE_ASM": "ON"
      }
    },
    {
      "name": "smt-verification",
      "displayName": "Build with smt verificaiton",
      "description": "Build default preset but with smt library included",
      "inherits": "clang16",
      "binaryDir": "build-smt",
      "cacheVariables": {
        "SMT": "ON"
      }
    },
    {
      "name": "tsan",
      "displayName": "Debugging build with thread sanitizer on Clang-16",
      "description": "Build with thread sanitizer on clang16 with debugging information",
      "inherits": "clang16-dbg",
      "binaryDir": "build-tsan",
      "environment": {
        "CFLAGS": "-fsanitize=thread",
        "CXXFLAGS": "-fsanitize=thread",
        "LDFLAGS": "-fsanitize=thread"
      }
    },
    {
      "name": "ubsan",
      "displayName": "Debugging build with undefined behaviour sanitizer on Clang-16",
      "description": "Build with undefined behaviour sanitizer on clang16 with debugging information",
      "inherits": "clang16-dbg",
      "binaryDir": "build-ubsan",
      "generator": "Unix Makefiles",
      "environment": {
        "CFLAGS": "-fsanitize=undefined",
        "CXXFLAGS": "-fsanitize=undefined",
        "LDFLAGS": "-fsanitize=undefined"
      }
    },
    {
      "name": "msan",
      "displayName": "Debugging build with memory sanitizer on Clang-16",
      "description": "Build with thread sanitizer on clang16 with debugging information",
      "inherits": "clang16-dbg",
      "binaryDir": "build-msan",
      "environment": {
        "CFLAGS": "-fsanitize=memory",
        "CXXFLAGS": "-fsanitize=memory",
        "LDFLAGS": "-fsanitize=memory"
      },
      "cacheVariables": {
        "HAVE_STD_REGEX": "ON",
        "CMAKE_CXX_FLAGS": "$env{MSAN_CFLAGS}",
        "CMAKE_EXE_LINKER_FLAGS": "$env{MSAN_LFLAGS}"
      }
    },
    {
      "name": "op-count",
      "displayName": "Release build with operation counts",
      "description": "Build with op counting",
      "inherits": "clang16",
      "binaryDir": "build-op-count",
      "environment": {
        "CXXFLAGS": "-DBB_USE_OP_COUNT -DBB_USE_OP_COUNT_TRACK_ONLY"
      }
    },
    {
      "name": "op-count-time",
      "displayName": "Release build with time and clock counts",
      "description": "Build with op counting",
      "inherits": "clang16",
      "binaryDir": "build-op-count-time",
      "environment": {
        "CXXFLAGS": "-DBB_USE_OP_COUNT -DBB_USE_OP_COUNT_TIME_ONLY"
      }
    },
    {
      "name": "coverage",
      "displayName": "Build with coverage",
      "description": "Build default preset but with coverage enabled",
      "inherits": "default",
      "binaryDir": "build-coverage",
      "cacheVariables": {
        "COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "gperftools",
      "displayName": "Debugging build with gperftools on Clang-16",
      "description": "Build with gperf",
      "inherits": "clang16",
      "binaryDir": "build-gperftools",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_EXE_LINKER_FLAGS": "-ltcmalloc",
        "CXXFLAGS": "-fno-omit-frame-pointer"
      }
    },
    {
      "name": "wasm",
      "displayName": "Build for WASM",
      "description": "Build with wasi-sdk to create wasm",
      "binaryDir": "build-wasm",
      "generator": "Ninja",
      "toolchainFile": "cmake/toolchains/wasm32-wasi.cmake",
      "environment": {
        "WASI_SDK_PREFIX": "/opt/wasi-sdk",
        "CC": "$env{WASI_SDK_PREFIX}/bin/clang",
        "CXX": "$env{WASI_SDK_PREFIX}/bin/clang++",
        "AR": "$env{WASI_SDK_PREFIX}/bin/llvm-ar",
        "RANLIB": "$env{WASI_SDK_PREFIX}/bin/llvm-ranlib"
      },
      "cacheVariables": {
        "CMAKE_SYSROOT": "$env{WASI_SDK_PREFIX}/share/wasi-sysroot",
        "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "NEVER",
        "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "ONLY",
        "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "ONLY",
        "CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "ONLY",
        "CMAKE_C_COMPILER_WORKS": "ON",
        "CMAKE_CXX_COMPILER_WORKS": "ON",
        "MULTITHREADING": "OFF"
      }
    },
    {
      "name": "wasm-dbg",
      "displayName": "Build for debug WASM",
      "description": "Build with wasi-sdk to create debug wasm",
      "inherits": "wasm",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "wasm-threads",
      "displayName": "Build for pthread enabled WASM",
      "description": "Build for pthread enabled WASM",
      "inherits": "wasm",
      "binaryDir": "build-wasm-threads",
      "environment": {
        "CMAKE_BUILD_TYPE": "Release"
      },
      "cacheVariables": {
        "MULTITHREADING": "ON"
      }
    },
    {
      "name": "xray",
      "displayName": "Build with multi-threaded XRay Profiling",
      "description": "Build with Clang and enable multi-threaded LLVM XRay for profiling",
      "generator": "Unix Makefiles",
      "inherits": "clang16",
      "environment": {
        "CFLAGS": "-fxray-instrument",
        "CXXFLAGS": "-fxray-instrument -fxray-instruction-threshold=500 -DXRAY=1",
        "LDFLAGS": "-fxray-instrument -fxray-instruction-threshold=500 -DXRAY=1"
      },
      "binaryDir": "build-xray"
    },
    {
      "name": "xray-verbose",
      "displayName": "Build with detailed XRay Profiling",
      "description": "Build with Clang and enable detailed LLVM XRay for profiling",
      "inherits": "xray",
      "environment": {
        "CFLAGS": "-fxray-instrument -fxray-instruction-threshold=100 -finline-max-stacksize=150 -DXRAY=1",
        "CXXFLAGS": "-fxray-instrument -fxray-instruction-threshold=100 -finline-max-stacksize=150 -DXRAY=1",
        "LDFLAGS": "-fxray-instrument -fxray-instruction-threshold=100 -finline-max-stacksize=150 -DXRAY=1"
      },
      "binaryDir": "build-xray-verbose"
    },
    {
      "name": "xray-1thread",
      "displayName": "Build with single-threaded XRay Profiling",
      "description": "Build with Clang and enable single-threaded LLVM XRay for profiling",
      "inherits": "xray",
      "cacheVariables": {
        "MULTITHREADING": "OFF"
      },
      "binaryDir": "build-xray-1thread"
    }
  ],
  "buildPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "inheritConfigureEnvironment": true,
      "jobs": 0
    },
    {
      "name": "homebrew",
      "inherits": "default",
      "configurePreset": "homebrew"
    },
    {
      "name": "clang16",
      "inherits": "default",
      "configurePreset": "clang16"
    },
    {
      "name": "op-count-time",
      "inherits": "default",
      "configurePreset": "op-count-time"
    },
    {
      "name": "op-count",
      "inherits": "default",
      "configurePreset": "op-count"
    },
    {
      "name": "darwin-arm64",
      "inherits": "default",
      "configurePreset": "darwin-arm64"
    },
    {
      "name": "darwin-amd64",
      "inherits": "default",
      "configurePreset": "darwin-amd64"
    },
    {
      "name": "clang16-dbg",
      "inherits": "default",
      "configurePreset": "clang16-dbg"
    },
    {
      "name": "tracy",
      "inherits": "default",
      "configurePreset": "tracy"
    },
    {
      "name": "clang16-dbg-fast",
      "inherits": "default",
      "configurePreset": "clang16-dbg-fast"
    },
    {
      "name": "clang16-dbg-fast-circuit-check-traces",
      "inherits": "clang16-dbg-fast",
      "configurePreset": "clang16-dbg-fast-circuit-check-traces"
    },
    {
      "name": "clang16-assert",
      "inherits": "default",
      "configurePreset": "clang16-assert"
    },
    {
      "name": "asan",
      "inherits": "default",
      "configurePreset": "asan"
    },
    {
      "name": "gcc",
      "inherits": "default",
      "configurePreset": "gcc"
    },
    {
      "name": "gcc10",
      "inherits": "default",
      "configurePreset": "gcc10"
    },
    {
      "name": "gcc13",
      "inherits": "default",
      "configurePreset": "gcc13"
    },
    {
      "name": "bench",
      "inherits": "clang16",
      "configurePreset": "bench"
    },
    {
      "name": "fuzzing",
      "inherits": "clang16",
      "configurePreset": "fuzzing"
    },
    {
      "name": "fuzzing-asan",
      "inherits": "clang16-dbg",
      "configurePreset": "fuzzing-asan"
    },
    {
      "name": "gperftools",
      "inherits": "clang16",
      "configurePreset": "gperftools"
    },
    {
      "name": "smt-verification",
      "inherits": "clang16",
      "configurePreset": "smt-verification"
    },
    {
      "name": "msan",
      "inherits": "default",
      "configurePreset": "msan"
    },
    {
      "name": "tsan",
      "inherits": "default",
      "configurePreset": "tsan"
    },
    {
      "name": "ubsan",
      "inherits": "default",
      "configurePreset": "ubsan"
    },
    {
      "name": "coverage",
      "inherits": "default",
      "configurePreset": "coverage"
    },
    {
      "name": "wasm",
      "configurePreset": "wasm",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm", "barretenberg", "wasi", "env"]
    },
    {
      "name": "wasm-dbg",
      "configurePreset": "wasm-dbg",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm"]
    },
    {
      "name": "wasm-threads",
      "configurePreset": "wasm-threads",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm"]
    },
    {
      "name": "xray",
      "configurePreset": "xray",
      "inherits": "default"
    },
    {
      "name": "xray-verbose",
      "configurePreset": "xray-verbose",
      "inherits": "default"
    },
    {
      "name": "xray-1thread",
      "configurePreset": "xray-1thread",
      "inherits": "default"
    }
  ],
  "testPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "inheritConfigureEnvironment": true
    },
    {
      "name": "homebrew",
      "inherits": "default",
      "configurePreset": "homebrew"
    },
    {
      "name": "clang16",
      "inherits": "default",
      "configurePreset": "clang16"
    },
    {
      "name": "clang16-dbg",
      "inherits": "default",
      "configurePreset": "clang16-dbg"
    },
    {
      "name": "asan",
      "inherits": "default",
      "configurePreset": "asan"
    },
    {
      "name": "gcc",
      "inherits": "default",
      "configurePreset": "gcc"
    },
    {
      "name": "gcc10",
      "inherits": "default",
      "configurePreset": "gcc10"
    },
    {
      "name": "gcc13",
      "inherits": "default",
      "configurePreset": "gcc13"
    },
    {
      "name": "bench",
      "inherits": "clang16",
      "configurePreset": "bench"
    },
    {
      "name": "fuzzing",
      "inherits": "default",
      "configurePreset": "fuzzing"
    },
    {
      "name": "fuzzing-asan",
      "inherits": "clang16-dbg",
      "configurePreset": "fuzzing-asan"
    },
    {
      "name": "smt-verification",
      "inherits": "clang16",
      "configurePreset": "smt-verification"
    },
    {
      "name": "coverage",
      "inherits": "default",
      "configurePreset": "coverage"
    },
    {
      "name": "wasm",
      "configurePreset": "wasm",
      "inheritConfigureEnvironment": true
    }
  ]
}
