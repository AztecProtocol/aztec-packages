VERSION 0.8

FROM node:18.19.0
WORKDIR /usr/src

# minimum files to download yarn packages
# keep timestamps for incremental builds
COPY --dir .yarn package.json yarn.lock .yarnrc.yml .
RUN echo CONTENT HASH $(find . -type f -exec sha256sum {} ';' | sort | sha256sum | awk '{print $1}') | tee .content-hash
RUN yarn --immutable

# other source files
COPY --dir src *.json *.js *.cjs .

# copy over wasm build from cpp folder
COPY ../cpp/+preset-wasm-threads/bin/barretenberg.wasm src/barretenberg_wasm/barretenberg-threads.wasm
COPY ../cpp/+preset-wasm/bin/barretenberg.wasm src/barretenberg_wasm/barretenberg.wasm
COPY ../cpp/+preset-wasm-threads/bin/barretenberg.wasm dest/node/barretenberg_wasm/barretenberg-threads.wasm
COPY ../cpp/+preset-wasm/bin/barretenberg.wasm dest/node-cjs/barretenberg_wasm/barretenberg-threads.wasm

esm:
    RUN yarn build:esm
    SAVE ARTIFACT /usr/src

cjs:
    COPY scripts/cjs_postprocess.sh scripts/
    RUN yarn build:cjs
    SAVE ARTIFACT /usr/src

browser:
    RUN yarn build:browser
    SAVE ARTIFACT /usr/src

test-prettier-format:
    RUN yarn formatting

build:
    # collect all our build types
    COPY +esm/usr/src /usr/src
    COPY +cjs/usr/src /usr/src
    COPY +browser/usr/src /usr/src
    # We want to create a pure package, as would be published to npm, for consuming projects.
    RUN yarn pack && tar zxf package.tgz && rm package.tgz && mv package ../ts
    SAVE ARTIFACT /usr/src

test:
    BUILD +test-prettier-format
    RUN yarn test
