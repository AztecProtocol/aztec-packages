VERSION 0.8

CACHE:
  FUNCTION
  ARG command
  ARG build_artifacts
  ARG prefix
  # TODO(#8929): reinstate bb.js caching
  RUN $command
  # DO ../../build-system/s3-cache-scripts/+WITH_CACHE \
  #   --prefix="bb.js-$prefix" \
  #   --command="$command" \
  #   --rebuild_patterns="../cpp/.rebuild_patterns .rebuild_patterns" \
  #   --build_artifacts="$build_artifacts"

deps:
    FROM ../../build-images+from-registry
    WORKDIR /usr/src/barretenberg/ts

    # minimum files to download yarn packages
    # keep timestamps for incremental builds
    COPY --dir .yarn package.json yarn.lock .yarnrc.yml .
    RUN yarn --immutable

    # other source files
    COPY --dir src *.json *.js *.cjs .

    # copy over wasm builds from cpp folder
    COPY ../cpp/+preset-wasm-threads/bin/barretenberg.wasm src/barretenberg_wasm/barretenberg-threads.wasm
    COPY ../cpp/+preset-wasm/bin/barretenberg.wasm src/barretenberg_wasm/barretenberg.wasm
    COPY ../cpp/+preset-wasm-threads/bin/barretenberg.wasm dest/node/barretenberg_wasm/barretenberg-threads.wasm
    COPY ../cpp/+preset-wasm-threads/bin/barretenberg.wasm dest/node-cjs/barretenberg_wasm/barretenberg-threads.wasm

esm:
    FROM +deps
    DO +CACHE \
      --prefix="browser" \
      --command="yarn build:esm" \
      --build_artifacts="."
    SAVE ARTIFACT /usr/src/barretenberg/ts build

cjs:
    FROM +deps
    COPY scripts/cjs_postprocess.sh scripts/
    DO +CACHE \
      --prefix="cjs" \
      --command="yarn build:cjs" \
      --build_artifacts="."
    SAVE ARTIFACT /usr/src/barretenberg/ts build

browser:
    FROM +deps
    RUN yarn build:browser
    DO +CACHE \
      --prefix="browser" \
      --command="yarn build:browser" \
      --build_artifacts="."
    SAVE ARTIFACT /usr/src/barretenberg/ts build

test-prettier-format:
    FROM +deps
    RUN yarn formatting

build:
    FROM +deps
    # collect all our build types
    COPY +esm/build /usr/src/barretenberg/ts
    COPY +cjs/build /usr/src/barretenberg/ts
    COPY +browser/build /usr/src/barretenberg/ts
    # We want to create a pure package, as would be published to npm, for consuming projects.
    RUN yarn pack && tar zxf package.tgz && rm package.tgz
    SAVE ARTIFACT /usr/src/barretenberg/ts build

publish-npm:
    FROM +build
    ARG VERSION
    ARG DIST_TAG
    ARG DRY_RUN=0
    RUN --secret NPM_TOKEN echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > /usr/src/barretenberg/ts/.npmrc
    WORKDIR /usr/src/barretenberg/ts
    RUN jq --arg v $VERSION '.version = $v' package.json > _tmp.json && mv  _tmp.json package.json
    RUN if [ "$DRY_RUN" = "1" ]; then \
        npm publish --tag $DIST_TAG --access public --dry-run; \
    else \
        npm publish --tag $DIST_TAG --access public; \
    fi

test:
    FROM +deps
    BUILD +test-prettier-format
    # We frequently get tests timing out in GA, increase the timeout here
    RUN yarn test --testTimeout=300000
