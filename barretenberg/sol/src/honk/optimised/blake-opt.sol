import {IVerifier} from "../../interfaces/IVerifier.sol";

// The plan
// Write an optimised version of the add2 circuit
contract BlakeOptHonkVerifier is IVerifier {
    // Constants representin proof locations in memory
    uint256 internal constant vk_circuit_size = 0x380;
    uint256 internal constant vk_num_public_inputs = 0x3a0;
    uint256 internal constant vk_pub_inputs_offset = 0x3c0;
    uint256 internal constant q_m_x0_loc = 0x3e0;
    uint256 internal constant q_m_x1_loc = 0x400;
    uint256 internal constant q_m_y0_loc = 0x420;
    uint256 internal constant q_m_y1_loc = 0x440;
    uint256 internal constant q_c_x0_loc = 0x460;
    uint256 internal constant q_c_x1_loc = 0x480;
    uint256 internal constant q_c_y0_loc = 0x4a0;
    uint256 internal constant q_c_y1_loc = 0x4c0;
    uint256 internal constant q_l_x0_loc = 0x4e0;
    uint256 internal constant q_l_x1_loc = 0x500;
    uint256 internal constant q_l_y0_loc = 0x520;
    uint256 internal constant q_l_y1_loc = 0x540;
    uint256 internal constant q_r_x0_loc = 0x560;
    uint256 internal constant q_r_x1_loc = 0x580;
    uint256 internal constant q_r_y0_loc = 0x5a0;
    uint256 internal constant q_r_y1_loc = 0x5c0;
    uint256 internal constant q_o_x0_loc = 0x5e0;
    uint256 internal constant q_o_x1_loc = 0x600;
    uint256 internal constant q_o_y0_loc = 0x620;
    uint256 internal constant q_o_y1_loc = 0x640;
    uint256 internal constant q_4_x0_loc = 0x660;
    uint256 internal constant q_4_x1_loc = 0x680;
    uint256 internal constant q_4_y0_loc = 0x6a0;
    uint256 internal constant q_4_y1_loc = 0x6c0;
    uint256 internal constant q_arith_x0_loc = 0x6e0;
    uint256 internal constant q_arith_x1_loc = 0x700;
    uint256 internal constant q_arith_y0_loc = 0x720;
    uint256 internal constant q_arith_y1_loc = 0x740;
    uint256 internal constant q_delta_range_x0_loc = 0x760;
    uint256 internal constant q_delta_range_x1_loc = 0x780;
    uint256 internal constant q_delta_range_y0_loc = 0x7a0;
    uint256 internal constant q_delta_range_y1_loc = 0x7c0;
    uint256 internal constant q_elliptic_x0_loc = 0x7e0;
    uint256 internal constant q_elliptic_x1_loc = 0x800;
    uint256 internal constant q_elliptic_y0_loc = 0x820;
    uint256 internal constant q_elliptic_y1_loc = 0x840;
    uint256 internal constant q_aux_x0_loc = 0x860;
    uint256 internal constant q_aux_x1_loc = 0x880;
    uint256 internal constant q_aux_y0_loc = 0x8a0;
    uint256 internal constant q_aux_y1_loc = 0x8c0;
    uint256 internal constant q_lookup_x0_loc = 0x8e0;
    uint256 internal constant q_lookup_x1_loc = 0x900;
    uint256 internal constant q_lookup_y0_loc = 0x920;
    uint256 internal constant q_lookup_y1_loc = 0x940;
    uint256 internal constant sigma_1_x0_loc = 0x960;
    uint256 internal constant sigma_1_x1_loc = 0x980;
    uint256 internal constant sigma_1_y0_loc = 0x9a0;
    uint256 internal constant sigma_1_y1_loc = 0x9c0;
    uint256 internal constant sigma_2_x0_loc = 0x9e0;
    uint256 internal constant sigma_2_x1_loc = 0xa00;
    uint256 internal constant sigma_2_y0_loc = 0xa20;
    uint256 internal constant sigma_2_y1_loc = 0xa40;
    uint256 internal constant sigma_3_x0_loc = 0xa60;
    uint256 internal constant sigma_3_x1_loc = 0xa80;
    uint256 internal constant sigma_3_y0_loc = 0xaa0;
    uint256 internal constant sigma_3_y1_loc = 0xac0;
    uint256 internal constant sigma_4_x0_loc = 0xae0;
    uint256 internal constant sigma_4_x1_loc = 0xb00;
    uint256 internal constant sigma_4_y0_loc = 0xb20;
    uint256 internal constant sigma_4_y1_loc = 0xb40;
    uint256 internal constant id_1_x0_loc = 0xb60;
    uint256 internal constant id_1_x1_loc = 0xb80;
    uint256 internal constant id_1_y0_loc = 0xba0;
    uint256 internal constant id_1_y1_loc = 0xbc0;
    uint256 internal constant id_2_x0_loc = 0xbe0;
    uint256 internal constant id_2_x1_loc = 0xc00;
    uint256 internal constant id_2_y0_loc = 0xc20;
    uint256 internal constant id_2_y1_loc = 0xc40;
    uint256 internal constant id_3_x0_loc = 0xc60;
    uint256 internal constant id_3_x1_loc = 0xc80;
    uint256 internal constant id_3_y0_loc = 0xca0;
    uint256 internal constant id_3_y1_loc = 0xcc0;
    uint256 internal constant id_4_x0_loc = 0xce0;
    uint256 internal constant id_4_x1_loc = 0xd00;
    uint256 internal constant id_4_y0_loc = 0xd20;
    uint256 internal constant id_4_y1_loc = 0xd40;
    uint256 internal constant table_1_x0_loc = 0xd60;
    uint256 internal constant table_1_x1_loc = 0xd80;
    uint256 internal constant table_1_y0_loc = 0xda0;
    uint256 internal constant table_1_y1_loc = 0xdc0;
    uint256 internal constant table_2_x0_loc = 0xde0;
    uint256 internal constant table_2_x1_loc = 0xe00;
    uint256 internal constant table_2_y0_loc = 0xe20;
    uint256 internal constant table_2_y1_loc = 0xe40;
    uint256 internal constant table_3_x0_loc = 0xe60;
    uint256 internal constant table_3_x1_loc = 0xe80;
    uint256 internal constant table_3_y0_loc = 0xea0;
    uint256 internal constant table_3_y1_loc = 0xec0;
    uint256 internal constant table_4_x0_loc = 0xee0;
    uint256 internal constant table_4_x1_loc = 0xf00;
    uint256 internal constant table_4_y0_loc = 0xf20;
    uint256 internal constant table_4_y1_loc = 0xf40;
    uint256 internal constant lagrange_first_x0_loc = 0xf60;
    uint256 internal constant lagrange_first_x1_loc = 0xf80;
    uint256 internal constant lagrange_first_y0_loc = 0xfa0;
    uint256 internal constant lagrange_first_y1_loc = 0xfc0;
    uint256 internal constant lagrange_last_x0_loc = 0xfe0;
    uint256 internal constant lagrange_last_x1_loc = 0x1000;
    uint256 internal constant lagrange_last_y0_loc = 0x1020;
    uint256 internal constant lagrange_last_y1_loc = 0x1040;

    // Memory locations representing the proof in memory
    uint256 internal constant proof_circuit_size = 0x1060;
    uint256 internal constant proof_num_public_inputs = 0x1080;
    uint256 internal constant proof_pub_inputs_offset = 0x10a0;
    uint256 internal constant w_l_x0_loc = 0x10c0;
    uint256 internal constant w_l_x1_loc = 0x10e0;
    uint256 internal constant w_l_y0_loc = 0x1100;
    uint256 internal constant w_l_y1_loc = 0x1120;
    uint256 internal constant w_r_x0_loc = 0x1140;
    uint256 internal constant w_r_x1_loc = 0x1160;
    uint256 internal constant w_r_y0_loc = 0x1180;
    uint256 internal constant w_r_y1_loc = 0x11a0;
    uint256 internal constant w_o_x0_loc = 0x11c0;
    uint256 internal constant w_o_x1_loc = 0x11e0;
    uint256 internal constant w_o_y0_loc = 0x1200;
    uint256 internal constant w_o_y1_loc = 0x1220;
    uint256 internal constant w_4_x0_loc = 0x1240;
    uint256 internal constant w_4_x1_loc = 0x1260;
    uint256 internal constant w_4_y0_loc = 0x1280;
    uint256 internal constant w_4_y1_loc = 0x12a0;
    uint256 internal constant z_perm_x0_loc = 0x12c0;
    uint256 internal constant z_perm_x1_loc = 0x12e0;
    uint256 internal constant z_perm_y0_loc = 0x1300;
    uint256 internal constant z_perm_y1_loc = 0x1320;
    uint256 internal constant lookup_inverses_x0_loc = 0x1340;
    uint256 internal constant lookup_inverses_x1_loc = 0x1360;
    uint256 internal constant lookup_inverses_y0_loc = 0x1380;
    uint256 internal constant lookup_inverses_y1_loc = 0x13a0;
    uint256 internal constant lookup_read_counts_x0_loc = 0x13c0;
    uint256 internal constant lookup_read_counts_x1_loc = 0x13e0;
    uint256 internal constant lookup_read_counts_y0_loc = 0x1400;
    uint256 internal constant lookup_read_counts_y1_loc = 0x1420;
    uint256 internal constant lookup_read_tags_x0_loc = 0x1440;
    uint256 internal constant lookup_read_tags_x1_loc = 0x1460;
    uint256 internal constant lookup_read_tags_y0_loc = 0x1480;
    uint256 internal constant lookup_read_tags_y1_loc = 0x14a0;
    uint256 internal constant sumcheck_univariate_0_0 = 0x14c0;
    uint256 internal constant sumcheck_univariate_0_1 = 0x14e0;
    uint256 internal constant sumcheck_univariate_0_2 = 0x1500;
    uint256 internal constant sumcheck_univariate_0_3 = 0x1520;
    uint256 internal constant sumcheck_univariate_0_4 = 0x1540;
    uint256 internal constant sumcheck_univariate_0_5 = 0x1560;
    uint256 internal constant sumcheck_univariate_0_6 = 0x1580;
    uint256 internal constant sumcheck_univariate_0_7 = 0x15a0;
    uint256 internal constant sumcheck_univariate_0_8 = 0x15c0;
    uint256 internal constant sumcheck_univariate_0_9 = 0x15e0;
    uint256 internal constant sumcheck_univariate_0_10 = 0x1600;
    uint256 internal constant sumcheck_univariate_0_11 = 0x1620;
    uint256 internal constant sumcheck_univariate_0_12 = 0x1640;
    uint256 internal constant sumcheck_univariate_0_13 = 0x1660;
    uint256 internal constant sumcheck_univariate_0_14 = 0x1680;
    uint256 internal constant sumcheck_univariate_0_15 = 0x16a0;
    uint256 internal constant sumcheck_univariate_0_16 = 0x16c0;
    uint256 internal constant sumcheck_univariate_0_17 = 0x16e0;
    uint256 internal constant sumcheck_univariate_0_18 = 0x1700;
    uint256 internal constant sumcheck_univariate_0_19 = 0x1720;
    uint256 internal constant sumcheck_univariate_0_20 = 0x1740;
    uint256 internal constant sumcheck_univariate_0_21 = 0x1760;
    uint256 internal constant sumcheck_univariate_0_22 = 0x1780;
    uint256 internal constant sumcheck_univariate_0_23 = 0x17a0;
    uint256 internal constant sumcheck_univariate_0_24 = 0x17c0;
    uint256 internal constant sumcheck_univariate_0_25 = 0x17e0;
    uint256 internal constant sumcheck_univariate_0_26 = 0x1800;
    uint256 internal constant sumcheck_univariate_0_27 = 0x1820;
    uint256 internal constant sumcheck_univariate_1_0 = 0x1840;
    uint256 internal constant sumcheck_univariate_1_1 = 0x1860;
    uint256 internal constant sumcheck_univariate_1_2 = 0x1880;
    uint256 internal constant sumcheck_univariate_1_3 = 0x18a0;
    uint256 internal constant sumcheck_univariate_1_4 = 0x18c0;
    uint256 internal constant sumcheck_univariate_1_5 = 0x18e0;
    uint256 internal constant sumcheck_univariate_1_6 = 0x1900;
    uint256 internal constant sumcheck_univariate_1_7 = 0x1920;
    uint256 internal constant sumcheck_univariate_1_8 = 0x1940;
    uint256 internal constant sumcheck_univariate_1_9 = 0x1960;
    uint256 internal constant sumcheck_univariate_1_10 = 0x1980;
    uint256 internal constant sumcheck_univariate_1_11 = 0x19a0;
    uint256 internal constant sumcheck_univariate_1_12 = 0x19c0;
    uint256 internal constant sumcheck_univariate_1_13 = 0x19e0;
    uint256 internal constant sumcheck_univariate_1_14 = 0x1a00;
    uint256 internal constant sumcheck_univariate_1_15 = 0x1a20;
    uint256 internal constant sumcheck_univariate_1_16 = 0x1a40;
    uint256 internal constant sumcheck_univariate_1_17 = 0x1a60;
    uint256 internal constant sumcheck_univariate_1_18 = 0x1a80;
    uint256 internal constant sumcheck_univariate_1_19 = 0x1aa0;
    uint256 internal constant sumcheck_univariate_1_20 = 0x1ac0;
    uint256 internal constant sumcheck_univariate_1_21 = 0x1ae0;
    uint256 internal constant sumcheck_univariate_1_22 = 0x1b00;
    uint256 internal constant sumcheck_univariate_1_23 = 0x1b20;
    uint256 internal constant sumcheck_univariate_1_24 = 0x1b40;
    uint256 internal constant sumcheck_univariate_1_25 = 0x1b60;
    uint256 internal constant sumcheck_univariate_1_26 = 0x1b80;
    uint256 internal constant sumcheck_univariate_1_27 = 0x1ba0;
    uint256 internal constant sumcheck_univariate_2_0 = 0x1bc0;
    uint256 internal constant sumcheck_univariate_2_1 = 0x1be0;
    uint256 internal constant sumcheck_univariate_2_2 = 0x1c00;
    uint256 internal constant sumcheck_univariate_2_3 = 0x1c20;
    uint256 internal constant sumcheck_univariate_2_4 = 0x1c40;
    uint256 internal constant sumcheck_univariate_2_5 = 0x1c60;
    uint256 internal constant sumcheck_univariate_2_6 = 0x1c80;
    uint256 internal constant sumcheck_univariate_2_7 = 0x1ca0;
    uint256 internal constant sumcheck_univariate_2_8 = 0x1cc0;
    uint256 internal constant sumcheck_univariate_2_9 = 0x1ce0;
    uint256 internal constant sumcheck_univariate_2_10 = 0x1d00;
    uint256 internal constant sumcheck_univariate_2_11 = 0x1d20;
    uint256 internal constant sumcheck_univariate_2_12 = 0x1d40;
    uint256 internal constant sumcheck_univariate_2_13 = 0x1d60;
    uint256 internal constant sumcheck_univariate_2_14 = 0x1d80;
    uint256 internal constant sumcheck_univariate_2_15 = 0x1da0;
    uint256 internal constant sumcheck_univariate_2_16 = 0x1dc0;
    uint256 internal constant sumcheck_univariate_2_17 = 0x1de0;
    uint256 internal constant sumcheck_univariate_2_18 = 0x1e00;
    uint256 internal constant sumcheck_univariate_2_19 = 0x1e20;
    uint256 internal constant sumcheck_univariate_2_20 = 0x1e40;
    uint256 internal constant sumcheck_univariate_2_21 = 0x1e60;
    uint256 internal constant sumcheck_univariate_2_22 = 0x1e80;
    uint256 internal constant sumcheck_univariate_2_23 = 0x1ea0;
    uint256 internal constant sumcheck_univariate_2_24 = 0x1ec0;
    uint256 internal constant sumcheck_univariate_2_25 = 0x1ee0;
    uint256 internal constant sumcheck_univariate_2_26 = 0x1f00;
    uint256 internal constant sumcheck_univariate_2_27 = 0x1f20;
    uint256 internal constant sumcheck_univariate_3_0 = 0x1f40;
    uint256 internal constant sumcheck_univariate_3_1 = 0x1f60;
    uint256 internal constant sumcheck_univariate_3_2 = 0x1f80;
    uint256 internal constant sumcheck_univariate_3_3 = 0x1fa0;
    uint256 internal constant sumcheck_univariate_3_4 = 0x1fc0;
    uint256 internal constant sumcheck_univariate_3_5 = 0x1fe0;
    uint256 internal constant sumcheck_univariate_3_6 = 0x2000;
    uint256 internal constant sumcheck_univariate_3_7 = 0x2020;
    uint256 internal constant sumcheck_univariate_3_8 = 0x2040;
    uint256 internal constant sumcheck_univariate_3_9 = 0x2060;
    uint256 internal constant sumcheck_univariate_3_10 = 0x2080;
    uint256 internal constant sumcheck_univariate_3_11 = 0x20a0;
    uint256 internal constant sumcheck_univariate_3_12 = 0x20c0;
    uint256 internal constant sumcheck_univariate_3_13 = 0x20e0;
    uint256 internal constant sumcheck_univariate_3_14 = 0x2100;
    uint256 internal constant sumcheck_univariate_3_15 = 0x2120;
    uint256 internal constant sumcheck_univariate_3_16 = 0x2140;
    uint256 internal constant sumcheck_univariate_3_17 = 0x2160;
    uint256 internal constant sumcheck_univariate_3_18 = 0x2180;
    uint256 internal constant sumcheck_univariate_3_19 = 0x21a0;
    uint256 internal constant sumcheck_univariate_3_20 = 0x21c0;
    uint256 internal constant sumcheck_univariate_3_21 = 0x21e0;
    uint256 internal constant sumcheck_univariate_3_22 = 0x2200;
    uint256 internal constant sumcheck_univariate_3_23 = 0x2220;
    uint256 internal constant sumcheck_univariate_3_24 = 0x2240;
    uint256 internal constant sumcheck_univariate_3_25 = 0x2260;
    uint256 internal constant sumcheck_univariate_3_26 = 0x2280;
    uint256 internal constant sumcheck_univariate_3_27 = 0x22a0;
    uint256 internal constant sumcheck_univariate_4_0 = 0x22c0;
    uint256 internal constant sumcheck_univariate_4_1 = 0x22e0;
    uint256 internal constant sumcheck_univariate_4_2 = 0x2300;
    uint256 internal constant sumcheck_univariate_4_3 = 0x2320;
    uint256 internal constant sumcheck_univariate_4_4 = 0x2340;
    uint256 internal constant sumcheck_univariate_4_5 = 0x2360;
    uint256 internal constant sumcheck_univariate_4_6 = 0x2380;
    uint256 internal constant sumcheck_univariate_4_7 = 0x23a0;
    uint256 internal constant sumcheck_univariate_4_8 = 0x23c0;
    uint256 internal constant sumcheck_univariate_4_9 = 0x23e0;
    uint256 internal constant sumcheck_univariate_4_10 = 0x2400;
    uint256 internal constant sumcheck_univariate_4_11 = 0x2420;
    uint256 internal constant sumcheck_univariate_4_12 = 0x2440;
    uint256 internal constant sumcheck_univariate_4_13 = 0x2460;
    uint256 internal constant sumcheck_univariate_4_14 = 0x2480;
    uint256 internal constant sumcheck_univariate_4_15 = 0x24a0;
    uint256 internal constant sumcheck_univariate_4_16 = 0x24c0;
    uint256 internal constant sumcheck_univariate_4_17 = 0x24e0;
    uint256 internal constant sumcheck_univariate_4_18 = 0x2500;
    uint256 internal constant sumcheck_univariate_4_19 = 0x2520;
    uint256 internal constant sumcheck_univariate_4_20 = 0x2540;
    uint256 internal constant sumcheck_univariate_4_21 = 0x2560;
    uint256 internal constant sumcheck_univariate_4_22 = 0x2580;
    uint256 internal constant sumcheck_univariate_4_23 = 0x25a0;
    uint256 internal constant sumcheck_univariate_4_24 = 0x25c0;
    uint256 internal constant sumcheck_univariate_4_25 = 0x25e0;
    uint256 internal constant sumcheck_univariate_4_26 = 0x2600;
    uint256 internal constant sumcheck_univariate_4_27 = 0x2620;
    uint256 internal constant sumcheck_univariate_5_0 = 0x2640;
    uint256 internal constant sumcheck_univariate_5_1 = 0x2660;
    uint256 internal constant sumcheck_univariate_5_2 = 0x2680;
    uint256 internal constant sumcheck_univariate_5_3 = 0x26a0;
    uint256 internal constant sumcheck_univariate_5_4 = 0x26c0;
    uint256 internal constant sumcheck_univariate_5_5 = 0x26e0;
    uint256 internal constant sumcheck_univariate_5_6 = 0x2700;
    uint256 internal constant sumcheck_univariate_5_7 = 0x2720;
    uint256 internal constant sumcheck_univariate_5_8 = 0x2740;
    uint256 internal constant sumcheck_univariate_5_9 = 0x2760;
    uint256 internal constant sumcheck_univariate_5_10 = 0x2780;
    uint256 internal constant sumcheck_univariate_5_11 = 0x27a0;
    uint256 internal constant sumcheck_univariate_5_12 = 0x27c0;
    uint256 internal constant sumcheck_univariate_5_13 = 0x27e0;
    uint256 internal constant sumcheck_univariate_5_14 = 0x2800;
    uint256 internal constant sumcheck_univariate_5_15 = 0x2820;
    uint256 internal constant sumcheck_univariate_5_16 = 0x2840;
    uint256 internal constant sumcheck_univariate_5_17 = 0x2860;
    uint256 internal constant sumcheck_univariate_5_18 = 0x2880;
    uint256 internal constant sumcheck_univariate_5_19 = 0x28a0;
    uint256 internal constant sumcheck_univariate_5_20 = 0x28c0;
    uint256 internal constant sumcheck_univariate_5_21 = 0x28e0;
    uint256 internal constant sumcheck_univariate_5_22 = 0x2900;
    uint256 internal constant sumcheck_univariate_5_23 = 0x2920;
    uint256 internal constant sumcheck_univariate_5_24 = 0x2940;
    uint256 internal constant sumcheck_univariate_5_25 = 0x2960;
    uint256 internal constant sumcheck_univariate_5_26 = 0x2980;
    uint256 internal constant sumcheck_univariate_5_27 = 0x29a0;
    uint256 internal constant sumcheck_univariate_6_0 = 0x29c0;
    uint256 internal constant sumcheck_univariate_6_1 = 0x29e0;
    uint256 internal constant sumcheck_univariate_6_2 = 0x2a00;
    uint256 internal constant sumcheck_univariate_6_3 = 0x2a20;
    uint256 internal constant sumcheck_univariate_6_4 = 0x2a40;
    uint256 internal constant sumcheck_univariate_6_5 = 0x2a60;
    uint256 internal constant sumcheck_univariate_6_6 = 0x2a80;
    uint256 internal constant sumcheck_univariate_6_7 = 0x2aa0;
    uint256 internal constant sumcheck_univariate_6_8 = 0x2ac0;
    uint256 internal constant sumcheck_univariate_6_9 = 0x2ae0;
    uint256 internal constant sumcheck_univariate_6_10 = 0x2b00;
    uint256 internal constant sumcheck_univariate_6_11 = 0x2b20;
    uint256 internal constant sumcheck_univariate_6_12 = 0x2b40;
    uint256 internal constant sumcheck_univariate_6_13 = 0x2b60;
    uint256 internal constant sumcheck_univariate_6_14 = 0x2b80;
    uint256 internal constant sumcheck_univariate_6_15 = 0x2ba0;
    uint256 internal constant sumcheck_univariate_6_16 = 0x2bc0;
    uint256 internal constant sumcheck_univariate_6_17 = 0x2be0;
    uint256 internal constant sumcheck_univariate_6_18 = 0x2c00;
    uint256 internal constant sumcheck_univariate_6_19 = 0x2c20;
    uint256 internal constant sumcheck_univariate_6_20 = 0x2c40;
    uint256 internal constant sumcheck_univariate_6_21 = 0x2c60;
    uint256 internal constant sumcheck_univariate_6_22 = 0x2c80;
    uint256 internal constant sumcheck_univariate_6_23 = 0x2ca0;
    uint256 internal constant sumcheck_univariate_6_24 = 0x2cc0;
    uint256 internal constant sumcheck_univariate_6_25 = 0x2ce0;
    uint256 internal constant sumcheck_univariate_6_26 = 0x2d00;
    uint256 internal constant sumcheck_univariate_6_27 = 0x2d20;
    uint256 internal constant eval_Q_M = 0x2d40;
    uint256 internal constant eval_Q_C = 0x2d60;
    uint256 internal constant eval_Q_L = 0x2d80;
    uint256 internal constant eval_Q_R = 0x2da0;
    uint256 internal constant eval_Q_O = 0x2dc0;
    uint256 internal constant eval_Q_4 = 0x2de0;
    uint256 internal constant eval_Q_ARITH = 0x2e00;
    uint256 internal constant eval_Q_RANGE = 0x2e20;
    uint256 internal constant eval_Q_ELLIPTIC = 0x2e40;
    uint256 internal constant eval_Q_AUX = 0x2e60;
    uint256 internal constant eval_Q_LOOKUP = 0x2e80;
    uint256 internal constant eval_SIGMA_1 = 0x2ea0;
    uint256 internal constant eval_SIGMA_2 = 0x2ec0;
    uint256 internal constant eval_SIGMA_3 = 0x2ee0;
    uint256 internal constant eval_SIGMA_4 = 0x2f00;
    uint256 internal constant eval_ID_1 = 0x2f20;
    uint256 internal constant eval_ID_2 = 0x2f40;
    uint256 internal constant eval_ID_3 = 0x2f60;
    uint256 internal constant eval_ID_4 = 0x2f80;
    uint256 internal constant eval_TABLE_1 = 0x2fa0;
    uint256 internal constant eval_TABLE_2 = 0x2fc0;
    uint256 internal constant eval_TABLE_3 = 0x2fe0;
    uint256 internal constant eval_TABLE_4 = 0x3000;
    uint256 internal constant eval_LAGRANGE_FIRST = 0x3020;
    uint256 internal constant eval_LAGRANGE_LAST = 0x3040;
    uint256 internal constant eval_W_L = 0x3060;
    uint256 internal constant eval_W_R = 0x3080;
    uint256 internal constant eval_W_O = 0x30a0;
    uint256 internal constant eval_W_4 = 0x30c0;
    uint256 internal constant eval_Z_PERM = 0x30e0;
    uint256 internal constant eval_LOOKUP_INVERSES = 0x3100;
    uint256 internal constant eval_LOOKUP_READ_COUNTS = 0x3120;
    uint256 internal constant eval_LOOKUP_READ_TAGS = 0x3140;
    uint256 internal constant eval_TABLE_1_SHIFT = 0x3160;
    uint256 internal constant eval_TABLE_2_SHIFT = 0x3180;
    uint256 internal constant eval_TABLE_3_SHIFT = 0x31a0;
    uint256 internal constant eval_TABLE_4_SHIFT = 0x31c0;
    uint256 internal constant eval_W_L_SHIFT = 0x31e0;
    uint256 internal constant eval_W_R_SHIFT = 0x3200;
    uint256 internal constant eval_W_O_SHIFT = 0x3220;
    uint256 internal constant eval_W_4_SHIFT = 0x3240;
    uint256 internal constant eval_Z_PERM_SHIFT = 0x3260;

    // Zermorph items
    uint256 internal constant zm_cqs_0_x0_loc = 0x3280;
    uint256 internal constant zm_cqs_0_x1_loc = 0x32a0;
    uint256 internal constant zm_cqs_0_y0_loc = 0x32c0;
    uint256 internal constant zm_cqs_0_y1_loc = 0x32e0;
    uint256 internal constant zm_cqs_1_x0_loc = 0x3300;
    uint256 internal constant zm_cqs_1_x1_loc = 0x3320;
    uint256 internal constant zm_cqs_1_y0_loc = 0x3340;
    uint256 internal constant zm_cqs_1_y1_loc = 0x3360;
    uint256 internal constant zm_cqs_2_x0_loc = 0x3380;
    uint256 internal constant zm_cqs_2_x1_loc = 0x33a0;
    uint256 internal constant zm_cqs_2_y0_loc = 0x33c0;
    uint256 internal constant zm_cqs_2_y1_loc = 0x33e0;
    uint256 internal constant zm_cqs_3_x0_loc = 0x3400;
    uint256 internal constant zm_cqs_3_x1_loc = 0x3420;
    uint256 internal constant zm_cqs_3_y0_loc = 0x3440;
    uint256 internal constant zm_cqs_3_y1_loc = 0x3460;
    uint256 internal constant zm_cqs_4_x0_loc = 0x3480;
    uint256 internal constant zm_cqs_4_x1_loc = 0x34a0;
    uint256 internal constant zm_cqs_4_y0_loc = 0x34c0;
    uint256 internal constant zm_cqs_4_y1_loc = 0x34e0;
    uint256 internal constant zm_cqs_5_x0_loc = 0x3500;
    uint256 internal constant zm_cqs_5_x1_loc = 0x3520;
    uint256 internal constant zm_cqs_5_y0_loc = 0x3540;
    uint256 internal constant zm_cqs_5_y1_loc = 0x3560;
    uint256 internal constant zm_cqs_6_x0_loc = 0x3580;
    uint256 internal constant zm_cqs_6_x1_loc = 0x35a0;
    uint256 internal constant zm_cqs_6_y0_loc = 0x35c0;
    uint256 internal constant zm_cqs_6_y1_loc = 0x35e0;
    uint256 internal constant zm_cqs_7_x0_loc = 0x3600;
    uint256 internal constant zm_cqs_7_x1_loc = 0x3620;
    uint256 internal constant zm_cqs_7_y0_loc = 0x3640;
    uint256 internal constant zm_cqs_7_y1_loc = 0x3660;
    uint256 internal constant zm_cqs_8_x0_loc = 0x3680;
    uint256 internal constant zm_cqs_8_x1_loc = 0x36a0;
    uint256 internal constant zm_cqs_8_y0_loc = 0x36c0;
    uint256 internal constant zm_cqs_8_y1_loc = 0x36e0;
    uint256 internal constant zm_cqs_9_x0_loc = 0x3700;
    uint256 internal constant zm_cqs_9_x1_loc = 0x3720;
    uint256 internal constant zm_cqs_9_y0_loc = 0x3740;
    uint256 internal constant zm_cqs_9_y1_loc = 0x3760;
    uint256 internal constant zm_cqs_10_x0_loc = 0x3780;
    uint256 internal constant zm_cqs_10_x1_loc = 0x37a0;
    uint256 internal constant zm_cqs_10_y0_loc = 0x37c0;
    uint256 internal constant zm_cqs_10_y1_loc = 0x37e0;
    uint256 internal constant zm_cqs_11_x0_loc = 0x3800;
    uint256 internal constant zm_cqs_11_x1_loc = 0x3820;
    uint256 internal constant zm_cqs_11_y0_loc = 0x3840;
    uint256 internal constant zm_cqs_11_y1_loc = 0x3860;
    uint256 internal constant zm_cqs_12_x0_loc = 0x3880;
    uint256 internal constant zm_cqs_12_x1_loc = 0x38a0;
    uint256 internal constant zm_cqs_12_y0_loc = 0x38c0;
    uint256 internal constant zm_cqs_12_y1_loc = 0x38e0;
    uint256 internal constant zm_cqs_13_x0_loc = 0x3900;
    uint256 internal constant zm_cqs_13_x1_loc = 0x3920;
    uint256 internal constant zm_cqs_13_y0_loc = 0x3940;
    uint256 internal constant zm_cqs_13_y1_loc = 0x3960;
    uint256 internal constant zm_cqs_14_x0_loc = 0x3980;
    uint256 internal constant zm_cqs_14_x1_loc = 0x39a0;
    uint256 internal constant zm_cqs_14_y0_loc = 0x39c0;
    uint256 internal constant zm_cqs_14_y1_loc = 0x39e0;
    uint256 internal constant zm_cqs_15_x0_loc = 0x3a00;
    uint256 internal constant zm_cqs_15_x1_loc = 0x3a20;
    uint256 internal constant zm_cqs_15_y0_loc = 0x3a40;
    uint256 internal constant zm_cqs_15_y1_loc = 0x3a60;
    uint256 internal constant zm_cqs_16_x0_loc = 0x3a80;
    uint256 internal constant zm_cqs_16_x1_loc = 0x3aa0;
    uint256 internal constant zm_cqs_16_y0_loc = 0x3ac0;
    uint256 internal constant zm_cqs_16_y1_loc = 0x3ae0;
    uint256 internal constant zm_cqs_17_x0_loc = 0x3b00;
    uint256 internal constant zm_cqs_17_x1_loc = 0x3b20;
    uint256 internal constant zm_cqs_17_y0_loc = 0x3b40;
    uint256 internal constant zm_cqs_17_y1_loc = 0x3b60;
    uint256 internal constant zm_cqs_18_x0_loc = 0x3b80;
    uint256 internal constant zm_cqs_18_x1_loc = 0x3ba0;
    uint256 internal constant zm_cqs_18_y0_loc = 0x3bc0;
    uint256 internal constant zm_cqs_18_y1_loc = 0x3be0;
    uint256 internal constant zm_cqs_19_x0_loc = 0x3c00;
    uint256 internal constant zm_cqs_19_x1_loc = 0x3c20;
    uint256 internal constant zm_cqs_19_y0_loc = 0x3c40;
    uint256 internal constant zm_cqs_19_y1_loc = 0x3c60;
    uint256 internal constant zm_cqs_20_x0_loc = 0x3c80;
    uint256 internal constant zm_cqs_20_x1_loc = 0x3ca0;
    uint256 internal constant zm_cqs_20_y0_loc = 0x3cc0;
    uint256 internal constant zm_cqs_20_y1_loc = 0x3ce0;
    uint256 internal constant zm_cqs_21_x0_loc = 0x3d00;
    uint256 internal constant zm_cqs_21_x1_loc = 0x3d20;
    uint256 internal constant zm_cqs_21_y0_loc = 0x3d40;
    uint256 internal constant zm_cqs_21_y1_loc = 0x3d60;
    uint256 internal constant zm_cqs_22_x0_loc = 0x3d80;
    uint256 internal constant zm_cqs_22_x1_loc = 0x3da0;
    uint256 internal constant zm_cqs_22_y0_loc = 0x3dc0;
    uint256 internal constant zm_cqs_22_y1_loc = 0x3de0;
    uint256 internal constant zm_cqs_23_x0_loc = 0x3e00;
    uint256 internal constant zm_cqs_23_x1_loc = 0x3e20;
    uint256 internal constant zm_cqs_23_y0_loc = 0x3e40;
    uint256 internal constant zm_cqs_23_y1_loc = 0x3e60;
    uint256 internal constant zm_cqs_24_x0_loc = 0x3e80;
    uint256 internal constant zm_cqs_24_x1_loc = 0x3ea0;
    uint256 internal constant zm_cqs_24_y0_loc = 0x3ec0;
    uint256 internal constant zm_cqs_24_y1_loc = 0x3ee0;
    uint256 internal constant zm_cqs_25_x0_loc = 0x3f00;
    uint256 internal constant zm_cqs_25_x1_loc = 0x3f20;
    uint256 internal constant zm_cqs_25_y0_loc = 0x3f40;
    uint256 internal constant zm_cqs_25_y1_loc = 0x3f60;
    uint256 internal constant zm_cqs_26_x0_loc = 0x3f80;
    uint256 internal constant zm_cqs_26_x1_loc = 0x3fa0;
    uint256 internal constant zm_cqs_26_y0_loc = 0x3fc0;
    uint256 internal constant zm_cqs_26_y1_loc = 0x3fe0;
    uint256 internal constant zm_cqs_27_x0_loc = 0x4000;
    uint256 internal constant zm_cqs_27_x1_loc = 0x4020;
    uint256 internal constant zm_cqs_27_y0_loc = 0x4040;
    uint256 internal constant zm_cqs_27_y1_loc = 0x4060;
    uint256 internal constant zm_cq_x0_loc = 0x4080;
    uint256 internal constant zm_cq_x1_loc = 0x40a0;
    uint256 internal constant zm_cq_y0_loc = 0x40c0;
    uint256 internal constant zm_cq_y1_loc = 0x40e0;
    uint256 internal constant zm_pi_x0_loc = 0x40a0;
    uint256 internal constant zm_pi_x1_loc = 0x40c0;
    uint256 internal constant zm_pi_y0_loc = 0x40e0;
    uint256 internal constant zm_pi_y1_loc = 0x4100;

    // function loadVerificationKey()

    // Challenges offsets
    uint256 internal constant eta_challenge = 0x40c0;
    uint256 internal constant eta_two_challenge = 0x40e0;
    uint256 internal constant eta_three_challenge = 0x4100;
    uint256 internal constant beta_challenge = 0x4120;
    uint256 internal constant gamma_challenge = 0x4140;
    uint256 internal constant rho_challenge = 0x4160;
    uint256 internal constant zm_x_challenge = 0x4180;
    uint256 internal constant zm_y_challenge = 0x41a0;
    uint256 internal constant zm_Z_challenge = 0x41c0;
    uint256 internal constant zm_quotient_challenge = 0x41e0;
    uint256 internal constant public_inputs_delta_challenge = 0x4200;
    uint256 internal constant alpha_challenge_0 = 0x4220;
    uint256 internal constant alpha_challenge_1 = 0x4240;
    uint256 internal constant alpha_challenge_2 = 0x4260;
    uint256 internal constant alpha_challenge_3 = 0x4280;
    uint256 internal constant alpha_challenge_4 = 0x42a0;
    uint256 internal constant alpha_challenge_5 = 0x42c0;
    uint256 internal constant alpha_challenge_6 = 0x42e0;
    uint256 internal constant alpha_challenge_7 = 0x4300;
    uint256 internal constant alpha_challenge_8 = 0x4320;
    uint256 internal constant alpha_challenge_9 = 0x4340;
    uint256 internal constant alpha_challenge_10 = 0x4360;
    uint256 internal constant alpha_challenge_11 = 0x4380;
    uint256 internal constant alpha_challenge_12 = 0x43a0;
    uint256 internal constant alpha_challenge_13 = 0x43c0;
    uint256 internal constant alpha_challenge_14 = 0x43e0;
    uint256 internal constant alpha_challenge_15 = 0x4400;
    uint256 internal constant alpha_challenge_16 = 0x4420;
    uint256 internal constant gate_challenge_0 = 0x4440;
    uint256 internal constant gate_challenge_1 = 0x4460;
    uint256 internal constant gate_challenge_2 = 0x4480;
    uint256 internal constant gate_challenge_3 = 0x44a0;
    uint256 internal constant gate_challenge_4 = 0x44c0;
    uint256 internal constant gate_challenge_5 = 0x44e0;
    uint256 internal constant gate_challenge_6 = 0x4500;
    uint256 internal constant gate_challenge_7 = 0x4520;
    uint256 internal constant gate_challenge_8 = 0x4540;
    uint256 internal constant gate_challenge_9 = 0x4560;
    uint256 internal constant gate_challenge_10 = 0x4580;
    uint256 internal constant gate_challenge_11 = 0x45a0;
    uint256 internal constant gate_challenge_12 = 0x45c0;
    uint256 internal constant gate_challenge_13 = 0x45e0;
    uint256 internal constant gate_challenge_14 = 0x4600;
    uint256 internal constant gate_challenge_15 = 0x4620;
    uint256 internal constant gate_challenge_16 = 0x4640;
    uint256 internal constant gate_challenge_17 = 0x4660;
    uint256 internal constant gate_challenge_18 = 0x4680;
    uint256 internal constant gate_challenge_19 = 0x46a0;
    uint256 internal constant gate_challenge_20 = 0x46c0;
    uint256 internal constant gate_challenge_21 = 0x46e0;
    uint256 internal constant gate_challenge_22 = 0x4700;
    uint256 internal constant gate_challenge_23 = 0x4720;
    uint256 internal constant gate_challenge_24 = 0x4740;
    uint256 internal constant gate_challenge_25 = 0x4760;
    uint256 internal constant gate_challenge_26 = 0x4780;
    uint256 internal constant gate_challenge_27 = 0x47a0;
    uint256 internal constant sum_u_challenge_0 = 0x47c0;
    uint256 internal constant sum_u_challenge_1 = 0x47e0;
    uint256 internal constant sum_u_challenge_2 = 0x4800;
    uint256 internal constant sum_u_challenge_3 = 0x4820;
    uint256 internal constant sum_u_challenge_4 = 0x4840;
    uint256 internal constant sum_u_challenge_5 = 0x4860;
    uint256 internal constant sum_u_challenge_6 = 0x4880;
    uint256 internal constant sum_u_challenge_7 = 0x48a0;
    uint256 internal constant sum_u_challenge_8 = 0x48c0;
    uint256 internal constant sum_u_challenge_9 = 0x48e0;
    uint256 internal constant sum_u_challenge_10 = 0x4900;
    uint256 internal constant sum_u_challenge_11 = 0x4920;
    uint256 internal constant sum_u_challenge_12 = 0x4940;
    uint256 internal constant sum_u_challenge_13 = 0x4960;
    uint256 internal constant sum_u_challenge_14 = 0x4980;
    uint256 internal constant sum_u_challenge_15 = 0x49a0;
    uint256 internal constant sum_u_challenge_16 = 0x49c0;
    uint256 internal constant sum_u_challenge_17 = 0x49e0;
    uint256 internal constant sum_u_challenge_18 = 0x4a00;
    uint256 internal constant sum_u_challenge_19 = 0x4a20;
    uint256 internal constant sum_u_challenge_20 = 0x4a40;
    uint256 internal constant sum_u_challenge_21 = 0x4a60;
    uint256 internal constant sum_u_challenge_22 = 0x4a80;
    uint256 internal constant sum_u_challenge_23 = 0x4aa0;
    uint256 internal constant sum_u_challenge_24 = 0x4ac0;
    uint256 internal constant sum_u_challenge_25 = 0x4ae0;
    uint256 internal constant sum_u_challenge_26 = 0x4b00;
    uint256 internal constant sum_u_challenge_27 = 0x4b20;

    constructor() {
        // TODO: verify the points are on the curve in the constructor        
    }


    function verify(bytes calldata proof, bytes32[] calldata publicInputs) public view override returns (bool) {

        // Load the proof from calldata in one large chunk
        assembly {
            let q := 21888242871839275222246405745257275088696311157297823662689037894645226208583 // EC group order
            let p := 21888242871839275222246405745257275088548364400416034343698204186575808495617 // Prime field order

            // Add the skip offset to the given pointer
            let proof_ptr = add(calldataload(0x04), 0x24);

            // As all of our proof points are written in contiguous parts of memory, we call use a single 
            // calldatacopy to place all of our proof into the correct memory regions
            
            // TODO: make sure this is evaluated as const
            let proof_size = zm_pi_y1_loc - proof_circuit_size;
            calldatacopy(proof_ptr, proof_size)

            // TODO(md): IMPORTANT: Mod all of the base field items by q, and all prime field items by p
            // for the sake of testing we are assuming that these are correct


            // Generate challenges
            // The use of mcpy will be a life saver here


        }

        return false;
    }
}
