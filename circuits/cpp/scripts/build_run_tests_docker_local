#!/bin/bash
set -e

# To be called only LOCALLY for testing WITH docker.
# Builds a docker image and runs tests in it.
#
# Run from circuits/cpp/
# Example
# ./scripts/build_run_tests_docker_local 1 x86_64 glob -*.circuit*

###############################################################################
# ARGS
###############################################################################
NUM_TRANSCRIPTS=$1 # integer (MANDATORY)
ARCH=$2 # x86_64 or wasm (MUST BE LOWERCASE) (MANDATORY) used in `run_tests`
# TESTS=$3 (MANDATORY) used in `run_tests`
# GTEST_FILTER=$4 (optional) used in `run_tests`
# *** See `run_tests` for the args forwarded to that script

shift # arg1 (num transcripts) is not forwarded to `run_tests`

# END ARGS
###############################################################################

DOCKERFILE=dockerfiles/Dockerfile.${ARCH}-linux-clang-assert
IMAGE_URI=local-testing/circuits-${ARCH}-linux-clang-assert:latest

# build docker image
time docker build -f $DOCKERFILE -t $IMAGE_URI .

# run tests in docker image
RUN_ARGS="$@" # helper var necessary for some reason to pass all args to docker run
time docker run --rm -t $IMAGE_URI /bin/sh -c "\
  set -e; \
  cd /usr/src/circuits/cpp/barretenberg/cpp/srs_db; \
  ln -sf /usr/src/circuits/cpp/barretenberg/cpp/srs_db /usr/src/circuits/cpp/srs_db; \
  ./download_ignition.sh $NUM_TRANSCRIPTS; \
  cd /usr/src/circuits/cpp; \
  export PATH=\$PATH:~/.wasmtime/bin/; \
  ./scripts/run_tests_local $RUN_ARGS;"
