{
  "version": 5,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 24,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "default",
      "displayName": "Build with Clang",
      "description": "Build with globally installed Clang",
      "binaryDir": "build",
      "generator": "Ninja",
      "environment": {
        "CC": "clang",
        "CXX": "clang++",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "homebrew",
      "displayName": "Homebrew + Clang",
      "description": "Build with Clang installed via Homebrew",
      "inherits": "default",
      "environment": {
        "CC": "$env{BREW_PREFIX}/opt/llvm/bin/clang",
        "CXX": "$env{BREW_PREFIX}/opt/llvm/bin/clang++"
      }
    },
    {
      "name": "clang16",
      "displayName": "Build with Clang-16",
      "description": "Build with globally installed Clang-16",
      "inherits": "default",
      "environment": {
        "CC": "clang-16",
        "CXX": "clang++-16"
      }
    },
    {
      "name": "clang16-dbg",
      "displayName": "Debugging build with Clang-16",
      "description": "Build with globally installed Clang-16 in debug mode",
      "inherits": "clang16",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug"
      },
      "cacheVariables": {
        "ENABLE_ASAN": "OFF",
        "DISABLE_ASM": "ON"
      }
    },
    {
      "name": "gcc",
      "displayName": "Build with GCC",
      "description": "Build with globally installed GCC",
      "inherits": "default",
      "environment": {
        "CC": "gcc",
        "CXX": "g++"
      }
    },
    {
      "name": "gcc10",
      "displayName": "Build with GCC-10",
      "description": "Build with globally installed GCC-10",
      "inherits": "default",
      "environment": {
        "CC": "gcc-10",
        "CXX": "g++-10"
      }
    },
    {
      "name": "bench",
      "displayName": "Build benchmarks",
      "description": "Build default preset but with a special benchmark directory",
      "inherits": "clang16",
      "binaryDir": "build-bench"
    },
    {
      "name": "fuzzing",
      "displayName": "Build with fuzzing",
      "description": "Build default preset but with fuzzing enabled",
      "inherits": "default",
      "binaryDir": "build-fuzzing",
      "cacheVariables": {
        "FUZZING": "ON"
      }
    },
    {
      "name": "smt-verification",
      "displayName": "Build with smt verificaiton",
      "description": "Build default preset but with smt library included",
      "inherits": "clang16",
      "binaryDir": "build-smt",
      "cacheVariables": {
        "SMT": "ON"
      }
    },
    {
      "name": "coverage",
      "displayName": "Build with coverage",
      "description": "Build default preset but with coverage enabled",
      "inherits": "default",
      "binaryDir": "build-coverage",
      "cacheVariables": {
        "COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "wasm",
      "displayName": "Build for WASM",
      "description": "Build with wasi-sdk to create wasm",
      "binaryDir": "build-wasm",
      "generator": "Ninja",
      "toolchainFile": "cmake/toolchains/wasm32-wasi.cmake",
      "environment": {
        "WASI_SDK_PREFIX": "${sourceDir}/src/wasi-sdk-20.0",
        "CC": "$env{WASI_SDK_PREFIX}/bin/clang",
        "CXX": "$env{WASI_SDK_PREFIX}/bin/clang++",
        "AR": "$env{WASI_SDK_PREFIX}/bin/llvm-ar",
        "RANLIB": "$env{WASI_SDK_PREFIX}/bin/llvm-ranlib"
      },
      "cacheVariables": {
        "CMAKE_SYSROOT": "$env{WASI_SDK_PREFIX}/share/wasi-sysroot",
        "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": "NEVER",
        "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": "ONLY",
        "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": "ONLY",
        "CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": "ONLY",
        "CMAKE_C_COMPILER_WORKS": "ON",
        "CMAKE_CXX_COMPILER_WORKS": "ON",
        "MULTITHREADING": "OFF"
      }
    },
    {
      "name": "wasm-dbg",
      "displayName": "Build for debug WASM",
      "description": "Build with wasi-sdk to create debug wasm",
      "inherits": "wasm",
      "environment": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "wasm-threads",
      "displayName": "Build for pthread enabled WASM",
      "description": "Build for pthread enabled WASM",
      "inherits": "wasm",
      "binaryDir": "build-wasm-threads",
      "environment": {
        "WASI_SDK_PREFIX": "${sourceDir}/src/wasi-sdk-20.0+threads",
        "CMAKE_BUILD_TYPE": "Release"
      },
      "cacheVariables": {
        "MULTITHREADING": "ON"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "inheritConfigureEnvironment": true,
      "jobs": 0
    },
    {
      "name": "homebrew",
      "inherits": "default",
      "configurePreset": "homebrew"
    },
    {
      "name": "clang16",
      "inherits": "default",
      "configurePreset": "clang16"
    },
    {
      "name": "clang16-dbg",
      "inherits": "default",
      "configurePreset": "clang16-dbg"
    },
    {
      "name": "gcc",
      "inherits": "default",
      "configurePreset": "gcc"
    },
    {
      "name": "gcc10",
      "inherits": "default",
      "configurePreset": "gcc10"
    },
    {
      "name": "bench",
      "inherits": "clang16",
      "configurePreset": "bench"
    },
    {
      "name": "fuzzing",
      "inherits": "default",
      "configurePreset": "fuzzing"
    },
    { 
      "name": "smt-verification",
      "inherits": "clang16",
      "configurePreset": "smt-verification"
    },
    {
      "name": "coverage",
      "inherits": "default",
      "configurePreset": "coverage"
    },
    {
      "name": "wasm",
      "configurePreset": "wasm",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm", "acvm_backend.wasm"]
    },
    {
      "name": "wasm-dbg",
      "configurePreset": "wasm-dbg",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm"]
    },
    {
      "name": "wasm-threads",
      "configurePreset": "wasm-threads",
      "inheritConfigureEnvironment": true,
      "jobs": 0,
      "targets": ["barretenberg.wasm"]
    }
  ],
  "testPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "inheritConfigureEnvironment": true
    },
    {
      "name": "homebrew",
      "inherits": "default",
      "configurePreset": "homebrew"
    },
    {
      "name": "clang16",
      "inherits": "default",
      "configurePreset": "clang16"
    },
    {
      "name": "clang16-dbg",
      "inherits": "default",
      "configurePreset": "clang16-dbg"
    },
    {
      "name": "gcc",
      "inherits": "default",
      "configurePreset": "gcc"
    },
    {
      "name": "gcc10",
      "inherits": "default",
      "configurePreset": "gcc10"
    },
    {
      "name": "bench",
      "inherits": "clang16",
      "configurePreset": "bench"
    },
    {
      "name": "fuzzing",
      "inherits": "default",
      "configurePreset": "fuzzing"
    },
    {
      "name": "smt-verification",
      "inherits": "clang16",
      "configurePreset": "smt-verification"
    },
    {
      "name": "coverage",
      "inherits": "default",
      "configurePreset": "coverage"
    },
    {
      "name": "wasm",
      "configurePreset": "wasm",
      "inheritConfigureEnvironment": true
    }
  ]
}
