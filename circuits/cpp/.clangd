# Language Server Protocol for showing code problems
# and suggesting fixes in an editor.
#
# See .clang-tidy comments for more information.

CompileFlags:                     # Tweak the parse settings
  Remove: -fconstexpr-ops-limit=*
---
# Applies all barretenberg source files
If:
  PathMatch: [src/.*\.hpp, src/.*\.cpp, src/.*\.tcc, src/.*\.h]
Diagnostics:
  # Checks whether we are including unused header files
  # Note that some headers may be _implicitly_ used and still
  # need to be included, so be careful before removing them.
  UnusedIncludes: Strict

  # Static analysis configuration
  ClangTidy:
    Add:
      - cert-*
      - google-*
      - cppcoreguidelines-*
      - readability-*
      - modernize-*
      - bugprone-*
      - misc-*
      - performance-*
      - clang-analyzer-*
      - concurrency-*
      - portability-*
    Remove:
      # Fixing this would be a lot of work.
      - bugprone-easily-swappable-parameters
      # These checks rename our cbinds and consts that have `__` in the name
      - bugprone-reserved-identifier
      # All of our circuit structs have non-private members
      - cppcoreguidelines-non-private-member-variables-in-classes
      # We have many `for` loops that violate this part of the bounds safety profile
      - cppcoreguidelines-pro-bounds-constant-array-index
      # These checks rename our cbinds and consts that have `__` in the name
      - cert-dcl37-c
      - cert-dcl51-cpp
      # We use anon namespaces to import types
      - cert-dcl59-cpp
      # We use anon namespaces to import types
      - google-build-namespaces
      # Large diff; we often `use` an entire namespace
      - google-readability-avoid-underscore-in-googletest-name
      # All of our circuit structs have non-private members
      - misc-non-private-member-variables-in-classes
      # Huge diff. Not sure we want to use trailing return type
      - modernize-use-trailing-return-type
      # We like (a == true) in circuits
      - readability-simplify-boolean-expr
      # `any_of/all_of` loops are not objectively more readable
      - readability-use-anyofallof

--- # this divider is necessary
# Disable some checks for Google Test/Bench
If:
  PathMatch: [src/.*\.test\.cpp, src/.*\.bench\.cpp]
Diagnostics:
  ClangTidy:
    # these checks get triggered by the Google macros
    Remove:
      # Triggers for globals in tests and TEST macros
      - cert-err58-cpp
      - cppcoreguidelines-avoid-non-const-global-variables
      - cppcoreguidelines-owning-memory
      - cppcoreguidelines-special-member-functions
      # Triggers on some tests that are not complex
      #- readability-function-cognitive-complexity