#!/usr/bin/env bash
# For running test cmds that are pathed relative to the repo root.
# Commands are read from stdin.
NO_CD=1 source $(git rev-parse --show-toplevel)/ci3/source

cd $root
jobs=$(get_num_cpus_max ${1:-})
parallel_args="-j$jobs --memsuspend ${MEMSUSPEND:-64G} --line-buffer --joblog joblog.txt --halt now,fail=1"

echo "Starting test run with max $jobs jobs..."

# If we're in a terminal default to a progress bar, and use cache_log to save output to redis.
# Otherwise use denoise to display dots and save output to redis.
if [ -t 1 ]; then
  set +e
  output=$(parallel $parallel_args --bar "run_test_cmd {}")
  code=$?
  echo -e "$output" | cache_log "Test run" >/dev/null
  if [ "$code" -ne 0 ]; then
    echo -e "$output"
    exit 1
  fi
  set -e
else
  denoise "parallel $parallel_args 'run_test_cmd {}'"
fi

slow_jobs=$(cat joblog.txt | \
  awk 'NR>1 && $4 > 300 {print | "sort -k4,4"}' | \
  awk '{print $4 ": " substr($0, index($0, $10))}')
if [ -n "$slow_jobs" ]; then
  echo -e "${yellow}WARNING: The following tests exceed 5 minute runtimes. Break them up or rethink them.${reset}"
  echo "$slow_jobs"
fi

echo "Completed run of $(tail -n+2 joblog.txt | wc -l) tests in $SECONDS seconds."
