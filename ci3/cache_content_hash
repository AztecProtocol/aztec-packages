#!/usr/bin/env bash
set -euo pipefail
[ "${BUILD_SYSTEM_DEBUG:-}" = 1 ] && set -x

if [[ "$#" = 0 ]]; then
  echo "Error: No arguments provided."
  exit 1
fi

AZTEC_CACHE_COMMIT=${AZTEC_CACHE_COMMIT:-HEAD}
PLATFORM_TAG="${PLATFORM_TAG:-${OSTYPE:-unknown}-$(uname -m)}"

rebuild_patterns=()
for arg in "$@"; do
  if [[ -f "$arg" ]]; then
    rebuild_patterns+=$(cat "$arg")
    rebuild_patterns+=$'\n'
  else
    rebuild_patterns+="$arg"$'\n'
  fi
done

GREP_PATTERN=$(echo "$rebuild_patterns" | grep -v '^$')
# Concatenate patterns with '|' and double escape backslashes for AWK
# filter empty lines
AWK_PATTERN=$(echo "$rebuild_patterns" | grep -v '^$' | sed 's/\\/\\\\/g' | tr '\n' '|' | sed 's/|$//')
# use git repo root because that is where our patterns are focused
cd "$(git rev-parse --show-toplevel)"

unstaged_diff="$(git diff --name-only | grep -E "$GREP_PATTERN" || true)"
staged_diff="$(git diff --staged --name-only | grep -E "$GREP_PATTERN" || true)"
untracked_diff="$(git ls-files --others --exclude-standard | grep -E "$GREP_PATTERN" || true)"

# Check for uncommitted files/changes
if [[ -n "$unstaged_diff" ]] || [[ -n "$staged_diff" ]] || [[ -n "$untracked_diff" ]]; then
  # Signal to cache_upload and cache_download to not touch this file.
  echo "disabled-cache"
  exit 0
fi

# Calculate a content hash for matched files
# Use git ls-tree and AWK to filter files matching the rebuild patterns and extract their hashes
# Sort the hashes and compute the content hash
CONTENT_HASH="$(
  git ls-tree -r "$AZTEC_CACHE_COMMIT" \
    | awk -v pattern="($AWK_PATTERN)" '$4 ~ pattern {print $3}' \
    | sort \
    | git hash-object --stdin \
    | cut -c1-16
)"

# Check if file list was empty by comparing against the result of
# 'echo '' | git hash-object --stdin | cut -c1-16'
EMPTY_HASH="8b137891791fe969"
if [[ "$CONTENT_HASH" == "$EMPTY_HASH" ]]; then
  echo "No files matched the rebuild patterns $rebuild_patterns."
  echo "Awk pattern expanded: $AWK_PATTERN."
  exit 1
fi

# important: include architecture in content hash because we target x86_64 and arm64
echo "${CONTENT_HASH}-${PLATFORM_TAG}"
