#!/usr/bin/env bash
NO_CD=1 source $(git rev-parse --show-toplevel)/ci3/source

name=$1
exit_container=$2
compose_file_path=$3

# Strip leading non alpha numerics and replace / and . with _.
name=$(echo "${name}${NAME_POSTFIX:-}" | sed 's/^[^a-zA-Z0-9]*//; s/[\/\.]/_/g')
name_arg="-p $name"

cd "$compose_file_path"

# Remove any existing container with the same name.
docker compose $name_arg down --timeout 0 &> /dev/null

function cleanup {
  # echo compose cleanup: $name_arg >/dev/tty
  # If the container hasn't completed, wait up to 15 seconds for it to start.
  # Bit of kludge, but otherwise the "down" could happen before the "up" has started.
  SECONDS=0
  while [[ -z "${code:-}" && $SECONDS -lt 15 ]] && \
    ! docker compose $name_arg ps --format '{{.Service}} {{.State}}' | grep -q "running"; do
      # echo waiting for compose to be running: $name_arg >/dev/tty
      sleep 1
  done
  # echo compose kill $name_arg >/dev/tty
  docker compose $name_arg down --timeout 0 &> /dev/null
}
trap cleanup EXIT

started=1
setsid docker compose --ansi always $name_arg up --exit-code-from=$exit_container --abort-on-container-exit --force-recreate | cat &
pid=$!
wait $pid
code=$?
exit $code
