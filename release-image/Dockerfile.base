# Create an image that installs yarn-projects production dependencies.
FROM aztecprotocol/build:3.0 AS build
# Copy files explicitly listed in Dockerfile.base.dockerignore into container.
# Should just be package.json, yarn.lock, and .yarn* files.
COPY . /usr/src
# Install yarn-project production dependencies.
# Explicitly specify projects that we use to keep as slim as possible.
WORKDIR /usr/src/yarn-project
RUN yarn workspaces focus @aztec/aztec @aztec/cli-wallet --production

# Create base of our final slim image.
# This can be cached and will only update if dependencies change.
FROM ubuntu:noble
# Install node 18.19.1
RUN apt update && apt install -y \
      curl \
      ca-certificates \
      git \
      gnupg \
      jq \
      netcat-openbsd \
      parallel && \
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt update && apt install -y nodejs=18.19.1-1nodesource1 && \
    rm -rf /var/lib/apt/lists/*
# Install anvil.
COPY --from=build /opt/foundry/bin/anvil /opt/foundry/bin/anvil
COPY --from=build /opt/foundry/bin/cast /opt/foundry/bin/cast
ENV PATH="/opt/foundry/bin:$PATH" FOUNDRY_DISABLE_NIGHTLY_WARNING="1"
# Copy in production dependencies.
COPY --from=build /usr/src/yarn-project/node_modules /usr/src/yarn-project/node_modules
# We install a symlink to yarn-project's node_modules at a location that all portalled packages can find as they
# walk up the tree as part of module resolution. The supposedly idiomatic way of supporting module resolution
# correctly for portalled packages, is to use --preserve-symlinks when running node.
# However I noticed --preserve-symlinks causes duplication of portalled instances such as bb.js, breaking the singleton
# logic by initialising the module more than once. So at present I don't see a viable alternative.
RUN ln -s /usr/src/yarn-project/node_modules /usr/src/node_modules
