VERSION 0.8

source:
  FROM ../build-images+from-registry

  # Install nargo
  COPY ../noir/+nargo/nargo /usr/bin/nargo
  # Install world state napi
  COPY ../barretenberg/cpp/+preset-release-world-state/bin/world_state_napi.node /usr/src/barretenberg/cpp/build/bin/world_state_napi.node

  WORKDIR /usr/src/noir-projects

  # Copy source.
  COPY package.json yarn.lock mega_honk_circuits.json .
  COPY --dir aztec-nr noir-contracts noir-protocol-circuits mock-protocol-circuits scripts .

build-contracts:
  ARG RAYON_NUM_THREADS
  LOCALLY
  LET bb_source_hash = $(cd .. && git ls-tree -r HEAD | grep 'barretenberg/cpp' | awk '{print $3}' | git hash-object --stdin)
  FROM +source
  RUN --secret AWS_ACCESS_KEY_ID --secret AWS_SECRET_ACCESS_KEY mkdir -p ~/.aws && \
      bash -c 'echo -e "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials'

  # Install bb
  COPY ../barretenberg/cpp/+preset-release/bin/bb /usr/src/barretenberg/cpp/build/bin/bb

  # Install transpiler
  COPY ../avm-transpiler/+build/avm-transpiler /usr/bin/avm-transpiler

  RUN yarn
  ENV RAYON_NUM_THREADS=$RAYON_NUM_THREADS
  RUN cd noir-contracts && NARGO=nargo TRANSPILER=avm-transpiler  ./bootstrap.sh
  SAVE ARTIFACT noir-contracts

build-protocol-circuits:
  ARG RAYON_NUM_THREADS
  LOCALLY
  LET bb_source_hash = $(cd .. && git ls-tree -r HEAD | grep 'barretenberg/cpp' | awk '{print $3}' | git hash-object --stdin)
  FROM +source
  RUN --secret AWS_ACCESS_KEY_ID --secret AWS_SECRET_ACCESS_KEY mkdir -p ~/.aws && \
      bash -c 'echo -e "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials'

  # Install bb
  COPY ../barretenberg/cpp/+preset-release/bin/bb /usr/src/barretenberg/cpp/build/bin/bb
  RUN yarn

  ENV RAYON_NUM_THREADS=$RAYON_NUM_THREADS
  RUN cd noir-protocol-circuits && BB_HASH=$bb_source_hash NARGO=nargo PARALLEL_VK=false ./bootstrap.sh
  SAVE ARTIFACT noir-protocol-circuits

build-mock-protocol-circuits:
  ARG RAYON_NUM_THREADS
  LOCALLY
  LET bb_source_hash = $(cd .. && git ls-tree -r HEAD | grep 'barretenberg/cpp' | awk '{print $3}' | git hash-object --stdin)
  FROM +source
  RUN --secret AWS_ACCESS_KEY_ID --secret AWS_SECRET_ACCESS_KEY mkdir -p ~/.aws && \
      bash -c 'echo -e "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials'

  # Install bb
  COPY ../barretenberg/cpp/+preset-release/bin/bb /usr/src/barretenberg/cpp/build/bin/bb
  RUN yarn

  ENV RAYON_NUM_THREADS=$RAYON_NUM_THREADS
  RUN echo "building with num threads $RAYON_NUM_THREADS"
  RUN cd mock-protocol-circuits && BB_HASH=$bb_source_hash NARGO=nargo PARALLEL_VK=false ./bootstrap.sh
  SAVE ARTIFACT mock-protocol-circuits

build:
  FROM +source
  BUILD +build-contracts
  BUILD +build-protocol-circuits
  BUILD +build-mock-protocol-circuits

  COPY +build-contracts/noir-contracts ./noir-contracts
  COPY +build-protocol-circuits/noir-protocol-circuits ./noir-protocol-circuits
  COPY +build-mock-protocol-circuits/mock-protocol-circuits ./mock-protocol-circuits

  SAVE ARTIFACT aztec-nr
  SAVE ARTIFACT noir-contracts
  SAVE ARTIFACT noir-protocol-circuits
  SAVE ARTIFACT mock-protocol-circuits

test:
  FROM ../yarn-project/+txe

  # Install nargo
  COPY ../noir/+nargo/nargo /usr/bin/nargo

  COPY +build/. /usr/src/noir-projects

  RUN cd /usr/src/noir-projects/noir-protocol-circuits && nargo test --silence-warnings

  RUN cd /usr/src/yarn-project/txe && yarn start & \
      # Wait for TXE to initialize
      sleep 5 && \
      cd /usr/src/noir-projects/aztec-nr && \
      NARGO_FOREIGN_CALL_TIMEOUT=300000 nargo test --silence-warnings --oracle-resolver http://localhost:8080

  RUN cd /usr/src/yarn-project/txe && yarn start & \
      # Wait for TXE to initialize
      sleep 5 && \
      cd /usr/src/noir-projects/noir-contracts && \
      # We need to increase the timeout since all tests running in parallel hammer TXE at the same time and processing slows down, leading to timeouts
      # The only way we currently have to batch tests is via RAYON_NUM_THREADS, which is not ideal
      NARGO_FOREIGN_CALL_TIMEOUT=300000 nargo test --silence-warnings --oracle-resolver http://localhost:8080

format:
  FROM +source

  WORKDIR /usr/src/noir-projects/noir-protocol-circuits
  RUN yarn && node ./scripts/generate_variants.js
  RUN nargo fmt --check

  WORKDIR /usr/src/noir-projects/mock-protocol-circuits
  RUN nargo fmt --check

  WORKDIR /usr/src/noir-projects/noir-contracts
  RUN nargo fmt --check

  WORKDIR /usr/src/noir-projects/aztec-nr
  RUN nargo fmt --check

gates-report:
  FROM +source
  WORKDIR /usr/src/noir-projects

  # Install bb
  COPY ../barretenberg/cpp/+preset-release/bin/bb /usr/src/barretenberg/cpp/build/bin/bb
  ENV BB_BIN /usr/src/barretenberg/cpp/build/bin/bb

  RUN cd noir-protocol-circuits && yarn && node ./scripts/generate_variants.js tiny && nargo compile --silence-warnings

  COPY ./gates_report.sh ./gates_report.sh
  RUN ./gates_report.sh

  SAVE ARTIFACT ./noir-protocol-circuits/gates_report.json gates_report.json

public-functions-report:
  FROM +build-contracts
  WORKDIR /usr/src/noir-projects

  RUN cd noir-contracts && node publicFunctionsSizeReport.js ./target/

  SAVE ARTIFACT ./noir-contracts/public_functions_report.json public_functions_report.json

