use crate::{
    address::{AztecAddress, PartialAddress, SaltedInitializationHash},
    contract_class_id::ContractClassId,
    hash::private_functions_root_from_siblings,
    public_keys::PublicKeys,
    tests::fixtures::contract_functions::get_protocol_contract_function,
};

pub struct ContractData {
    pub address: AztecAddress,
    pub artifact_hash: Field,
    pub contract_address_salt: Field,
    pub contract_class_id: ContractClassId,
    pub private_functions_root: Field,
    pub public_bytecode_commitment: Field,
    pub public_keys: PublicKeys,
    pub salted_initialization_hash: SaltedInitializationHash,
    pub partial_address: PartialAddress,
    pub deployer: AztecAddress,
}

// The following was generated by `noir_test_gen.test.ts`.
// Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update it.
pub global default_contract: ContractData = ContractData {
    contract_address_salt: 0x000000000000000000000000000000000000000000000000000000000000ddd5,
    artifact_hash: 0x0000000000000000000000000000000000000000000000000000000000003039,
    public_bytecode_commitment: 0x02b7e5d00c7db713d9bbca97fb00109acf3a5d6c017b61fe3760ef35a72c88ae,
    private_functions_root: 0x1829828a72cecb4177b5066ec1e891412ae2d1f155e637942ec18e263b8d2b3a,
    address: AztecAddress {
        inner: 0x2f1d8ebd0d3027294fedcc40e653ce386e2df3b88a826fc7ef382181d16ec5bf,
    },
    partial_address: PartialAddress {
        inner: 0x02d05ac83fa3df527d0642309de75d2363b9b8ac8fbb6ca430b172051099abc0,
    },
    contract_class_id: ContractClassId {
        inner: 0x1c942bae6867bd984c3eecb4d6896713776e90e87659c005e9abd5065b9ac016,
    },
    public_keys: PublicKeys::default(),
    salted_initialization_hash: SaltedInitializationHash {
        inner: 0x13a939daa511233e5446905ed2cadbee14948fa75df183b53b5c14b612bffe88,
    },
    deployer: AztecAddress {
        inner: 0x0000000000000000000000000000000000000000000000000000000000000000,
    },
};

// The following was generated by `noir_test_gen.test.ts`.
// Run the test with AZTEC_GENERATE_TEST_DATA=1 flag to update it.
pub global parent_contract: ContractData = ContractData {
    contract_address_salt: 0x0000000000000000000000000000000000000000000000000000000000001618,
    artifact_hash: 0x00000000000000000000000000000000000000000000000000000000000004bc,
    public_bytecode_commitment: 0x1fa970012bd11a88985f21a34cf26a285e696af1986c6348c6c46aedc6cc890b,
    private_functions_root: 0x0d2b00bd4acf8cfbf862b1e319102bf511b5984666f978c27591986fce5d33fd,
    address: AztecAddress {
        inner: 0x104f26ad3ee39757c027b690c9662b657e964665c3e914b8135e8aaa66d37ea9,
    },
    partial_address: PartialAddress {
        inner: 0x1e97dc9b4ed35ddc542b04eac5a174bc2856ecb8675ddc747d0ecef6b905b2f5,
    },
    contract_class_id: ContractClassId {
        inner: 0x09d39c7c835c2326f8bc49249a1c607bf8a43f71560a60b2ca5b3df1447fc758,
    },
    public_keys: PublicKeys::default(),
    salted_initialization_hash: SaltedInitializationHash {
        inner: 0x24bd6ac7a182e2cf25e437c72f53544ef81dfd97d9afee23abb07a638e7be749,
    },
    deployer: AztecAddress {
        inner: 0x0000000000000000000000000000000000000000000000000000000000000000,
    },
};

pub fn get_protocol_contract(index: u32) -> ContractData {
    let seed = index as Field;
    let artifact_hash = 576576 + seed;
    let salted_initialization_hash = SaltedInitializationHash { inner: 281972 + seed };
    let public_bytecode_commitment = 38383 + seed;
    // Empty public keys here will throw an error when doing ec ops
    let public_keys = PublicKeys::default();

    let function = get_protocol_contract_function(index);
    let private_functions_root = private_functions_root_from_siblings(
        function.data.selector,
        function.vk_hash,
        function.membership_witness.leaf_index,
        function.membership_witness.sibling_path,
    );

    let contract_class_id = ContractClassId::compute(
        artifact_hash,
        private_functions_root,
        public_bytecode_commitment,
    );

    let partial_address = PartialAddress::compute_from_salted_initialization_hash(
        contract_class_id,
        salted_initialization_hash,
    );

    let address = AztecAddress::compute(public_keys, partial_address);

    ContractData {
        contract_address_salt: 1,
        artifact_hash,
        public_bytecode_commitment,
        private_functions_root,
        address,
        partial_address,
        contract_class_id,
        public_keys,
        salted_initialization_hash,
        deployer: AztecAddress { inner: 0 },
    }
}
