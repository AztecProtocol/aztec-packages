/* Autogenerated file, do not edit! */

/* eslint-disable */

export type Field = string;
export type u32 = string;

export interface AggregationObject {
}


export interface Address {
  inner: Field;
}


export interface EthAddress {
  inner: Field;
}


export interface NewContractData {
  contract_address: Address;
  portal_contract_address: EthAddress;
  function_tree_root: Field;
}


export interface FunctionSelector {
  inner: u32;
}


export interface FunctionData {
  selector: FunctionSelector;
  is_internal: boolean;
  is_private: boolean;
  is_constructor: boolean;
}



export interface OptionallyRevealedData {
  call_stack_item_hash: Field;
  function_data: FunctionData;
  vk_hash: Field;
  portal_contract_address: EthAddress;
  pay_fee_from_l1: boolean;
  pay_fee_from_public_l2: boolean;
  called_from_l1: boolean;
  called_from_public_l2: boolean;
}


export interface PublicDataUpdateRequest {
  leaf_index: Field;
  old_value: Field;
  new_value: Field;
}


export interface PublicDataRead {
  leaf_index: Field;
  value: Field;
}


export interface CombinedAccumulatedData {
  aggregation_object: AggregationObject;
  read_requests: Field[];
  new_commitments: Field[];
  new_nullifiers: Field[];
  nullified_commitments: Field[];
  private_call_stack: Field[];
  public_call_stack: Field[];
  new_l2_to_l1_msgs: Field[];
  encrypted_logs_hash: Field[];
  unencrypted_logs_hash: Field[];
  encrypted_log_preimages_length: Field;
  unencrypted_log_preimages_length: Field;
  new_contracts: NewContractData[];
  optionally_revealed_data: OptionallyRevealedData[];
  public_data_update_requests: PublicDataUpdateRequest[];
  public_data_reads: PublicDataRead[];
}


export interface Block {
  private_data_tree_root: Field;
  nullifier_tree_root: Field;
  contract_tree_root: Field;
  l1_to_l2_data_tree_root: Field;
  public_data_tree_root: Field;
  global_variables_hash: Field;
}


export interface HistoricalBlockData {
  blocks_tree_root: Field;
  block: Block;
  private_kernel_vk_tree_root: Field;
}


export interface Point {
  x: Field;
  y: Field;
}



export interface ContractDeploymentData {
  deployer_public_key: Point;
  constructor_vk_hash: Field;
  function_tree_root: Field;
  contract_address_salt: Field;
  portal_contract_address: EthAddress;
}


export interface TxContext {
  is_fee_payment_tx: boolean;
  is_rebate_payment_tx: boolean;
  is_contract_deployment_tx: boolean;
  contract_deployment_data: ContractDeploymentData;
  chain_id: Field;
  version: Field;
}


export interface CombinedConstantData {
  block_data: HistoricalBlockData;
  tx_context: TxContext;
}


export interface KernelCircuitPublicInputs {
  end: CombinedAccumulatedData;
  constants: CombinedConstantData;
  is_private: boolean;
}


export interface Proof {
}


export interface VerificationKey {
}


export interface PreviousKernelData {
  public_inputs: KernelCircuitPublicInputs;
  proof: Proof;
  vk: VerificationKey;
  vk_index: u32;
  vk_path: Field[];
}


export interface PrivateKernelInputsOrdering {
  previous_kernel: PreviousKernelData;
  read_commitment_hints: Field[];
  nullifier_commitment_hints: Field[];
}



export interface FinalAccumulatedData {
  aggregation_object: AggregationObject;
  new_commitments: Field[];
  new_nullifiers: Field[];
  nullified_commitments: Field[];
  private_call_stack: Field[];
  public_call_stack: Field[];
  new_l2_to_l1_msgs: Field[];
  encrypted_logs_hash: Field[];
  unencrypted_logs_hash: Field[];
  encrypted_log_preimages_length: Field;
  unencrypted_log_preimages_length: Field;
  new_contracts: NewContractData[];
  optionally_revealed_data: OptionallyRevealedData[];
}



export interface KernelCircuitPublicInputsFinal {
  end: FinalAccumulatedData;
  constants: CombinedConstantData;
  is_private: boolean;
}

export interface ReturnType {
  value: KernelCircuitPublicInputsFinal;
}

export interface InputType {
  input: PrivateKernelInputsOrdering;
}