/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::aztec::constants_gen::RETURN_VALUES_LENGTH;



// Interface for calling PrivateToken functions from a private context
struct PrivateTokenPrivateContextInterface {
  address: Field,
}

impl PrivateTokenPrivateContextInterface {
  fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  fn mint(
    self,
    context: &mut PrivateContext,
    amount: Field,
    owner: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialised_args = [0; 2];
    serialised_args[0] = amount;
    serialised_args[1] = owner;

    context.call_private_function(self.address, 0x1535439c, serialised_args)
  }
  

  fn transfer(
    self,
    context: &mut PrivateContext,
    amount: Field,
    recipient: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialised_args = [0; 2];
    serialised_args[0] = amount;
    serialised_args[1] = recipient;

    context.call_private_function(self.address, 0xc0888d22, serialised_args)
  }
  
}
  
  


// Interface for calling PrivateToken functions from a public context
struct PrivateTokenPublicContextInterface {
  address: Field,
}

impl PrivateTokenPublicContextInterface {
  fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
}
  
  
