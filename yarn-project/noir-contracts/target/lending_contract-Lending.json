{"noir_version":"0.23.0+f1b91511124df89bbe9e059b87536901bdf0d6f3","name":"Lending","functions":[{"name":"get_assets","function_type":"Unconstrained","is_internal":false,"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},"visibility":"public"},"return_witnesses":[0,1]},"bytecode":"H4sIAAAAAAAA/82Yz04bMRDGvX+TXYcEeuvN5/ayjfoA9Nye+gQEJSCERKQAErw8AgeP+DEYhIRNGGnl2bE9882361mvC2NMYR6lMk9SoC2V/TzoI9jdw3UY9OEj8nuYN95JbaLSPlzfEL9OH3/wfpvUfodhPgJnCf0O/pmMwY9DnAZcdXiGiWL/YuwiXBJH7BX0A/MkHfQSOL3YkIseR71WcybobyN5u8R56/d/pDDWwDEDYOYq+l1CbBPgKhCrysSDUTyISLweOAxs0l/CVqq5nr8j9DeROW0knugNbDV86rnkKcPa3/LEWA73Es8CR/sJeFhiHe6bLxJb1lPCtbGt7eNMObH2OOBnHZQxP0M7DS3rWgUOvFjw0qGvS8/PnLWDzyIXZxQHXeK9Vst2hee1Wib9HWylmqtrmQ06a5nkW0V8W9j6oE8ic8mTRS6HQR8+JlueGMvh3qItFMZd42k+EY88H/HdKzy7jr0X9NS1dZopp1nwJbVV8Eu8CmP+qT6xe5G1tAdOrBrn89hPn8e8V1i8vFVz9oEnB6+Z8hy8D+7zZyqfCfr5jTnIkGOBuOJb7onxvXjtF8DbwzaDTfqnsJUqF+6NZfzYPP8/SPkv4v22GXjifl7krbWUez/tv/vyblxerTeL09X/1WLJY5RawWRbRNLgsQv1KmLzwt+ZGjZ9FMDXgr9Cets5Ni8pTfqeVyYu+ryphC7yI7TfQ/tns1ncurOL5erGra+v3PrEHa+vL5aXnPT3vZPMPdLmEtwXEwAA","debug_symbols":"zddNasMwEIbhu2htiuZHI8lXKV2YNoVAcErtndHdi4nrLuoWYhzx7UKY8TyE8IZM7nJ97cbztR9cOzn/RMm1z5MbPrp+fmMYu8/RtUSSQuNO/dv8WslK497Pl5NrmaQ0G/Mm63jWdTr7jWGJvMzq/LBl1KS8NDMog4HYo4EIDcRoIEEDKRoooIEMDRTRQGilZrRSC1qpBa3UglZqQSu1PLrUtyuhyhWrciVWuXJM/djr9ziz/f9FIYq2PjuFdZhEF1PGM6kHNBGgiQFNAmhSQNMf9VRKPybVej8aamigiAZKaKAMBgoeDURoIEYDCRpI0UBopQ5opQ5opQ5opQ5opTa0UhtaqQ2t1IZWakMrtaGV2tBKbY8u9e1KqnIl17gSfZUrx9Tv0H+okQFNAmhSQFMANBmgKeKZ8ubnxBaXLfH6q+s57thJO3by/Tvk/Z4lum+plC8="},{"name":"update_accumulator","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236]},"bytecode":"","debug_symbols":""},{"name":"deposit_public","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"on_behalf_of","type":{"kind":"field"},"visibility":"private"},{"name":"collateral_asset","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":34,"end":35}],"collateral_asset":[{"start":37,"end":38}],"inputs":[{"start":0,"end":34}],"nonce":[{"start":35,"end":36}],"on_behalf_of":[{"start":36,"end":37}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240]},"bytecode":"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","debug_symbols":""},{"name":"repay_private","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"from","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"},{"name":"on_behalf_of","type":{"kind":"field"},"visibility":"private"},{"name":"stable_coin","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":37,"end":38}],"from":[{"start":36,"end":37}],"inputs":[{"start":0,"end":36}],"nonce":[{"start":38,"end":39}],"on_behalf_of":[{"start":40,"end":41}],"secret":[{"start":39,"end":40}],"stable_coin":[{"start":41,"end":42}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552]},"bytecode":"","debug_symbols":""},{"name":"constructor","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243]},"bytecode":"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","debug_symbols":"q1bKyU9OLMnMzytWsqqurQUA"},{"name":"init","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"oracle","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"loan_to_value","type":{"kind":"field"},"visibility":"private"},{"name":"collateral_asset","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"stable_coin","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"collateral_asset":[{"start":36,"end":37}],"inputs":[{"start":0,"end":34}],"loan_to_value":[{"start":35,"end":36}],"oracle":[{"start":34,"end":35}],"stable_coin":[{"start":37,"end":38}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240]},"bytecode":"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","debug_symbols":""},{"name":"withdraw_private","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"},{"name":"to","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":38,"end":39}],"inputs":[{"start":0,"end":36}],"secret":[{"start":36,"end":37}],"to":[{"start":37,"end":38}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329]},"bytecode":"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","debug_symbols":"7Z3dTttAEEbfxdeo2pmd2Z+8SsUFaqmEhKAq3KG8e5M0u7bl6Y4IAcNkrwjSrHfO58U+JI79Mtw//rh5vnt8eBo2LwPAsPn+Mjz9vnnY//r0fPPnedi4q+H24efu5/Zq+HV3fztsEPz2alEHOcZjKeSca3WMQjH6hMdiJD8WAydp00CByraBMc3qr68GwC/buf+4zhlC6ZxjeHPnJHXOHsoo9pNJ5P6pZknZT2rxMAG/9wThvSeIZ5gg5lq8nCC9fQIOZQnxZAXtJzhlUeRP1hA6saFJqgG1hsBTLuXgGajWM73/EQLhyxPgxxOc91iH/hwETDQSRJ4S7Oegs8zhoTUHn2WOFOocYRKuuCeAgHwpJ7//K563FFZoKY4pUdTKA6ZjcQg0WRkg07q6ZR6P1wDSuss1mczjrgKEQzCxByMHk3owcjC5ByMG410PRg4GejByMNiDkYPxPRg5GOrByMFwD0YOxpj5phoMO5gFs4c1ZrNtWGOG2oY1Zp1NWDJmkm1YY3bYhjVmfG1YYxbXhqVLgjVmW21YWwbFWD/MY0oLWFsGpcDaMigF1pZBtWHZlkEpsLYMSoG1ZVAKrC2DUmDpkmBtGZQCa8ygYqqwk2tHCqwxg2rDGjOoNqwxg2rCBmMG1YY1ZlBtWGMG1YY1ZlBtWLokWGMG1YZdw6BSGC+pyy6eD9a7wMdiD26qi/DajzdD7MHIwaQejBxM7sGIwUTXg5GDgR6MHAz2YORgfA9GDoZ6MHIw3IORg+nm+59gbJkvkKvBBJgFs4e1ZbMKrC1DbcMmW9apwNoySQXWlh0qsLaMT4GlS4K1ZWYKrC3bglzervU4+U5wgTVmUG1YYwbVhjVmUE3YbMyg2rDGDKoNa8yg2rDGDKoNS5cEa8ugkKtBYVwYVLZlUAqsLYNSYG0ZlAJry6DasOBsKZRGa8uhNFpbEqXR2rIojZZM0XooN8Tz3uOS1pZHabS2REqjtWVSGq0tldJobbmUQgu2XEqjteVSGq0tl9JobbmURksXRbuCS3F25eKf3Wua0R56Cmv0VC9IguDmNzw+9LSClwSHtTwAukVPK9jDbot1pQbMsOgpf76ecIUzcfCu3kA7eF7sO1zhfLmrGNd4Qlz0tMJZLaT6OfzudeZFTyuce0KGcT3lefmhJ1qjp1xvZx5dXq6nFY7jcff/S+0J0nLfrXAcj+ix9oTk2+XZlW1nP31XheWlWhuJNP9mmlCtP0Ql9nQa6aRPnw6Vg2mOTkmHPZYtM7lp9WnP/Vjj3uOvSye5+gVRB2EWz/X+CQ/fxNWfxhU3uXsG5+OYdMIYMSnI5aSDMOpncP+e2vBNPhE2J9oN8qcMolMG8SmDwusGbbd/AQ=="},{"name":"_withdraw","function_type":"Open","is_internal":true,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":36,"end":37}],"inputs":[{"start":0,"end":34}],"owner":[{"start":34,"end":35}],"recipient":[{"start":35,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239]},"bytecode":"","debug_symbols":""},{"name":"_borrow","function_type":"Open","is_internal":true,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"to","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":36,"end":37}],"inputs":[{"start":0,"end":34}],"owner":[{"start":34,"end":35}],"to":[{"start":35,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239]},"bytecode":"","debug_symbols":""},{"name":"get_asset","function_type":"Unconstrained","is_internal":false,"abi":{"parameters":[{"name":"assetId","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"assetId":[{"start":0,"end":1}]},"return_type":{"abi_type":{"kind":"struct","path":"asset::Asset","fields":[{"name":"interest_accumulator","type":{"kind":"integer","sign":"unsigned","width":120}},{"name":"last_updated_ts","type":{"kind":"integer","sign":"unsigned","width":120}},{"name":"loan_to_value","type":{"kind":"integer","sign":"unsigned","width":120}},{"name":"oracle","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[1,2,3,4]},"bytecode":"H4sIAAAAAAAA/81YTY/TMBB1Yrdd0m27fH8ssP4Fq7SUG6BygivLES5F7a6Quo3UpCL8eUSdzhOv3qhCW5diKfV47HnzZiZx4xillFHrpldXpG426EbSp7u1fkCs1NTwjCkeJfEtRG7RehuKxzB93YAjdTOHCXHCmubqukPzkdnkXtmYzTicTpsNmEpnZNAQXY/wDMXdCB13mg4S4ofmx29JbhAfE55Pf09xpg63KVi/wuG+Qi7QtJenY5pvUu5ae8hdRH6BzfVSNfI2vvF/wHef98NReNxBR633BeT1yMsvx5WIHPB+TJX6sy8Z8peQ32ORo4B+HVabYo2IB/xpWmOl79K8n592+Pr0t+1tbY8vcnRoPomq/09qEzfoYs/W7TlXNN8Vmf+neiLrGuwu6Toi92psOU9dimUkcrpbq/LEviyNuxRz5HE8NJ/WP+SD+gC74/E5tO8TkUPudw73bviYhi6me4LVFGzwhz9Na9558ULvGp6lExr76ziOUoXdl5lLSb7hLyGZ+TwQOWC9qve7h4JlVdh6PRIs1Av84U/Tmo/SIxfQoz6K7N34vreO4whdL+ZSkm/4S0hmPk9EDlivgcN9KlhWha3XM8FCvcAf/jStuZAe9YIe9VFk78aPvXUcR+h6MZeSfMNfQjLzeS5yyPOIw30hWFaFrddLwUK9wB/+NK35Kj3qBT3qo8jejU+9dQnJvE/BFz8LZyJzvq3Ip6SLa3xoL4bqPC7yGen4DOKae69vkX3AGg75rGoD4nJsaNveP/m8uoczWN+dD3Av5EW2GF9NL6bjSUTUQNd4dCO1SR3zMelY1jU61xIKkz/J4LWtQbrYSwvfPlh/pGo+wY2kT3dr1XtWLA5K6WO5eKxpDIJ13wU5qbAzFDTb4Fl4I/3ndb1sPssKm9r56nc8m2U/ppNzy3O5vV7mhc2L8aKwl4vs2vbPGfet9Hh23y8W45/2+3wyLW22LGx2ab9ly/kkZ6MPtzH6dBujL39rpH4DUaJuUokVAAA=","debug_symbols":"1djLagIxFMbxd8layrklOfFVShfSCwiipbqTeffextjSoO1gnW92Cic5v4X8HWYfVpv7xW65WW/DfB/opoT57T5snxfr9+/b3eJlF+ZMnnkWHtcPH59L7mbhabl6DHNh7WaNeTqOR63TpTnMluwwzVG8jnP07m72hmKCVDGkSiBVCqkySFWEVCVIVYZUOaQKsu0C2XaBbLtAtl0g2y6QbRfItstl2s7idY/H0yrqJ+nMpankfjKzHa+kHp6nCvepwstE4UpThfNU4b/4typkZ+FJK7x82/JzWLP0s8bHLCbtQYoGMjRQRAMlNFBGAzkaqICBjNBAjAZCK7WhldrQSm1opTa0UhtaqQ2t1IZW6ohW6ohW6ohW6vjfpf7cYlfZEq+yJV1ly2XqJ1RfHYmk0z8UllxJ4nK8mkpvckBTwTMlAjQxoEkATQposnFNhRqmCGhKgKYROq5S71ZtmRzQVPBMmQBNDGgSQJMCmmxkkzdMEdCUAE1jdDzlasqpYXJAU8EzOQGaGNAkgCYFNNm4JreGKQKaEqBphI6b1rvNGs8F7oCmgmcqBGhiQJMAmhTPxNRESU2IfgEdXpgz2ZBDccihNORQHnLI/3ao614B"},{"name":"deposit_private","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"from","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"},{"name":"on_behalf_of","type":{"kind":"field"},"visibility":"private"},{"name":"collateral_asset","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":37,"end":38}],"collateral_asset":[{"start":41,"end":42}],"from":[{"start":36,"end":37}],"inputs":[{"start":0,"end":36}],"nonce":[{"start":38,"end":39}],"on_behalf_of":[{"start":40,"end":41}],"secret":[{"start":39,"end":40}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552]},"bytecode":"","debug_symbols":""},{"name":"compute_note_hash_and_nullifier","function_type":"Unconstrained","is_internal":false,"abi":{"parameters":[{"name":"contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":0,"type":{"kind":"field"}},"visibility":"private"}],"param_witnesses":{"contract_address":[{"start":0,"end":1}],"nonce":[{"start":1,"end":2}],"serialized_note":[],"storage_slot":[{"start":2,"end":3}]},"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"},"return_witnesses":[3,4,5,6]},"bytecode":"H4sIAAAAAAAA/+2W2w7CIAyGC2MHmIl3ertHmIfEW9//oYygVH6ru7JcmKwJEQr8fO26SUdEhp7WxObo03j+mn/n3+ygqDXX5DR/wmkVOc0XTgN1wTXSxtbFdsz+HvZNWjzn+ZLO4cMbercQm+WBKz5eZ8DH/NYV3laf99TnvKjqxmecNPeQa1eJXT0nUbmnUh+Kuo9aHbJWl7X5nBZy5bkeSPfbMICugXPY30B/R8U89C1wJhup1I9f2OPEng3Md1/inpTjlu96LxhdjiPZNuXBFX9FtnMQbMmMGE/Q98AzVMhVpTjnpBuy1o10/6NGyI98rhuYD7BmrJA7fJ9Ym8fIuPKuvMjgBWuA+QF8VsSC9wZcL78fqgHxgXixMQCXbOni9bI7IvTp/cILAAA=","debug_symbols":"q1bKyU9OLMnMzytWsqqurQUA"},{"name":"borrow_private","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"secret","type":{"kind":"field"},"visibility":"private"},{"name":"to","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":38,"end":39}],"inputs":[{"start":0,"end":36}],"secret":[{"start":36,"end":37}],"to":[{"start":37,"end":38}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329]},"bytecode":"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","debug_symbols":"7Z3BTuMwEIbfJWe08oxnxnZfZcUB7bISEoLVwg313bft1k6ieD2iFAJTnwBpHM/3x00+2jR5Ge4ff9w83z0+PA2blwFg2Hx/GZ5+3zzs/3x6vvnzPGzc1XD78HP3c3s1/Lq7vx02CH57taiDFMKxFFJKpTqESjH6iMdiJD8WA8fapoGE8raBMc7qr68GwC/buf+4zhkkd85B3tw51ToPPqXjqEACSv9UsqTkJ7V4mIDfewJ57wnCGSYIuZj9coL49glY8hLiyQraT3DKokifrCF01YZY8m4LwSXtVeap9A+egUo90/sfIRC+PAF+PMF5j3Xoz0HARCNB4CnBfg46yxweWnPwWeaIUuaQSbjVPQEE5HM5+f2reN6SrNBSGFOioJULxmOxCE1WBtRpXdkyj8drgNq6SyWZxOOuAoRDMKEHUw8m9mDqwaQeTDUY73ow9WCgB1MPBnsw9WB8D6YeDPVg6sFwD6YejDHzjSUYdjALZg9rzGbbsMYMtQ1rzDqbsGTMJNuwxuywDWvM+NqwxiyuDUuXBGvMttqwtgyKsXyYxxQXsLYMSoG1ZVAKrC2DasOyLYNSYG0ZlAJry6AUWFsGpcDSJcHaMigF1phBhVhgJ9eOZFhjBtWGNWZQbVhjBtWEFWMG1YY1ZlBtWGMG1YY1ZlBtWLokWGMG1YZdw6CijJfUJRfOB+ud8LHYg5vqIrz2400JPZh6MLEHUw8m9WCqwQTXg6kHAz2YejDYg6kH43sw9WCoB1MPhnsw9WC6+f4nGFvmC+RKMAKzYPawtmxWgbVlqG3YaMs6FVhbJqnA2rJDBdaW8SmwdEmwtsxMgbVlW5Dy27UeJ98JzrDGDKoNa8yg2rDGDKoJm4wZVBvWmEG1YY0ZVBvWmEG1YemSYG0ZFHIxKAwLg0q2DEqBtWVQCqwtg1JgbRlUGxacLYXSaG05lEZrS6I0WlsWpdGSKVoPuW/vPS5pbXmURmtLpDRaWyal0dpSKY3WlksptGDLpTRaWy6l0dpyKY3WlktptHRRtCu4FCeXL/7Z/U4z2kNPskZP5YIkEDe/4fGhpxW8RByWcgF0i55WsAfBcaUKJlj0lD5fT7jCmVi8KzfQFs+LfYcrnC93FeMaj4iLnlY4q0ksn8Pvfk+86GmFc48kGNdTmpcfeqI1ekrldua7rS/X0wrH8bD7/6X0BHG571Y4jgf0WHpC8u3y5PK2k5++q8L1pVoaCTT/ZlqlWn+ISujpNNKJnz4dygfTFJySDnvMW2Zy0+rTnvuxxr3HX5dOdOULog5kFs/1/gkP36qrP44rbnL3DE7HMfGEMdWkIOWTDsKon+L+PbXhW/1E2JxoN8ifMohOGcSnDJLXDdpu/wI="},{"name":"get_position","function_type":"Unconstrained","is_internal":false,"abi":{"parameters":[{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"owner":[{"start":0,"end":1}]},"return_type":{"abi_type":{"kind":"struct","path":"Lending::Position","fields":[{"name":"collateral","type":{"kind":"field"}},{"name":"static_debt","type":{"kind":"field"}},{"name":"debt","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[1,2,3]},"bytecode":"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","debug_symbols":""},{"name":"repay_public","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"stable_coin","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":34,"end":35}],"inputs":[{"start":0,"end":34}],"nonce":[{"start":35,"end":36}],"owner":[{"start":36,"end":37}],"stable_coin":[{"start":37,"end":38}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240]},"bytecode":"","debug_symbols":"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RhUkjSpIGlWQNKrYJAJvEoE3iMB5gAicB4jAeYAInAeIwHmACJwHiMB5gAicB4jAeYAInAeJwEIisJAILCQCC4nAQiKwkAgsJAILicBCgp6SoNcxMr4dke0j/tT+p6bPF9KYx/PT518SfTv9vvT0f84/WPJMVc8/vjq9XHt67d6tTpH/2xHWPsLbR7S/p6v9Pe00wL8dsbtHdLrU346Q9hHte27te27te27te27te27te27te27te+7te+7te+7te+7te+7te+7te+7te+7te+7te+7tex7tex7tex7tex7tex7tex7tex7tex7tex7tex7te57te57te57te57te57te57te57te57te57te57te17te17te17te17te17te17te17te17te17te17te77b93y37/lu3/Pdvue7fc93+57v9j3f7Xu+2/d8d+95HUf7CGkfoe0jVvsIax/h7SOifUS2j6j2Ee17Lu17Lu17Lu17Lu17Lu17Lu17Lu17Lu17Lu17Lu17ru17ru17ru17ru17ru17ru173s4Oq50dlrbvubbv+Wrf89W+5+0crto5XLVzuGrncNXO4aqdw1U7h6t2DlftHK7aOVy1c7hq53DVzuGqncNVO4erdg5X7Ryu2jlctXO4audw1c7hqp3DVTuHq3YOV+0crto5XLVzuGrncNXO4aqdw1U7h6t2DlftHK7aOVy1c7hq53DVzuGqncNVO4erdg5X7Ryu2jlctXO4audw1c7hqp3DVTuHq3YOV+0crto5XLVzuGrncNXO4aqdw1U7h6t2DlftHK7aOVy1c7hq53DVzuGqncNVO4erdg5X7Ryu2jlctXO4audwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncLudw+12DrfbOdxu53C7ncPtdg632zncbudwu53D7XYOt9s53G7ncHK0g7jzEOkfov1DVv8Q6x/i/UOif0j2D6n+If27L/27L/27L/27L/27L/27L/27L/27L/27L/27L/27r/27r/27r/27r/27r/27r/27r/27r/27r/27r/27v/p3f/Xv/urf/dW/+6t/91f/7q/+3V/9u7/6d3/1777177717771777177717771777177717771777177737773777377737773777377737773777377737370737073707370737073707370737073707370737273727372737273727372737273727372737273717371737173717371737173717371737173717/7u3/3dv/u7f/d3/+7v/t3f/bu/+3d/9+/+7t/9ftYn/axP+lmf9LM+6Wd950+9/UO8f0j0D8n+IdU/pH/3+1mf9LM+6Wd90s/6pJ/1ST/rk37WJ/2sT/pZn/SzPulnfdLP+qSf9Uk/65N+1if9rE/6WZ/0sz7pZ33Sz/qkn/VJP+uTftYn/axP+lmf9LM+6Wd90s/6pJ/1ST/rk37WJ/2sT/pZn/SzPulnfdLP+qSf9Uk/65N+1if9rE/6WZ/0sz7pZ33Sz/qkn/VJP+uTftYn/axP+lmf9LM+6Wd90s/6pJ/1ST/rk37WJ/2sT/pZn/SzPulnfdLP+qSf9Uk/65N+1if9rE/6WZ/0sz7pZ33Sz/qkn/VJP+uTftYn/axP+lmf9LM+6Wd90s/6pJ/1ST/rk37WJ/2sT/pZn/SzPulnfdLP+qSf9Uk/65N+1if9rE/6WZ/0sz7tZ33az/q0n/VpP+vTftan/axP+1mf9rM+7Wd92s/6tJ/1aT/r037Wp/2sT/tZn/azPu1nfdrP+rSf9Wk/69N+1qf9rE/7WZ/2sz7tZ33az/q0n/VpP+vTftan/axP+1mf9rM+7Wd92s/6tJ/1aT/r037Wp/2sT/tZn/azPu1nfdrP+rSf9Wk/69N+1qf9rE/7WZ/2sz7tZ33az/q0n/VpP+vTftan/axP+1mf9rM+7Wd92s/6tJ/1aT/r037Wp/2sT/tZn/azPu1nfdrP+rSf9Wk/69N+1qf9rE/7WZ/2sz7tZ33az/q0n/VpP+vTftan/axP+1mf9rM+7Wd92s/6tJ/1aT/r037Wp/2sT/tZn/azPu1nfdrP+rSf9Wk/69N+1qf9rE/7WZ/2sz7tZ33az/q0n/VpP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rW/2sb/WzvtXP+lY/61v9rG/1s77Vz/pWP+tb/axv9bO+1c/6Vj/rs37WZ/2sz/pZn/WzPutnfdbP+qyf9Vk/67N+1mf9rM/6WZ/1sz7rZ33Wz/qsn/VZP+uzftZn/azP+lmf9bM+62d91s/6rJ/1WT/rs37WZ/2sz/pZn/WzPutnfdbP+qyf9Vk/67N+1mf9rM/6WZ/1sz7rZ33Wz/qsn/VZP+uzftZn/azP+lmf9bM+62d91s/6rJ/1WT/rs37WZ/2sz/pZn/WzPutnfdbP+qyf9Vk/67N+1mf9rM/6WZ/1sz7rZ33Wz/qsn/VZP+uzftZn/azP+lmf9bM+62d91s/6rJ/1WT/rs37WZ/2sz/pZn/WzPutnfdbP+qyf9Vk/67N+1mf9rM/6WZ/1sz7rZ33Wz/qsn/VZP+uzftZn/azP+lmf9bM+62d91s/6rJ/1WT/rs37WZ/2sz/pZn/WzPu9nfd7P+ryf9Xk/6/N+1uf9rM/7WZ/3sz7vZ33ez/q8n/V5P+vzftbn/azP+1mf97M+72d93s/6vJ/1eT/r837W5/2sz/tZn/ezPu9nfd7P+ryf9Xk/6/N+1uf9rM/7WZ/3sz7vZ33ez/q8n/V5P+vzftbn/azP+1mf97M+72d93s/6vJ/1eT/r837W5/2sz/tZn/ezPu9nfd7P+ryf9Xk/6/N+1uf9rM/7WZ/3sz7vZ33ez/q8n/V5P+vzftbn/azP+1mf97M+72d93s/6vJ/1eT/r837W5/2sz/tZn/ezPu9nfd7P+ryf9Xk/6/N+1uf9rM/7WZ/3sz7vZ33ez/q8n/V5P+vzftbn/azP+1mf97M+72d93s/6vJ/1eT/r837W5/2sz/tZn/ezPu9nfd7P+ryf9Xk/64t+1hf9rC/6WV/0s77oZ33Rz/qin/VFP+uLftYX/awv+llf9LO+6Gd90c/6op/1RT/ri37WF/2sL/pZX/SzvuhnfdHP+qKf9UU/64t+1hf9rC/6WV/0s77oZ33Rz/qin/VFP+uLftYX/awv+llf9LO+6Gd90c/6op/1RT/ri37WF/2sL/pZX/SzvuhnfdHP+qKf9UU/64t+1hf9rC/6WV/0s77oZ33Rz/qin/VFP+uLftYX/awv+llf9LO+6Gd90c/6op/1RT/ri37WF/2sL/pZX/SzvuhnfdHP+qKf9UU/64t+1hf9rC/6WV/0s77oZ33Rz/qin/VFP+uLftYX/awv+llf9LO+6Gd90c/6op/1RT/ri37WF/2sL/pZX/SzvuhnfdHP+qKf9UU/64t+1hf9rC/6WV/0s77sZ33Zz/qyn/VlP+vLftaX/awv+1lf9rO+7Gd92c/6sp/1ZT/ry37Wl/2sL/tZX/azvuxnfdnP+rKf9WU/68t+1pf9rC/7WV/2s77sZ33Zz/qyn/VlP+vLftaX/awv+1lf9rO+7Gd92c/6sp/1ZT/ry37Wl/2sL/tZX/azvuxnfdnP+rKf9WU/68t+1pf9rC/7WV/2s77sZ33Zz/qyn/VlP+vLftaX/awv+1lf9rO+7Gd92c/6sp/1ZT/ry37Wl/2sL/tZX/azvuxnfdnP+rKf9WU/68t+1pf9rC/7WV/2s77sZ33Zz/qyn/VlP+vLftaX/awv+1lf9rO+7Gd92c/6sp/1ZT/ry37Wl/2sL/tZX/azvuxnfdnP+rKf9WU/68t+1pf9rC/7WV/2s77sZ33Zz/qyn/VlP+urftZX/ayv+llf9bO+6md91c/6qp/1VT/rq37WV/2sr/pZX/WzvupnfdXP+qqf9VU/66t+1lf9rK/6WV/1s77qZ33Vz/qqn/VVP+urftZX/ayv+llf9bO+6md91c/6qp/1VT/rq37WV/2sr/pZX/WzvupnfdXP+qqf9VU/66t+1lf9rK/6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"},{"name":"_repay","function_type":"Open","is_internal":true,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"stable_coin","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":35,"end":36}],"inputs":[{"start":0,"end":34}],"owner":[{"start":34,"end":35}],"stable_coin":[{"start":36,"end":37}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239]},"bytecode":"","debug_symbols":"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Ru7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7hRu7h7JKLuPsQ0w9Z+iGuHxL6IakfUvohWz+k9UP01Td99U1ffdNX3/TVN331TV9901ff9NU3ffVNX/2lr/7SV3/pq7/01V/66i999Ze++ktf/aWv/tJX3/XVd331XV9911ff9dV3ffVdX33XV9/11Xd99UNf/dBXP/TVD331Q1/90Fc/9NUPffVDX/3QVz/11U999VNf/dRXP/XVT331U1/91Fc/9dVPffVLX/3SV7/01S999Utf/dJXv/TVL331S1/90ld/66u/9dXf+upvffW3vvpbX/2tr/7WV3/rq7/11W999Vtf/dZXv/XVb331W1/91le/9dVvffVbX/3RV3/01R999Udf/dFXf/TVH331R1/90Vdf7/pM7/pM7/pM7/pM7/ruP/Xqh6R+SOmHbP2Q1g/RV1/v+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+kzv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1rs/1ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/0ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1ri/1rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rq/0rm/rXd/Wu76td31b7/q23vVtvevbete39a5v613f1ru+rXd9W+/6tt71bb3r23rXt/Wub+td39a7vq13fVvv+rbe9W2969t617f1rm/rXd/Wu76td31b7/q23vVtvevbete39a5v613f1ru+rXd9W+/6tt71bb3r23rXt/Wub+td39a7vq13fVvv+rbe9W2969t617f1rm/rXd/Wu76td31b7/q23vVtvevbete39a5v613f1ru+rXd9W+/6tt71bb3r23rXt/Wub+td39a7vq13fVvv+rbe9W2969t617f1rm/rXd/Wu76td31b7/q23vVtvevbete39a5v613f1ru+rXd9W+/6tt71bb3r23rXt/Wub+td39a7vq13fVvv+rbe9W2969t617f1rm/rXd/Wu76td31b7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa7/pa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UAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUAxWUgxWUgxWUgxWUgxWXpBkTYrBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBSorBKorBKorBKorBKorBqguSrEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWEUxWJtisDbFYG2KwdoUg7UvSLJuisHaFIO1KQZrUwzWphisTTFYm2KwNsVgbYrB2hSDtSkGa1MM1qYYrE0xWJtisDbFYG2KwdoUg7UpBmtTDNamGKxNMVibYrA2xWBtisHaFIO1KQZrUwzWphisTTFYm2KwNsVgbYrB2hSDtSkGa1MM1qYYrE0xWJtisDbFYG2KwdoUg7UpBmtTDNamGKxNMVibYrA2xWBtisHaFIO1KQZrUwzWphisTTFYm2KwNsVgbYrB2hSDtSkGa1MM1qYYrE0xWJtisDbFYG2KwdoUg7UpBmtTDNamGKxNMVibYrA2xWBtisHaFIO1KQZrUwzWphisTTFYm2KwNsVgbYrB2hSDtSkGa1MM1qYYrE0xWJtisDbFYG2KwdoUg7UpBmtTDNamGKxNMVibYrCaYrCaYrCaYrCaYrD6giRrUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwxWUwzWUAzWUAzWUAzWUAzWXJBkHYrBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGorBGojB8gtisO5BGMl6D8JI1nsQRrLegzCS9R6Ekaz3IIxkvQdhJOs9CCNZ70EoyQoxWPcglGSFGKx7EEqyQgzWPQglWSEG6x6EkqwQg3UPQklWiMG6B6EkK8Rg3YNQkhVisO5BKMkKMVj3IJRkhRisexBKskIM1j0IJVkhBusehJKsEIN1DyIk69shpR+y9UNaP+QvJcA/PfVf0z///NT23KnXc6f273/qf/xczdvTuy3ePzvX+xSBmCIRUxRiiv3cI9fPnfq55MjnkiOfS458LjnSnzt1PHdqxDueiHc8N2KKRkzxXHLUc8lRzyVHPZcc9Vxy1HPJUfncqeu5U595x6/58sla9fXt+jpFI6YYwhT7QkzxXHLs55JjP5cc+7nk2M8lx34uOfZzfwPYz/0NYCPe8Ua8422IKRZiiueSo59Ljn4uOfq55OjnkqOfS45+7m8A89zfAAbxjg/iHR9HTBGIKZ5LjnkuOea55JjnkkPZv/xfh5iy0/jtENMPWfohrh8S+iGpH1L6IVs/pPVD9NU3ffVNX33TV9/01Td99U1ffdNX3/TVN331TV/9pa/+0ld/6av/8X6lOxLSvhx2//+uDw+N1w/N1w+t1w/dnx8av2uKP/5aWOVvv6Or/nCh66Of4Vvn28ntd5++l/d9rGaONcixPt6h8+PHMuZYizmWM8cK5ljJHKuYYzFT3pkp78yUD2bKBzPlg5nywUz5YKZ8MFM+mCkfzJQPZsoHM+WTmfLJTPlkpnwyUz6ZKZ/MlE9mytePCIi14u3ky/eHYxlzrB/xyK99vY+17cOxkjlWMcfazLGaOdYgx9oXc6wfkVvu6+3kvv0PY3306cu/fjo+vIn1K9yE429i19uH9+++bWLebyF+/lvIn/8W6ue/hf3z30LTb2Fd76e+7MNbmJ/+Fvr6+W8B/w39+S3gv58/vwV8qC572wq41vXhLeBD9dNbGPzr7O//QIPPx7fwQ17nb//p8x8/PfH24cn86E+qs37+W/Cf/xbi6Vt4u1CeulCdutA+daHv84fArHq/0Pgnj1nH9ZZXndbvn871PtUAp1rXhZzKkFMt5FSOnCqQUyVyqkJOtZFTEbN9XchsN2S2GzLbDZnthsx2Q2a7IbPdkNluyGw3ZLYbMtsXMtsXMtsXMtsXMtsXMtsXMtsXMtsXMtsXMtsXMtsdme2OzHZHZrsjs92R2e7IbHdktjsy2x2Z7Y7M9kBmeyCzPZDZHshsD2S2BzLbA5ntgcz2QGZ7ILM9kdmeyGxPZLYnMtsTme2JzPZEZnsisz2R2Z7IbC9kthcy2wuZ7YXM9kJmeyGzvZDZXshsL2S2FzLbNzLbNzLbNzLbNzLbNzLbNzLbNzLbNzLbNzLbNzLbG5ntjcz2RmZ7I7O9kdneyGxvZLY3Mtsbme2NzPZBZvsgs32Q2T7IbB9ktg8y2weZ7YPMdqRLXUiX6kiX6kiX6kiX6kiX6hcx2x3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUh3pUgPpUgPpUgPpUgPpUuMiZnsgXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWogXWoiXWoiXWoiXWoiXWpexGxPpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEtNpEstpEstpEstpEstpEuti5jthXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSphXSp9bxLfbuQn7rQ90ng7e8X2vdv10cXylMXqlMX2qcu1KcuNGcutL+Tl/wTF7LvfqG6PrzQOnUhP3WhbyRDXvN+ofT85EJm5W8ft/k61nwUwL7f8jfsa1qVv4+UvJGKN9LmjdS8kQY30rek4Y8cyXgjLd5IzhuJl97GS2/jpbfx0tt46W289F689F689F689F689F689F689F689F689F689F689HZeejsvvZ2X3s5Lb+elt/PS23np7bz0dl56Oy+9g5fewUvv4KV38NI7eOkdvPQOXnoHL72Dl97BS+/kpXfy0jt56Z289E5eeicvvZOX3slL7+Sld/LSu3jpXbz0Ll56Fy+9i5fexUvv4qV38dK7eOldvPTevPTevPTevPTevPTevPTevPTevPTevPTevPTevPRuXno3L72bl97NS+/mpXfz0rt56d289G5eejcvvYeX3sNL7+Gl9/DSe3jpPbz0Hl56Dy+9h5feg0vvvnDp3RcuvfvCpXdfuPTuC5fezbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOWzbOW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lsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsGzlsmzlsmzlsmzlsmzlnnh0jt51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51jJ51rJ41rJ41rJ41rJ41rIuXHoXz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1oWz1punrXcPGu5edZy86zlvnDpvXnWcvOs5X7cWr5dpw9dZ85c53Hq+Had75OI64q3j69V//yRsWu+DvW7U1vm+1QLOZUjpwrkVImcqpBTbeRUfyZR7frDVG+HzsuH/ikk+I1DvxFl919q3g/d3zh0vX6ov37oN97c8vndofbZuqfZ28fT83efXu8XylMXqlMX2qcu1KcuNIcu9C3IJV6o8/3js/wPF/rHT687Tb58et13+rtP50efXvn27qy16w+ffrsJ+xVuYv0KN+G/wk3Er3ATyb+Jud4+7Zd98mnzfv8Djc98eMv1M9/y203sX+Amgv+t4svfb8Ljw5vgf6v8/iaiP7wJ/rfKn7gJ/rfKn7iJHx3IsT67idz77dM5+8Ob+NER+11u4vtE7OT1fhO9PruJK/JtrKvyw7GaOdYgx8qLOZZ997GmPhnL+n0s6/rwT4O5mGM5c6xgjpXMseoHjDX2XqiNfzzWZo7VzLEGOVZdzLG+S8qvu2x/+zqxHZ99+fR7Sb/mDxXyi39drvUr3IT/kJtY37qJt7GCOVYyx6ofMNbk1yexP362NnOsZo41P2Sst2fLr2t9NNa+fshY9j6WfdiQ7R/wDeLX+jqW598/+4v013Pn+vj3dv0KN+G/wk0E/yY+7WV2/uCbqM/+QPInCoBdv8JN7F/hJvpXuIn5BW6iL/5N9PsfUq+P06l/9Df2d7mJH/2N/V1u4kd/Y3+Xm/g+39jr/eP3z2Kvz/5c+r03GXT+CjdRv8JN7F/hJvpXuInB38Tnex/m+qlu4uOfuI/9CjexfoWb8B98E39i28Cnf8eeH/2N/V1u4kd/Y3+Xm/jR39jfYxfKfJ9v7Lzs/ULen93E539Xm2aONcSx+rqYYxlzrPUjxvrsr2J9OXOsYI6VzLHqu49Vn5UCn2+O6Wszx2rmWIMcy64fMNanu1DajDnWYo7lzLGCOdY3Un6v9XWs/HTj1fU+ll35daP3fPzPE0S9b/exXF+/FCz7fa6CzrWhczV0rmHO9S1x/sPnMuhcCzqXQ+cK6FzQvF/QvF/QvF/QvF/QvHdo3js07/375L2tfr9S5z+f660Nvj45ac1b5brtg3/cqt1/3tHj5x09f97R6+cd/VtfT9lfR58/jv526J/5BplP//2prPdWpa78aMQ5c524Dl3HDl1nHbqOH7pOHLpOHrpOHbrOPnSdQ3kQh/IgD+VBHsqDPJQHeSgP8lAe5KE8yEN5kIfyIA/lQR7KgzqUB3UoD+pQHtShPKhDeVCH8qAO5UEdyoM6lAd1KA/2oTzYh/JgH8qDfSgP9qE82IfyYB/Kg30oD/ahPNiH8qAP5UEfyoM+lAd9KA/6UB70oTzoQ3nQh/KgD+VBH8qDOZQHcygP5lAezKE8mEN5MIfyYA7lwRzKgzmUB3MmD+a6Dl3HDl1nHbqOH7pOHLpOHrpOHbrOPnSdPnSdQ3lgh/LADuWBHcoDO5QHdigP7FAe2KE8sEN5YIfywA7lwTqUB+tQHqxDebAO5cE6lAfrUB6sQ3mwDuXBOpQH61Ae+KE88EN54IfywA/lgR/KAz+UB34oD/xQHhzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanziH9ifOof2Jc2h/4hzanzhn9ifmdWZ/4n0dO3Sddeg6fug6ceg6eeg6deg6+9B1+tB1DuWBHcoDO5QHdigP7FAe2KE8sEN5YIfywA7lgR3KAzuUB+tQHqxDebAO5cE6lAfrUB6sQ3mwDuXBOpQH61AerEN54IfywA/lgR/KAz+UB34oD/xQHvihPPBDeeCH8sAP5UEcyoM4lAdxKA/iUB7EoTyIQ3kQh/IgDuVBHMqDOJQHeSgP8lAe5KE8yEN5kIfyIA/lQR7KgzyUB3koD/JQHtShPKhDeVCH8qAO5UEdyoM6lAd1KA/qUB7UoTyoQ3mwD+XBPpQH+1Ae7EN5sA/lwT6UB/tQHuxDebAP5cE+lAd9KA/6UB70oTzoQ3nQh/KgD+VBH8qDPpQHfSgP+lAezKE8mEN5MIfyYA7lwRzKgzmUB3MoD+ZQHsyhPDi0P9EO7U+0Q/sT7dD+RDu0P9GuOHSdPHSdOnSdfeg6feg6h/Lg0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/0Q7tT7RD+xPt0P5EO7Q/cR3an7gO7U9ch/YnrkP7E9cVh66Th65Th66zD12nD13nUB4c2p+4Du1PXIf2J65D+xPXof2J69D+xHVof+I6tD9xHdqfuA7tT1yH9ieuQ/sT16H9ievQ/sR1aH/iOrQ/cR3an7gO7U9ch/YnrkP7E9eh/Ynr0P7EdWh/4jq0P3Ed2p+4Du1PXIf2J65D+xPXof2J69D+xHVof+I6tD9xHdqfuA7tT1yH9ieuQ/sT16H9ievQ/sR1aH/iOrQ/cR3an7gO7U9ch/YnrkP7E9eh/Ynr0P7EdWh/4jq0P3Ed2p+4Du1PXIf2J65D+xPXof2J69D+xHVof+I6tD9xHdqfuA7tT1yH9ieuQ/sT16H9ievQ/sR1aH/iOrQ/cR3an7gO7U9ch/YnrkP7E9eh/Ynr0P7EdWh/4jq0P3Ed2p+4Du1PXIf2J65D+xPXof2J69D+xHVof+I6tD9xHdqfuA7tT1yH9ieuQ/sT16H9ievQ/sR1aH/iOrQ/cR3an7gO7U/0Q/sT/dD+RD+0P9EP7U/0Kw5dJw9dpw5dZx+6Th+6zqE8OLQ/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RD+xP90P5EP7Q/0Q/tT/RX9ie+HTovH/rKLsK3Q+31Q9frh/rrh8brh+brh9brh+7XD339acrXn6Z6/Wmq15+mev1pqtefpnr9aarXn6Z6/Wmq15+mev1pqtefpv3607Rff5r260/Tfv1p2q8/Tfv1p2m//jTt15+m/frTtF9/mvr1p6lff5r69aepX3+a+vWnqV9/mvr1p6lff5r69aepX3+a5vWnaV5/mub1p2lef5rm9adpXn+a5vWnaV5/mub1p2lefpriul4/1F4/dL1+qL9+aLx+aL5+aL1+6H790H790NefJnv9abLXnyZ7/Wmy158me/1pstefJnv9abLXnyZ7/Wmy15+m9frTtF5/mtbrT9N6/Wlarz9N6/Wnab3+NK3Xn6b1+tO0Xn+a/PWnyV9/mj7+2c715bDr7/+8u4u+7MtH7//79QK53s/vD58/Hj5/Pnz+evj8++Hz98Pnn2fP//HPZr7j+e3h8z/8/sbD7288/P7Gw+9vPPz+xsPvbzz8/sbD728+/P7mw+9vPvz+5sPvbz78/ubD728+/P7mw+9vPvz+5sPvbz38/tbD7289/P7Ws+9vfusHM/fPsN//6nBXCZ9cZ5W/jbSq63efvj76ib/7+99L7p8MvX/aln10bpu3U6+v92sx77cQP/8t5M9/C4W/hYm3U898eAv757+F/nluwS//8Bbmp7+Fb/1A9We6Bfv5b2HRb8G93m4h+sNbwH87f34L+G/nz28B/+38+S3gv50/vwX8t/Pnt4D/dv7dLeT+8Bbw386f3sLgv53d33ZEe318C/hvZ1/+yS3wv50/vQX+t/Ont8D/dt777Rbmw794Dv/b+dNb4H87f3oL/G/nT2+B/+38yS3U9SO+F9Z6+4uYLd9/uIW3sRZzLGeOFcyxkjnWj8jOtd/J2ur14VibOVYzxxrkWHYxxzLmWIs5ljPHCuZYyRyLmfLGTHljprwxU34xU34xU34xU34xU34xU34xU34xU34xU34xU34xU96ZKe/MlHdmyjsz5Z2Z8s5MeWemvDNT3pkp78yUD2bKBzPlg5nywUz5YKZ8MFM+mCkfzJQPZsoHM+WTmfLJTPlkpnwyUz6ZKZ/MlE9myicz5ZOZ8slM+WKmfDFTvpgpX8yUL2bKFzPli5nyxUz5YqZ8MVN+M1N+M1N+M1N+M1N+M1N+M1N+M1N+M1N+M1N+M1O+mSnfzJRvZso3M+WbmfLNTPlmpnwzU76ZKd/MlB9myg8z5YeZ8sNM+WGm/DBTfpgpP8yUH2bKDzLl94VM+X0hU35fyJTfFzLl94VM+X0hU34z7etm2tfNtK+baV83075upn3dTPu6mfZ1M+3rZtrXzbSvm2lfN9O+bqZ93Uz7upn2dTPt62ba1820r5tpXzfTvm6mfd1M+7qZ9nUz7etm2tfNtK+baV83075upn3dTPu6mfZ1M+3rZtrXzbSvm2lfN9O+bqZ93Uz7upn2dTPt62ba1820r5tpXzfTvm6mfd1M+7qZ9nUz7etm2tfNtK+baV83075upn3dTPu6mfZ1M+3rZtrXzbSvm2lfN9O+bqZ93Uz7upn2dTPt62ba1820r5tpXzfTvu4fZF+v97G2fThWMcfazLGaOdYgx/pB9vXTsYw51mKO5cyxgjkWM+WbmfLNTPlmpnwzU36YKT/MlB9myg8z5YeZ8sNM+WGm/DBTfpgpP8iU7wuZ8n0hU74vZMr3hUz5vpAp3xcy5ftCpnxfyJTvC5nyfTFT3pgp/7HmfDvq+mycVW/l7P1/v46z9/v54+Hz58Pnr4fPvx8+fz98/nn2/B9jwu94fnv4/Ovh8/+199dtv53f14fnj4fPnw+fvx4+/374/P3w+efZ8/v18Pnt4fOvh8//8PvrD7+//vD76w+/v/7w++sPv7/+8Psbf/H7d/Lr+fdH57eHz78ePr8/fP54+Pz58Pnr4fPvh8/fD59/nj1/Pvz+5sPvbz78/ubD728+/P7mw+9vPvz+5sPvbz78/ubD7289/P7Ww+9vPfz+1sPvbz38/tbD7289/P7Ww+9vPfz+1sPv7374/d0Pv7/74fd3P/z+7off3/1wf7sf7m/3w/1tP9zf9sP9bT/c3/bDP3/pePj8D//8pR/++Us/3P/0w/1PP9z/zMP97Tzc387D/e083N/Ow/3tPNzfzsP97Tz8/s7D7+88+/7OdT18fnv4/Ovh8/vD53/2z59z5cPnr4fPvx8+fz98/mf//jh2PXx+e/j86+Hz+8Pnf/j9tYffX3v4/bWH3197+P21h9/f9fD7ux5+f9fD7+96+P1dD7+/6+H3dz38/q6H39/18Pu7Hn5//eH31x9+f/3h99cffn/94ffXH35//eH31x9+f/3h9/fj/T/pb4eVfb1G1vtR66Wj/KWj4qWj8pWjPt5NsertL5l+fQUC5e9HrZeO8peOipeOypeOqleO+sY/3JbvTbDVle/HzfV+nL943Ie/I7XqbaWrP5oyXzqqXjpqv3RUa0f9/e//Hw=="},{"name":"_deposit","function_type":"Open","is_internal":true,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"owner","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"collateral_asset","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"amount":[{"start":35,"end":36}],"collateral_asset":[{"start":36,"end":37}],"inputs":[{"start":0,"end":34}],"owner":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239]},"bytecode":"","debug_symbols":""},{"name":"borrow_public","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"to","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":35,"end":36}],"inputs":[{"start":0,"end":34}],"to":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238]},"bytecode":"","debug_symbols":""},{"name":"withdraw_public","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"to","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":35,"end":36}],"inputs":[{"start":0,"end":34}],"to":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238]},"bytecode":"","debug_symbols":""}],"events":[],"file_map":{"3":{"source":"struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    // TODO: change this to return a u64 as Noir now\n    // uses u64 for indexing\n    len: Field,\n    empty_value: T,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0, empty_value: initial_value }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> Field {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> Field {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<Len>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<Len>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + (i as Field)] = vec.get_unchecked(i as Field);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = self.empty_value;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}","path":"std/collections/bounded_vec.nr"},"31":{"source":"struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n","path":"std/option.nr"},"52":{"source":"use crate::{\n    abi::PublicContextInputs,\n    messaging::process_l1_to_l2_message,\n    oracle::{\n        arguments,\n        public_call::call_public_function_internal,\n    },\n};\nuse dep::protocol_types::{\n    abis::{\n        global_variables::GlobalVariables,\n        function_selector::FunctionSelector,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n        public_call_stack_item::PublicCallStackItem,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n        side_effect::{SideEffect, SideEffectLinkedToNoteHash},\n    },\n    address::{\n        AztecAddress,\n        EthAddress,\n    },\n    constants::{\n        MAX_NEW_COMMITMENTS_PER_CALL,\n        MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n        MAX_NEW_NULLIFIERS_PER_CALL,\n        MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_DATA_READS_PER_CALL,\n        MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n        MAX_READ_REQUESTS_PER_CALL,\n        NUM_FIELDS_PER_SHA256,\n        RETURN_VALUES_LENGTH,\n    },\n    contrakt::{\n        storage_read::StorageRead,\n        storage_update_request::StorageUpdateRequest,\n    },\n    hash::hash_args,\n    header::Header,\n    utils::reader::Reader,\n};\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n    side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<StorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_reads: BoundedVec<StorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack_hashes: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<SideEffect, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n    prover_address: AztecAddress,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = StorageRead::empty();\n        let empty_storage_update = StorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n            side_effect_counter: inputs.call_context.start_side_effect_counter,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_reads: BoundedVec::new(empty_storage_read),\n            public_call_stack_hashes: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(SideEffect::empty()),\n            new_nullifiers: BoundedVec::new(SideEffectLinkedToNoteHash::empty()),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n\n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            historical_header: inputs.historical_header,\n            prover_address: AztecAddress::zero(),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn coinbase(self) -> EthAddress {\n        self.inputs.public_global_variables.coinbase\n    }\n\n    pub fn fee_recipient(self) -> AztecAddress {\n        self.inputs.public_global_variables.fee_recipient\n    }\n\n    pub fn finish(self) -> PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_reads: self.contract_storage_reads.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            historical_header: self.inputs.historical_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect {\n            value: note_hash,\n            counter: self.side_effect_counter\n        };\n        self.new_commitments.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: 0, // cannot nullify pending notes in public context\n            counter: self.side_effect_counter\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.historical_header.state.l1_to_l2_message_tree.root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address,\n            function_selector,\n            0,\n        )\n    }\n\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/context/public.nr"},"54":{"source":"use crate::{\n    abi::PrivateContextInputs,\n    key::nullifier_key::validate_nullifier_key_against_address,\n    messaging::process_l1_to_l2_message,\n    oracle::{\n        arguments,\n        call_private_function::call_private_function_internal,\n        enqueue_public_function_call::enqueue_public_function_call_internal,\n        context::get_portal_address,\n        header::get_header_at,\n        nullifier_key::{get_nullifier_key_pair, NullifierKeyPair},\n    },\n};\nuse dep::protocol_types::{\n    abis::{\n        call_context::CallContext,\n        function_data::FunctionData,\n        function_selector::FunctionSelector,\n        nullifier_key_validation_request::NullifierKeyValidationRequest,\n        private_call_stack_item::PrivateCallStackItem,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n        public_call_stack_item::PublicCallStackItem,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n        side_effect::{SideEffect, SideEffectLinkedToNoteHash},\n    },\n    address::{\n        AztecAddress,\n        EthAddress,\n    },\n    constants::{\n        MAX_NEW_COMMITMENTS_PER_CALL,\n        MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n        MAX_NEW_NULLIFIERS_PER_CALL,\n        MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_DATA_READS_PER_CALL,\n        MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n        MAX_READ_REQUESTS_PER_CALL,\n        MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL,\n        NUM_FIELDS_PER_SHA256,\n        RETURN_VALUES_LENGTH,\n    },\n    contract_class::ContractClassId,\n    contrakt::{\n        deployment_data::ContractDeploymentData,\n        storage_read::StorageRead,\n        storage_update_request::StorageUpdateRequest,\n    },\n    grumpkin_private_key::GrumpkinPrivateKey,\n    hash::hash_args,\n    header::Header,\n    utils::reader::Reader,\n};\nuse dep::std::option::Option;\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    meta_hwm: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<SideEffect, MAX_READ_REQUESTS_PER_CALL>,\n    nullifier_key_validation_requests: BoundedVec<NullifierKeyValidationRequest, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<SideEffect, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack_hashes : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack_hashes : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n\n    nullifier_key: Option<NullifierKeyPair>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n            side_effect_counter: inputs.call_context.start_side_effect_counter,\n            meta_hwm: 0,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(SideEffect::empty()),\n            nullifier_key_validation_requests: BoundedVec::new(NullifierKeyValidationRequest::empty()),\n\n            new_commitments: BoundedVec::new(SideEffect::empty()),\n            new_nullifiers: BoundedVec::new(SideEffectLinkedToNoteHash::empty()),\n\n            historical_header: inputs.historical_header,\n\n            private_call_stack_hashes: BoundedVec::new(0),\n            public_call_stack_hashes: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n\n            nullifier_key: Option::none(),\n        }\n    }\n\n    pub fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    pub fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            meta_hwm: self.meta_hwm,\n            read_requests: self.read_requests.storage,\n            nullifier_key_validation_requests: self.nullifier_key_validation_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            private_call_stack_hashes: self.private_call_stack_hashes.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            end_side_effect_counter: self.side_effect_counter,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            historical_header: self.historical_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        let side_effect = SideEffect {\n            value: read_request,\n            counter: self.side_effect_counter,\n        };\n        self.read_requests.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect {\n            value: note_hash,\n            counter: self.side_effect_counter,\n        };\n        self.new_commitments.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: nullified_commitment,\n            counter: self.side_effect_counter,\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn request_nullifier_secret_key(&mut self, account: AztecAddress) -> GrumpkinPrivateKey {\n        let key_pair = if self.nullifier_key.is_none() {\n            let key_pair = get_nullifier_key_pair(account);\n            validate_nullifier_key_against_address(account, key_pair.public_key);\n            let request = NullifierKeyValidationRequest { public_key: key_pair.public_key, secret_key: key_pair.secret_key };\n            self.nullifier_key_validation_requests.push(request);\n            self.nullifier_key = Option::some(key_pair);\n            key_pair\n        } else {\n            let key_pair = self.nullifier_key.unwrap_unchecked();\n            // If MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL is larger than 1, need to update the way the key pair is cached.\n            assert(MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL == 1);\n            assert(key_pair.account == account, \"Cannot query nullifier key for more than one account per call\");\n            key_pair\n        };\n        key_pair.secret_key\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field)\n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    )\n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.historical_header.state.l1_to_l2_message_tree.root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let item = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n        );\n\n        assert_eq(item.public_inputs.call_context.start_side_effect_counter, self.side_effect_counter);\n        self.side_effect_counter = item.public_inputs.end_side_effect_counter + 1;\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address));\n        assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n\n        self.private_call_stack_hashes.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter\n        );\n\n        let mut reader = Reader::new(fields);\n\n        // Note: Not using PublicCirclePublicInputs::deserialize here, because everything below args_hash is 0 and\n        // there is no more data in fields because there is only ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE fields!\n        let item = PublicCallStackItem {\n            contract_address:  AztecAddress::from_field(reader.read()),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: reader.read_struct(CallContext::deserialize),\n                args_hash: reader.read(),\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [SideEffect::empty(); MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                historical_header: Header::empty(),\n                prover_address: AztecAddress::zero(),\n            },\n            is_execution_request: true,\n        };\n        reader.finish();\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert_eq(item.public_inputs.call_context.start_side_effect_counter, self.side_effect_counter);\n        // We increment the sideffect counter by one, to account for the call itself being a side effect.\n        self.side_effect_counter = self.side_effect_counter + 1;\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address));\n        assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n\n        self.public_call_stack_hashes.push(item.hash());\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/context/private.nr"},"56":{"source":"use dep::protocol_types::{\n    abis::function_selector::FunctionSelector,\n    address::AztecAddress,\n    constants::RETURN_VALUES_LENGTH,\n};\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(contract_address, function_selector, args_hash)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/public_call.nr"},"57":{"source":"use dep::protocol_types::{\n    abis::{\n        function_selector::FunctionSelector,\n        private_call_stack_item::PrivateCallStackItem,\n    },\n    address::AztecAddress,\n    constants::PRIVATE_CALL_STACK_ITEM_LENGTH,\n};\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _start_side_effect_counter: u32\n) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    start_side_effect_counter: u32\n) -> PrivateCallStackItem {\n    let fields = call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        start_side_effect_counter\n    );\n\n    PrivateCallStackItem::deserialize(fields)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/call_private_function.nr"},"59":{"source":"use dep::protocol_types::{\n    abis::function_selector::FunctionSelector,\n    address::AztecAddress,\n};\n\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE\n// = 2 + 4 + 8\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 14;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter\n    )\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr"},"60":{"source":"#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/arguments.nr"},"63":{"source":"use dep::protocol_types::traits::{Deserialize, Serialize};\n\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_oracle_wrapper(storage_slot)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/storage.nr"},"77":{"source":"use dep::protocol_types::{\n    abis::{\n        call_context::CallContext,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n    },\n    address::{AztecAddress, EthAddress},\n    contrakt::deployment_data::ContractDeploymentData,\n    hash::hash_args,\n    traits::{Hash, Serialize},\n    header::Header,\n};\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl Serialize<2> for PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n    coinbase: EthAddress,\n    fee_recipient: AztecAddress,\n}\n// docs:end:public-global-variables\n\nimpl Serialize<6> for PublicGlobalVariables {\n    fn serialize(self) -> [Field; 6] {\n        [\n            self.chain_id,\n            self.version,\n            self.block_number,\n            self.timestamp,\n            self.coinbase.to_field(),\n            self.fee_recipient.to_field(),\n        ]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    historical_header: Header,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    historical_header: Header,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hash for Hasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/abi.nr"},"78":{"source":"mod private;\nmod public;\nmod avm;\n\nuse public::PublicContext;\nuse private::PrivateContext;\nuse avm::AVMContext;\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/context.nr"},"90":{"source":"use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse dep::std::option::Option;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_state_struct\nstruct PublicState<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_state_struct\n\nimpl<T> Storage<T> for PublicState<T> {}\n\nimpl<T> PublicState<T> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = T::serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/state_vars/public_state.nr"},"93":{"source":"use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse dep::protocol_types::{\n    hash::pedersen_hash,\n    traits::{ToField}\n};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\nstruct Map<K, V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T> Storage<T> for Map<K, T> {}\n\nimpl<K, V> Map<K, V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key.to_field()],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/state_vars/map.nr"},"104":{"source":"use dep::std::cmp::Eq;\nuse crate::{\n    address::AztecAddress,\n    traits::{Empty, Serialize, Deserialize},\n    grumpkin_point::GrumpkinPoint,\n    grumpkin_private_key::GrumpkinPrivateKey,\n};\n\nglobal NULLIFIER_KEY_VALIDATION_REQUEST_SERIALIZED_LEN = 4;\nglobal NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_SERIALIZED_LEN = 5;\n\nstruct NullifierKeyValidationRequest {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\nimpl Eq for NullifierKeyValidationRequest {\n    fn eq(self, request: NullifierKeyValidationRequest) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequest {\n    fn empty() -> Self {\n        NullifierKeyValidationRequest {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_SERIALIZED_LEN> for NullifierKeyValidationRequest {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_SERIALIZED_LEN] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_SERIALIZED_LEN> for NullifierKeyValidationRequest {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_SERIALIZED_LEN]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n        }\n    }\n}\n\nimpl NullifierKeyValidationRequest {\n    pub fn to_context(self, contract_address: AztecAddress) -> NullifierKeyValidationRequestContext {\n        NullifierKeyValidationRequestContext {\n            public_key: self.public_key,\n            secret_key: self.secret_key,\n            contract_address,\n        }\n    }\n}\n\nstruct NullifierKeyValidationRequestContext {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n    contract_address: AztecAddress,\n}\n\nimpl Eq for NullifierKeyValidationRequestContext {\n    fn eq(self, request: NullifierKeyValidationRequestContext) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n            & (request.contract_address.eq(self.contract_address))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequestContext {\n    fn empty() -> Self {\n        NullifierKeyValidationRequestContext {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n            contract_address: AztecAddress::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_SERIALIZED_LEN> for NullifierKeyValidationRequestContext {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_SERIALIZED_LEN] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n            self.contract_address.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_SERIALIZED_LEN> for NullifierKeyValidationRequestContext {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_SERIALIZED_LEN]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n            contract_address: AztecAddress::from_field(fields[4]),\n        }\n    }\n}\n\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/nullifier_key_validation_request.nr"},"105":{"source":"use dep::std::cmp::Eq;\nuse crate::{\n    address::{\n        AztecAddress,\n        EthAddress,\n    },\n    constants::{\n        GENERATOR_INDEX__GLOBAL_VARIABLES,\n        GLOBAL_VARIABLES_LENGTH,\n    },\n    traits::{\n        Deserialize,\n        Empty,\n        Hash,\n        Serialize,\n    },\n};\n\nstruct GlobalVariables {\n    chain_id : Field,\n    version : Field,\n    block_number : Field,\n    timestamp : Field,\n    coinbase : EthAddress,\n    fee_recipient : AztecAddress,\n}\n\nimpl Serialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn serialize(self) -> [Field; GLOBAL_VARIABLES_LENGTH] {\n        [\n            self.chain_id,\n            self.version,\n            self.block_number,\n            self.timestamp,\n            self.coinbase.to_field(),\n            self.fee_recipient.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn deserialize(serialized: [Field; GLOBAL_VARIABLES_LENGTH]) -> GlobalVariables {\n        GlobalVariables {\n            chain_id: serialized[0],\n            version: serialized[1],\n            block_number: serialized[2],\n            timestamp: serialized[3],\n            coinbase: EthAddress::from_field(serialized[4]),\n            fee_recipient: AztecAddress::from_field(serialized[5]),\n        }\n    }\n}\n\nimpl Eq for GlobalVariables {\n    fn eq(self, other : GlobalVariables) -> bool {\n        (self.chain_id == other.chain_id) &\n        (self.version == other.version) &\n        (self.block_number == other.block_number) &\n        (self.timestamp == other.timestamp) &\n        (self.coinbase == other.coinbase) &\n        (self.fee_recipient == other.fee_recipient)\n    }\n}\n\nimpl Empty for GlobalVariables {\n    fn empty() -> Self {\n        Self {\n            chain_id: 0,\n            version: 0,\n            block_number: 0,\n            timestamp: 0,\n            coinbase: EthAddress::empty(),\n            fee_recipient: AztecAddress::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let vars: GlobalVariables = dep::std::unsafe::zeroed();\n    let _serialized = vars.serialize();\n    let _deserialized = GlobalVariables::deserialize(_serialized);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/global_variables.nr"},"106":{"source":"use crate::{\n    abis::{\n        function_data::FunctionData,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    },\n    address::AztecAddress,\n    constants::{\n        GENERATOR_INDEX__CALL_STACK_ITEM,\n        PRIVATE_CALL_STACK_ITEM_LENGTH,\n    },\n    hash::pedersen_hash,\n    traits::{\n        Deserialize,\n        Hash,\n        Serialize,\n    },\n    utils::reader::Reader,\n};\n\nstruct PrivateCallStackItem {\n    // This is the _actual_ contract address relating to where this function's code resides in the\n    // contract tree. Regardless of whether this is a call or delegatecall, this\n    // `contract_address` _does not change_. Amongst other things, it's used as a lookup for\n    // getting the correct code from the tree. There is a separate `storage_contract_address`\n    // within a CallStackItem which varies depending on whether this is a call or delegatecall.\n    contract_address: AztecAddress,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n}\n\nimpl Eq for PrivateCallStackItem {\n    fn eq(self, other: Self) -> bool {\n        self.contract_address.eq(other.contract_address) &\n        self.function_data.eq(other.function_data) &\n        self.public_inputs.eq(other.public_inputs)\n    }\n}\n\nimpl Serialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn serialize(self) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CALL_STACK_ITEM_LENGTH> = BoundedVec::new(0); \n\n        fields.push(self.contract_address.to_field());\n        fields.extend_from_array(self.function_data.serialize());\n        fields.extend_from_array(self.public_inputs.serialize());\n\n        assert_eq(fields.len(), PRIVATE_CALL_STACK_ITEM_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn deserialize(serialized: [Field; PRIVATE_CALL_STACK_ITEM_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n\n        let item = Self {\n            contract_address: reader.read_struct(AztecAddress::deserialize),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: reader.read_struct(PrivateCircuitPublicInputs::deserialize),\n        };\n\n        reader.finish();\n        item\n    }\n}\n\nimpl Hash for PrivateCallStackItem {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let item: PrivateCallStackItem = dep::std::unsafe::zeroed();\n    let serialized = item.serialize();\n    let deserialized = PrivateCallStackItem::deserialize(serialized);\n    assert(item.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let mut item: PrivateCallStackItem = dep::std::unsafe::zeroed();\n    item.function_data.is_private = true;\n    let hash = item.hash();\n\n    // Value from private_call_stack_item.test.ts \"computes empty item hash\" test\n    assert_eq(hash, 0x2442dd521c59987a4291be0fd11198e5a4d87c8bc36cf3b65c5229f61fc37b30);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/private_call_stack_item.nr"},"108":{"source":"use crate::{\n    abis::{\n        call_context::CallContext,\n        nullifier_key_validation_request::NullifierKeyValidationRequest,\n        side_effect::{\n            SideEffect,\n            SideEffectLinkedToNoteHash,\n        },\n    },\n    constants::{\n        MAX_READ_REQUESTS_PER_CALL,\n        MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL,\n        MAX_NEW_COMMITMENTS_PER_CALL,\n        MAX_NEW_NULLIFIERS_PER_CALL,\n        MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n        MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n        NUM_FIELDS_PER_SHA256,\n        RETURN_VALUES_LENGTH,\n        PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n        GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    },\n    contrakt::deployment_data::ContractDeploymentData,\n    header::Header,\n    hash::pedersen_hash,\n    traits::{\n        Deserialize,\n        Hash,\n        Serialize,\n    },\n    utils::reader::Reader,\n};\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n\n    meta_hwm: u32,\n\n    read_requests: [SideEffect; MAX_READ_REQUESTS_PER_CALL],\n    nullifier_key_validation_requests: [NullifierKeyValidationRequest; MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL],\n\n    new_commitments: [SideEffect; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack_hashes: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    end_side_effect_counter : u32,\n\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    contract_deployment_data: ContractDeploymentData,\n\n    // Note: The following 2 values are not redundant to the values in self.historical_header.global_variables because\n    // they can be different in case of a protocol upgrade. In such a situation we could be using header from a block\n    // before the upgrade took place but be using the updated protocol to execute and prove the transaction.\n    chain_id: Field,\n    version: Field,\n}\n\nimpl Eq for PrivateCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.call_context.eq(other.call_context) &\n        self.args_hash.eq(other.args_hash) &\n        (self.return_values == other.return_values) &\n        (self.read_requests == other.read_requests) &\n        (self.nullifier_key_validation_requests == other.nullifier_key_validation_requests) &\n        (self.new_commitments == other.new_commitments) &\n        (self.new_nullifiers == other.new_nullifiers) &\n        (self.private_call_stack_hashes == other.private_call_stack_hashes) &\n        (self.public_call_stack_hashes == other.public_call_stack_hashes) &\n        (self.new_l2_to_l1_msgs == other.new_l2_to_l1_msgs) &\n        (self.end_side_effect_counter == other.end_side_effect_counter) &\n        (self.encrypted_logs_hash == other.encrypted_logs_hash) &\n        (self.unencrypted_logs_hash == other.unencrypted_logs_hash) &\n        (self.encrypted_log_preimages_length == other.encrypted_log_preimages_length) &\n        (self.unencrypted_log_preimages_length == other.unencrypted_log_preimages_length) &\n        self.historical_header.eq(other.historical_header) &\n        self.contract_deployment_data.eq(other.contract_deployment_data) &\n        self.chain_id.eq(other.chain_id) &\n        self.version.eq(other.version)\n    }\n}\n\nimpl Serialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0);\n        fields.extend_from_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.extend_from_array(self.return_values);\n\n        fields.push(self.meta_hwm as Field);\n\n        for i in 0..MAX_READ_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.nullifier_key_validation_requests[i].serialize());\n        }\n        for i in 0..MAX_NEW_COMMITMENTS_PER_CALL{\n            fields.extend_from_array(self.new_commitments[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL{\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        fields.extend_from_array(self.private_call_stack_hashes);\n        fields.extend_from_array(self.public_call_stack_hashes);\n        fields.extend_from_array(self.new_l2_to_l1_msgs);\n        fields.push(self.end_side_effect_counter as Field);\n        fields.extend_from_array(self.encrypted_logs_hash);\n        fields.extend_from_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.extend_from_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        assert_eq(fields.len(), PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = Self {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            return_values: reader.read_array([0; RETURN_VALUES_LENGTH]),\n            meta_hwm: reader.read() as u32,\n            read_requests: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_READ_REQUESTS_PER_CALL]),\n            nullifier_key_validation_requests: reader.read_struct_array(NullifierKeyValidationRequest::deserialize, [NullifierKeyValidationRequest::empty(); MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL]),\n            new_commitments: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_COMMITMENTS_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            private_call_stack_hashes: reader.read_array([0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_array([0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            end_side_effect_counter: reader.read() as u32,\n            encrypted_logs_hash: reader.read_array([0; NUM_FIELDS_PER_SHA256]),\n            unencrypted_logs_hash: reader.read_array([0; NUM_FIELDS_PER_SHA256]),\n            encrypted_log_preimages_length: reader.read(),\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            contract_deployment_data: reader.read_struct(ContractDeploymentData::deserialize),\n            chain_id: reader.read(),\n            version: reader.read(),\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi: PrivateCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let serialized = pcpi.serialize();\n    let deserialized = PrivateCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let inputs: PrivateCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let hash = inputs.hash();\n\n    // Value from private_circuit_public_inputs.test.ts \"computes empty item hash\" test\n    assert_eq(hash, 0x1304e6c42e3c53fc7c918cbf1ea70333b4f214726c0784cf9878cd641967dab1);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/private_circuit_public_inputs.nr"},"110":{"source":"use crate::constants::{GENERATOR_INDEX__SIDE_EFFECT};\nuse dep::std::cmp::Eq;\nuse crate::traits::{Empty, Hash, Serialize, Deserialize};\n\ntrait Ordered {\n    fn counter(self) -> u32;\n}\n\nstruct SideEffect{\n    value: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffect {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffect {\n    fn eq(self, side_effect: SideEffect) -> bool {\n        (self.value == side_effect.value)\n        & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffect {\n    fn empty() -> Self {\n        SideEffect {\n            value: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffect {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize() , GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<2> for SideEffect {\n    fn serialize(self) -> [Field; 2] {\n        [self.value, self.counter as Field]\n    }\n}\n\nimpl Deserialize<2> for SideEffect {\n    fn deserialize(values: [Field; 2]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n        }\n    }\n}\n\nstruct SideEffectLinkedToNoteHash{\n    value: Field,\n    note_hash: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffectLinkedToNoteHash {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffectLinkedToNoteHash {\n    fn eq(self, side_effect: SideEffectLinkedToNoteHash) -> bool {\n        (self.value == side_effect.value)\n            & (self.note_hash == side_effect.note_hash) \n            & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffectLinkedToNoteHash {\n    fn empty() -> Self {\n        SideEffectLinkedToNoteHash {\n            value: 0,\n            note_hash: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffectLinkedToNoteHash {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize(),\n        GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<3> for SideEffectLinkedToNoteHash {\n    fn serialize(self) -> [Field; 3] {\n        [self.value, self.note_hash, self.counter as Field]\n    }\n}\n\nimpl Deserialize<3> for SideEffectLinkedToNoteHash {\n    fn deserialize(values: [Field; 3]) -> Self {\n        Self {\n            value: values[0],\n            note_hash: values[1],\n            counter: values[2] as u32,\n        }\n    }\n}\n\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/side_effect.nr"},"111":{"source":"use crate::{\n    abis::function_selector::FunctionSelector,\n    address::{EthAddress,AztecAddress},\n    constants::{\n        CALL_CONTEXT_LENGTH,\n        GENERATOR_INDEX__CALL_CONTEXT,\n    },\n    hash::pedersen_hash,\n    traits::{\n        Deserialize,\n        Hash,\n        Serialize,\n    },\n};\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : AztecAddress,\n    storage_contract_address : AztecAddress,\n    portal_contract_address : EthAddress,\n\n    function_selector : FunctionSelector,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment : bool,\n\n    start_side_effect_counter : u32,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn assert_is_zero(self) {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/3595)\n        assert(self.msg_sender.to_field() == 0);\n        assert(self.storage_contract_address.to_field() == 0);\n        assert(self.portal_contract_address.to_field() == 0);\n        assert(self.function_selector.to_field() == 0);\n        assert(self.is_delegate_call == false);\n        assert(self.is_static_call == false);\n        assert(self.is_contract_deployment == false);\n        assert(self.start_side_effect_counter == 0);\n    }\n}\n\nimpl Eq for CallContext {\n    fn eq(self, call_context: CallContext) -> bool {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/3595)\n        call_context.msg_sender.eq(self.msg_sender)\n            & call_context.storage_contract_address.eq(self.storage_contract_address)\n            & call_context.portal_contract_address.eq(self.portal_contract_address)\n            & call_context.function_selector.eq(self.function_selector)\n            & (call_context.is_delegate_call == self.is_delegate_call)\n            & (call_context.is_static_call == self.is_static_call)\n            & (call_context.is_contract_deployment == self.is_contract_deployment)\n            & (call_context.start_side_effect_counter == self.start_side_effect_counter)\n    }\n}\n\nimpl Hash for CallContext {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\nimpl Serialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender.to_field(),\n            self.storage_contract_address.to_field(),\n            self.portal_contract_address.to_field(),\n            self.function_selector.to_field(),\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n            self.start_side_effect_counter as Field,\n        ]\n    }\n}\n\nimpl Deserialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn deserialize(serialized: [Field; CALL_CONTEXT_LENGTH]) -> CallContext {\n        CallContext {\n            msg_sender: AztecAddress::from_field(serialized[0]),\n            storage_contract_address: AztecAddress::from_field(serialized[1]),\n            portal_contract_address: EthAddress::from_field(serialized[2]),\n            function_selector: FunctionSelector::from_field(serialized[3]),\n            is_delegate_call: serialized[4] as bool,\n            is_static_call: serialized[5] as bool,\n            is_contract_deployment: serialized[6] as bool,\n            start_side_effect_counter: serialized[7] as u32,\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let context: CallContext = dep::std::unsafe::zeroed();\n    let serialized = context.serialize();\n    let deserialized = CallContext::deserialize(serialized);\n    assert(context.eq(deserialized));\n}\n\n#[test]\nfn hash_smoke() {\n    let context: CallContext = dep::std::unsafe::zeroed();\n    let _hashed = context.hash();\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/call_context.nr"},"112":{"source":"use crate::{\n    abis::{\n        call_context::CallContext,\n        side_effect::{SideEffect, SideEffectLinkedToNoteHash},\n    },\n    address::AztecAddress,\n    constants::{\n        MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n        MAX_NEW_NULLIFIERS_PER_CALL,\n        MAX_NEW_COMMITMENTS_PER_CALL,\n        MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_DATA_READS_PER_CALL,\n        MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n        NUM_FIELDS_PER_SHA256,\n        RETURN_VALUES_LENGTH,\n        GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n        PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    },\n    contrakt::{\n        storage_read::StorageRead,\n        storage_update_request::StorageUpdateRequest,\n    },\n    hash::pedersen_hash,\n    header::Header,\n    traits::{\n        Hash,\n        Serialize,\n        Deserialize,\n    },\n    utils::reader::Reader,\n};\n\nstruct PublicCircuitPublicInputs{\n    call_context: CallContext,\n\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n\n    contract_storage_update_requests: [StorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_reads: [StorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n\n    // todo: add sideeffect ranges for the input to these hashes\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [SideEffect; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n\n    prover_address: AztecAddress,\n}\n\nimpl Eq for PublicCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Serialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.extend_from_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.extend_from_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_reads[i].serialize());\n        }\n        fields.extend_from_array(self.public_call_stack_hashes);\n\n        for i in 0..MAX_NEW_COMMITMENTS_PER_CALL{\n            fields.extend_from_array(self.new_commitments[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL{\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        fields.extend_from_array(self.new_l2_to_l1_msgs);\n        fields.extend_from_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.push(self.prover_address.to_field());\n        fields.storage\n    }\n}\n\nimpl Deserialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = PublicCircuitPublicInputs {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            return_values: reader.read_array([0; RETURN_VALUES_LENGTH]),\n            contract_storage_update_requests: reader.read_struct_array(StorageUpdateRequest::deserialize, [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL]),\n            contract_storage_reads: reader.read_struct_array(StorageRead::deserialize, [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_commitments: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_COMMITMENTS_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_array([0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            unencrypted_logs_hash: reader.read_array([0; NUM_FIELDS_PER_SHA256]),\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            prover_address: reader.read_struct(AztecAddress::deserialize),\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PublicCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let serialized = pcpi.serialize();\n    let deserialized = PublicCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn hash_smoke() {\n    let pcpi: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n    let _hashed = pcpi.hash();\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/public_circuit_public_inputs.nr"},"115":{"source":"use crate::abis::{\n    function_data::FunctionData,\n    public_circuit_public_inputs::PublicCircuitPublicInputs,\n};\nuse crate::address::AztecAddress;\nuse crate::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::traits::Hash;\n\nstruct PublicCallStackItem {\n    contract_address: AztecAddress,\n    public_inputs: PublicCircuitPublicInputs,\n    function_data: FunctionData,\n    // True if this call stack item represents a request to execute a function rather than a\n    // fulfilled execution. Used when enqueuing calls from private to public functions.\n    is_execution_request: bool,\n}\n\nimpl Hash for PublicCallStackItem {\n    fn hash(self) -> Field {\n        let item = if self.is_execution_request {\n            self.as_execution_request()\n        } else {\n            self\n        };\n\n        dep::std::hash::pedersen_hash_with_separator([\n            item.contract_address.to_field(),\n            item.function_data.hash(),\n            item.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\nimpl PublicCallStackItem {\n    fn as_execution_request(self) -> Self {\n        let public_inputs = self.public_inputs;\n        let mut request_public_inputs: PublicCircuitPublicInputs = dep::std::unsafe::zeroed();\n        request_public_inputs.call_context = public_inputs.call_context;\n        request_public_inputs.args_hash = public_inputs.args_hash;\n\n        let call_stack_item = PublicCallStackItem {\n            contract_address: self.contract_address,\n            function_data: self.function_data,\n            is_execution_request: true,\n            public_inputs: request_public_inputs,\n        };\n        call_stack_item\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/public_call_stack_item.nr"},"118":{"source":"use crate::{\n    abis::function_selector::FunctionSelector,\n    constants::{\n        GENERATOR_INDEX__FUNCTION_DATA,\n        FUNCTION_DATA_LENGTH,\n    },\n    hash::pedersen_hash,\n    traits::{\n        Serialize,\n        Hash,\n        Deserialize,\n    },\n};\n\nstruct FunctionData {\n    // First four bytes of the abi encoding \n    // of a function. \n    selector : FunctionSelector,\n    is_internal : bool,\n    is_private : bool,\n    is_constructor : bool,\n}\n\nimpl Eq for FunctionData {\n    fn eq(self, other: Self) -> bool {\n        self.selector.eq(other.selector) &\n        self.is_internal == other.is_internal &\n        self.is_private == other.is_private &\n        self.is_constructor == other.is_constructor\n    }\n}\n\nimpl Serialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    // A field is ~256 bits\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/3057): Since, function data can fit into a Field,\n    // This method will simply return a bit packed Field instead of hashing\n    fn serialize(self) -> [Field; FUNCTION_DATA_LENGTH] {\n        [\n            self.selector.to_field(),\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ]\n    }\n}\n\nimpl Deserialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    fn deserialize(serialized: [Field; FUNCTION_DATA_LENGTH]) -> Self {\n        Self {\n            selector: FunctionSelector::from_field(serialized[0]),\n            is_internal: serialized[1] as bool,\n            is_private: serialized[2] as bool,\n            is_constructor: serialized[3] as bool,\n        }\n    }\n}\n\nimpl Hash for FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let data: FunctionData = dep::std::unsafe::zeroed();\n    let serialized = data.serialize();\n    let deserialized = FunctionData::deserialize(serialized);\n    assert(data.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let data: FunctionData = dep::std::unsafe::zeroed();\n    let hash = data.hash();\n\n    // Value from function_data.test.ts \"computes empty item hash\" test\n    assert_eq(hash, 0x200569267c0f73ac89aaa414239398db9445dd4ad3a8cf37015cd55b8d4c5e8d);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/function_data.nr"},"121":{"source":"use crate::utils::field::field_from_bytes;\nuse dep::std::cmp::Eq;\nuse crate::traits::{Serialize, Deserialize};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n\n    pub fn from_u32(value: u32) -> Self {\n        Self {\n            inner : value,\n        }\n    }\n\n    pub fn from_field(value : Field) -> Self {\n        Self {\n            inner : value as u32,\n        }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/function_selector.nr"},"123":{"source":"use dep::std::cmp::Eq;\n\nstruct AppendOnlyTreeSnapshot {\n    root : Field,\n    next_available_leaf_index : u32\n}\n\nglobal APPEND_ONLY_TREE_SNAPSHOT_LENGTH: Field = 2;\n\nimpl AppendOnlyTreeSnapshot {\n    pub fn serialize(self) -> [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH] {\n        [self.root, self.next_available_leaf_index as Field]\n    }\n\n    pub fn deserialize(serialized: [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH]) -> AppendOnlyTreeSnapshot {\n        AppendOnlyTreeSnapshot {\n            root : serialized[0],\n            next_available_leaf_index : serialized[1] as u32\n        }\n    }\n\n    pub fn zero() -> Self {\n        Self {\n            root: 0,\n            next_available_leaf_index: 0,\n        }\n    }\n}\n\nimpl Eq for AppendOnlyTreeSnapshot {\n    fn eq(self, other : AppendOnlyTreeSnapshot) -> bool {\n        (self.root == other.root) & (self.next_available_leaf_index == other.next_available_leaf_index)\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/append_only_tree_snapshot.nr"},"131":{"source":"use crate::{\n    abis::{\n        append_only_tree_snapshot::{\n            AppendOnlyTreeSnapshot,\n            APPEND_ONLY_TREE_SNAPSHOT_LENGTH,\n        },\n        global_variables::{\n            GlobalVariables,\n            GLOBAL_VARIABLES_LENGTH,\n        },\n    },\n    constants::{\n        GENERATOR_INDEX__BLOCK_HASH,\n        HEADER_LENGTH,\n        NUM_FIELDS_PER_SHA256,\n        STATE_REFERENCE_LENGTH,\n    },\n    hash::pedersen_hash,\n    state_reference::StateReference,\n    traits::{\n        Deserialize,\n        Empty,\n        Hash,\n        Serialize,\n    },\n    utils::{\n        arr_copy_slice,\n    },\n};\n\n// docs:start:header\nstruct Header {\n    last_archive: AppendOnlyTreeSnapshot,\n    body_hash: [Field; NUM_FIELDS_PER_SHA256],\n    state: StateReference,\n    global_variables: GlobalVariables,\n}\n// docs:end:header\n\nimpl Eq for Header {\n    fn eq(self, other: Self) -> bool {\n        self.last_archive.eq(other.last_archive) &\n        (self.body_hash == other.body_hash) &\n        self.state.eq(other.state) &\n        self.global_variables.eq(other.global_variables)\n    }\n}\n\nimpl Serialize<HEADER_LENGTH> for Header {\n    fn serialize(self) -> [Field; HEADER_LENGTH] {\n        let mut fields: BoundedVec<Field, HEADER_LENGTH> = BoundedVec::new(0);\n\n        fields.extend_from_array(self.last_archive.serialize());\n        fields.extend_from_array(self.body_hash);\n        fields.extend_from_array(self.state.serialize());\n        fields.extend_from_array(self.global_variables.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<HEADER_LENGTH> for Header {\n    fn deserialize(serialized: [Field; HEADER_LENGTH]) -> Self {\n        let mut offset = 0;\n\n        let last_archive_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let body_hash = arr_copy_slice(serialized, [0; NUM_FIELDS_PER_SHA256], offset);\n        offset = offset + NUM_FIELDS_PER_SHA256;\n\n        let state_fields = arr_copy_slice(serialized, [0; STATE_REFERENCE_LENGTH], offset);\n        offset = offset + STATE_REFERENCE_LENGTH;\n\n        let global_variables_fields = arr_copy_slice(serialized, [0; GLOBAL_VARIABLES_LENGTH], offset);\n\n        Header {\n            last_archive: AppendOnlyTreeSnapshot::deserialize(last_archive_fields),\n            body_hash,\n            state: StateReference::deserialize(state_fields),\n            global_variables: GlobalVariables::deserialize(global_variables_fields),\n        }\n    }\n}\n\nimpl Empty for Header {\n    fn empty() -> Self {\n        Self {\n            last_archive: AppendOnlyTreeSnapshot::zero(),\n            body_hash: [0; NUM_FIELDS_PER_SHA256],\n            state: StateReference::empty(),\n            global_variables: GlobalVariables::empty(),\n        }\n    }\n}\n\nimpl Hash for Header {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let header: Header = dep::std::unsafe::zeroed();\n    let serialized = header.serialize();\n    let deserialized = Header::deserialize(serialized);\n    assert(header.eq(deserialized));\n}\n\n#[test]\nfn hash_smoke() {\n    let header: Header = dep::std::unsafe::zeroed();\n    let _hashed = header.hash();\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/header.nr"},"134":{"source":"use crate::{\n    constants::{\n        GENERATOR_INDEX__CONTRACT_ADDRESS,\n        GENERATOR_INDEX__PARTIAL_ADDRESS,\n        GENERATOR_INDEX__CONSTRUCTOR\n    },\n    hash::pedersen_hash,\n    contract_class::ContractClassId,\n    utils,\n    grumpkin_point::GrumpkinPoint,\n};\nuse dep::std::cmp::Eq;\nuse crate::traits::{Empty, ToField, Serialize, Deserialize};\nuse crate::type_serialization::{ETH_ADDRESS_SERIALIZED_LEN, AZTEC_ADDRESS_SERIALIZED_LEN};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_SERIALIZED_LEN> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_SERIALIZED_LEN> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> Self {\n        AztecAddress::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self {\n            inner: 0\n        }\n    }\n\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute_from_public_key(pub_key: GrumpkinPoint, contract_class_id: ContractClassId, salt: Field, initialization_hash: Field, portal_contract_address: EthAddress) -> AztecAddress {\n        AztecAddress::compute(PublicKeysHash::compute(pub_key), PartialAddress::compute(contract_class_id, salt, initialization_hash, portal_contract_address))\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            pedersen_hash(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n    \n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs : Self, rhs : Self) -> Self{\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self {\n            inner : result\n        }\n    }\n}\n\nstruct EthAddress{\n    inner : Field\n}\n\nimpl Eq for EthAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for EthAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for EthAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<ETH_ADDRESS_SERIALIZED_LEN> for EthAddress {\n    fn serialize(self: Self) -> [Field; ETH_ADDRESS_SERIALIZED_LEN] {\n        [self.inner]\n    }\n}\n\nimpl Deserialize<ETH_ADDRESS_SERIALIZED_LEN> for EthAddress {\n    fn deserialize(fields: [Field; ETH_ADDRESS_SERIALIZED_LEN]) -> Self {\n        Self {\n            inner: fields[0]\n        }\n    }\n}\n\nimpl EthAddress{\n    pub fn zero() -> Self {\n        Self {\n            inner: 0\n        }\n    }\n\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs : Self, rhs : Self) -> Self{\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self {\n            inner : result\n        }\n    }\n}\n\n// Partial address\nstruct PartialAddress {\n    inner : Field\n}\n\nimpl ToField for PartialAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl PartialAddress {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(contract_class_id: ContractClassId, salt: Field, initialization_hash: Field, portal_contract_address: EthAddress) -> Self {\n        PartialAddress::compute_from_salted_initialization_hash(contract_class_id, SaltedInitializationHash::compute(salt, initialization_hash, portal_contract_address))\n    }\n\n    pub fn compute_from_salted_initialization_hash(contract_class_id: ContractClassId, salted_initialization_hash: SaltedInitializationHash) -> Self {\n        PartialAddress::from_field(\n            pedersen_hash([\n                contract_class_id.to_field(),\n                salted_initialization_hash.to_field()\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n// Salted initialization hash. Used in the computation of a partial address.\nstruct SaltedInitializationHash {\n    inner: Field\n}\n\nimpl ToField for SaltedInitializationHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl SaltedInitializationHash {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(salt : Field, initialization_hash: Field, portal_contract_address: EthAddress) -> Self {\n        SaltedInitializationHash::from_field(\n            pedersen_hash([\n                salt,\n                initialization_hash,\n                portal_contract_address.to_field(),\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n// Public keys hash. Used in the computation of an address.\nstruct PublicKeysHash {\n    inner: Field\n}\n\nimpl ToField for PublicKeysHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<1> for PublicKeysHash {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<1> for PublicKeysHash {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        PublicKeysHash::from_field(fields[0])\n    }\n}\n\nimpl PublicKeysHash {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(public_key: GrumpkinPoint) -> Self {\n        PublicKeysHash::from_field(\n            pedersen_hash([\n                public_key.x,\n                public_key.y,\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\npub fn compute_initialization_hash(selector: Field, args_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        selector,\n        args_hash\n    ],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/address.nr"},"147":{"source":"global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL: Field = 1;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX: Field = 4;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n\nglobal MAX_NEW_COMMITMENTS_PER_TX_META: Field = 8;\nglobal MAX_NEW_NULLIFIERS_PER_TX_META: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX_META: Field = 2;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 40;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\nglobal ARTIFACT_FUNCTION_TREE_MAX_HEIGHT = 5;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 0;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 16;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 6;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 26;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 6;\nglobal PUBLIC_DATA_SUBTREE_HEIGHT: Field = 4;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 14;\nglobal PUBLIC_DATA_SUBTREE_SIBLING_PATH_LENGTH: Field = 36;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\n// sha256 hash is stored in two fields to accommodate all 256-bits of the hash\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 32;\n\n// CONTRACT CLASS CONSTANTS\n// This should be around 8192 (assuming 2**15 instructions packed at 8 bytes each), \n// but it's reduced to speed up build times, otherwise the ClassRegisterer takes over 5 mins to compile.\n// We are not using 1024 so we can squeeze in a few more args to methods that consume packed public bytecode,\n// such as the ClassRegisterer.register, and still land below the 32 * 32 max args limit for hashing.\nglobal MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS: Field = 1000;\n// Bytecode size for private functions is per function, not for the entire contract.\n// Note that private functions bytecode includes a mix of acir and brillig.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_PRIVATE_FUNCTION_IN_FIELDS: Field = 500;\n// Same for unconstrained functions: the size is per function.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_UNCONSTRAINED_FUNCTION_IN_FIELDS: Field = 500;\n// Since we are not yet emitting selectors we'll use this magic value to identify events emitted by the ClassRegisterer.\n// This is just a stopgap until we implement proper selectors.\n// sha224sum 'struct ContractClassRegistered {contract_class_id: ContractClassId, version: Field, artifact_hash: Field, private_functions_root: Field, packed_public_bytecode: [Field; MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS] }'\nglobal REGISTERER_CONTRACT_CLASS_REGISTERED_MAGIC_VALUE = 0x6999d1e02b08a447a463563453cb36919c9dd7150336fc7c4d2b52f8;\n// sha224sum 'struct ClassPrivateFunctionBroadcasted'\nglobal REGISTERER_PRIVATE_FUNCTION_BROADCASTED_MAGIC_VALUE = 0x1b70e95fde0b70adc30496b90a327af6a5e383e028e7a43211a07bcd;\n// sha224sum 'struct ClassUnconstrainedFunctionBroadcasted'\nglobal REGISTERER_UNCONSTRAINED_FUNCTION_BROADCASTED_MAGIC_VALUE = 0xe7af816635466f128568edb04c9fa024f6c87fb9010fdbffa68b3d99;\n\n// CONTRACT INSTANCE CONSTANTS\n// sha224sum 'struct ContractInstanceDeployed'\nglobal DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE = 0x85864497636cf755ae7bde03f267ce01a520981c21c3682aaf82a631;\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue below is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 25;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 8;\nglobal GLOBAL_VARIABLES_LENGTH: Field = 6;\nglobal PARTIAL_STATE_REFERENCE_LENGTH: Field = 8;\nglobal STATE_REFERENCE_LENGTH: Field = 10; // 2 for snap + 8 for partial\nglobal HEADER_LENGTH: Field = 20; // 2 for last_archive, 2 for body hash, 10 for state reference, 6 for global vars \nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we should change this\n// constant as well PRIVATE_CALL_STACK_ITEM_LENGTH\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 207;\nglobal PRIVATE_CALL_STACK_ITEM_LENGTH: Field = 212;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 203;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 1024;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 32;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 52;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\nglobal GENERATOR_INDEX__SIDE_EFFECT = 29;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/constants.nr"},"149":{"source":"pub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/utils/field.nr"},"151":{"source":"struct Reader<N> {\n    data: [Field; N],\n    offset: Field,\n}\n\nimpl<N> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_array<K>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, K>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, K, C>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    } \n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/utils/reader.nr"},"155":{"source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\nglobal U32_SERIALIZED_LEN: Field = 1;\nglobal U8_SERIALIZED_LEN: Field = 1;\nglobal FIELD_SERIALIZED_LEN: Field = 1;\nglobal AZTEC_ADDRESS_SERIALIZED_LEN = 1;\nglobal ETH_ADDRESS_SERIALIZED_LEN = 1;\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/type_serialization.nr"},"156":{"source":"use crate::{\n    abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot,\n    constants::PARTIAL_STATE_REFERENCE_LENGTH,\n    traits::{\n        Deserialize,\n        Empty,\n        Hash,\n        Serialize,\n    },\n};\n\nstruct PartialStateReference {\n    note_hash_tree: AppendOnlyTreeSnapshot,\n    nullifier_tree: AppendOnlyTreeSnapshot,\n    contract_tree: AppendOnlyTreeSnapshot,\n    public_data_tree: AppendOnlyTreeSnapshot,\n}\n\nimpl Eq for PartialStateReference {\n    fn eq(self, other: PartialStateReference) -> bool {\n        self.note_hash_tree.eq(other.note_hash_tree) &\n        self.nullifier_tree.eq(other.nullifier_tree) &\n        self.contract_tree.eq(other.contract_tree) &\n        self.public_data_tree.eq(other.public_data_tree)\n    }\n}\n\nimpl Serialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn serialize(self) -> [Field; PARTIAL_STATE_REFERENCE_LENGTH] {\n        let serialized_note_hash_tree = self.note_hash_tree.serialize();\n        let serialized_nullifier_tree = self.nullifier_tree.serialize();\n        let serialized_contract_tree = self.contract_tree.serialize();\n        let serialized_public_data_tree = self.public_data_tree.serialize();\n\n        [\n            serialized_note_hash_tree[0],\n            serialized_note_hash_tree[1],\n            serialized_nullifier_tree[0],\n            serialized_nullifier_tree[1],\n            serialized_contract_tree[0],\n            serialized_contract_tree[1],\n            serialized_public_data_tree[0],\n            serialized_public_data_tree[1],\n        ]\n    }\n}\n\nimpl Deserialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn deserialize(serialized: [Field; PARTIAL_STATE_REFERENCE_LENGTH]) -> PartialStateReference {\n        PartialStateReference {\n            note_hash_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[0], serialized[1]]\n            ),\n            nullifier_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[2], serialized[3]]\n            ),\n            contract_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[4], serialized[5]]\n            ),\n            public_data_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[6], serialized[7]]\n            ),\n        }\n    }\n}\n\nimpl Empty for PartialStateReference {\n    fn empty() -> Self {\n        Self {\n            note_hash_tree: AppendOnlyTreeSnapshot::zero(),\n            nullifier_tree: AppendOnlyTreeSnapshot::zero(),\n            contract_tree: AppendOnlyTreeSnapshot::zero(),\n            public_data_tree: AppendOnlyTreeSnapshot::zero(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let partial: PartialStateReference = dep::std::unsafe::zeroed();\n    let _serialized = partial.serialize();\n    let _deserialized = PartialStateReference::deserialize(_serialized);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/partial_state_reference.nr"},"157":{"source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\n// Copied over from \"yarn-project/aztec-nr/aztec/src/utils.nr\"\npub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/utils.nr"},"158":{"source":"use crate::address::{AztecAddress, EthAddress};\nuse crate::mocked::VerificationKey;\nuse crate::abis::function_selector::FunctionSelector;\nuse crate::abis::function_leaf_preimage::{ContractClassFunctionLeafPreimage, FunctionLeafPreimage};\nuse crate::contract_class::ContractClassId;\nuse crate::abis::new_contract_data::NewContractData as ContractLeafPreimage;\nuse crate::abis::function_data::FunctionData;\nuse crate::abis::side_effect::{SideEffect};\nuse crate::utils::uint256::U256;\nuse crate::constants::{\n        ARGS_HASH_CHUNK_COUNT,\n        ARGS_HASH_CHUNK_LENGTH,\n        CONTRACT_TREE_HEIGHT, \n        FUNCTION_TREE_HEIGHT, \n        NOTE_HASH_TREE_HEIGHT,\n        NUM_FIELDS_PER_SHA256,\n        GENERATOR_INDEX__SILOED_COMMITMENT,\n        GENERATOR_INDEX__OUTER_NULLIFIER,\n        GENERATOR_INDEX__VK,\n        GENERATOR_INDEX__CONSTRUCTOR,\n        GENERATOR_INDEX__PARTIAL_ADDRESS,\n        GENERATOR_INDEX__CONTRACT_ADDRESS,\n        GENERATOR_INDEX__COMMITMENT_NONCE,\n        GENERATOR_INDEX__UNIQUE_COMMITMENT,\n        GENERATOR_INDEX__FUNCTION_ARGS,\n};\n\nuse dep::std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n// Checks that `value` is a member of a merkle tree with root `root` at position `index`\n// The witness being the `sibling_path`\npub fn assert_check_membership<N>(value: Field, index: Field, sibling_path: [Field; N], root: Field) {\n    let calculated_root = root_from_sibling_path(value, index, sibling_path);\n    assert(calculated_root == root, \"membership check failed\");\n}\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like \n// this because it means we never even need to consider cases where \n// the index is greater than p.\npub fn root_from_sibling_path<N>(leaf: Field, leaf_index: Field, sibling_path: [Field; N]) -> Field {\n    let mut node = leaf;\n    let indices = leaf_index.to_le_bits(N);\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\n// Calculate the function tree root from the sibling path and leaf preimage.\n//\n// TODO: The cpp code passes in components of the FunctionLeafPreimage and then \n// builds it up. We should build it up and then pass the leaf preimage as a parameter.\n// We can then choose to have a general method that takes in anything hashable\n// and deduplicate the logic in `contract_tree_root_from_siblings`\npub fn function_tree_root_from_siblings(\n    selector: FunctionSelector,\n    is_internal: bool,\n    is_private: bool,\n    vk_hash: Field,\n    acir_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = FunctionLeafPreimage { selector, is_internal, is_private, vk_hash, acir_hash };\n\n    let function_leaf = function_leaf_preimage.hash();\n\n    let function_tree_root = root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path);\n\n    function_tree_root\n}\n\n// Calculate the contract tree root from the sibling path and leaf preimage.\npub fn contract_tree_root_from_siblings(\n    contract_class_id: ContractClassId,\n    storage_contract_address: AztecAddress,\n    portal_contract_address: EthAddress,\n    contract_leaf_index: Field,\n    contract_leaf_sibling_path: [Field; CONTRACT_TREE_HEIGHT]\n) -> Field {\n    //TODO(Kev): if we use shorthand syntax here, we get an error as expected,\n    // since variable name is `storage_contract_address` but the span is incorrect.\n    let contract_leaf_preimage = ContractLeafPreimage { contract_address: storage_contract_address, portal_contract_address, contract_class_id };\n\n    let contract_leaf = contract_leaf_preimage.hash();\n\n    let computed_contract_tree_root = root_from_sibling_path(contract_leaf, contract_leaf_index, contract_leaf_sibling_path);\n\n    computed_contract_tree_root\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\npub fn read_request_root_from_siblings(\n    read_request: Field,\n    leaf_index: Field,\n    sibling_path: [Field; NOTE_HASH_TREE_HEIGHT]\n) -> Field {\n    root_from_sibling_path(read_request, leaf_index, sibling_path)\n}\n\npub fn silo_commitment(address: AztecAddress, inner_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        inner_commitment\n    ],\n        GENERATOR_INDEX__SILOED_COMMITMENT\n    )\n}\n\npub fn silo_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\nfn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\n// TODO CPP uses blake2s for this\npub fn compute_new_contract_address_hash(new_contract_address: AztecAddress) -> Field {\n    dep::std::hash::pedersen_hash([new_contract_address.to_field()])\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    rollup_version_id: Field,\n    portal_contract_address: EthAddress,\n    chain_id: Field,\n    content: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new(0);\n\n    let inputs = [\n        contract_address.to_field(), rollup_version_id, portal_contract_address.to_field(), chain_id, content\n    ];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn compute_constructor_hash(\n    function_data: FunctionData,\n    args_hash: Field,\n    constructor_vk_hash: Field\n) -> Field {\n    let function_data_hash = function_data.hash();\n\n    pedersen_hash(\n        [\n        function_data_hash,\n        args_hash,\n        constructor_vk_hash\n    ],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n\n// Computes sha256 hash of 2 input hashes stored in 4 fields.\n// \n// This method is bn254 specific. Two fields is needed in order to \n// encode the sha256 output. It can be abstracted away with any 4-2 hash function.\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\n// Returning a Field would be desirable because then this can be replaced with \n// poseidon without changing the rest of the code\n//\npub fn accumulate_sha256(input: [U128; 4]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n    //\n    // Concatenate 4 u128 bit integers into a byte array.\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..4 {\n        let input_as_bytes = input[offset].to_be_bytes();\n        for byte_index in 0..16 {\n            hash_input_flattened[offset * 16 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    let sha_digest = dep::std::hash::sha256(hash_input_flattened);\n\n    U256::from_bytes32(sha_digest).to_u128_limbs()\n}\n\npub fn compute_logs_hash(\n    previous_log_hash: [Field; 2],\n    current_log_hash: [Field; 2]\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    accumulate_sha256(\n        [\n        U128::from_integer(previous_log_hash[0]),\n        U128::from_integer(previous_log_hash[1]),\n        U128::from_integer(current_log_hash[0]),\n        U128::from_integer(current_log_hash[1])\n    ]\n    )\n}\n\npub fn compute_commitment_nonce(first_nullifier: Field, commitment_index: Field) -> Field {\n    pedersen_hash(\n        [\n        first_nullifier,\n        commitment_index\n    ],\n        GENERATOR_INDEX__COMMITMENT_NONCE\n    )\n}\n\npub fn compute_unique_siloed_commitment(nonce: Field, siloed_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        nonce,\n        siloed_commitment\n    ],\n        GENERATOR_INDEX__UNIQUE_COMMITMENT\n    )\n}\n\npub fn compute_unique_siloed_commitments<N>(\n    first_nullifier: Field,\n    siloed_commitments: [SideEffect; N]\n) -> [SideEffect; N] {\n    let mut unique_siloed_commitments = [SideEffect::empty(); N];\n    for i in 0..N {\n        let siloed_commitment = siloed_commitments[i];\n        if siloed_commitment.value != 0 {\n            let nonce = compute_commitment_nonce(first_nullifier, i);\n            unique_siloed_commitments[i] = SideEffect {\n                value: compute_unique_siloed_commitment(nonce, siloed_commitment.value),\n                counter: siloed_commitment.counter\n                };\n        }\n    }\n    unique_siloed_commitments\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    dep::std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/hash.nr"},"163":{"source":"use crate::{\n    abis::append_only_tree_snapshot::{\n        AppendOnlyTreeSnapshot,\n        APPEND_ONLY_TREE_SNAPSHOT_LENGTH,\n    },\n    constants::{\n        PARTIAL_STATE_REFERENCE_LENGTH,\n        STATE_REFERENCE_LENGTH,\n    },\n    partial_state_reference::PartialStateReference,\n    traits::{\n        Deserialize,\n        Empty,\n        Hash,\n        Serialize,\n    },\n    utils::{\n        arr_copy_slice,\n    },\n};\n\nstruct StateReference {\n    l1_to_l2_message_tree: AppendOnlyTreeSnapshot,\n    partial: PartialStateReference,\n}\n\nimpl Eq for StateReference {\n    fn eq(self, other: StateReference) -> bool {\n        self.l1_to_l2_message_tree.eq(other.l1_to_l2_message_tree) &\n        self.partial.eq(other.partial)\n    }\n}\n\nimpl Serialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn serialize(self) -> [Field; STATE_REFERENCE_LENGTH] {\n        let mut fields: BoundedVec<Field, STATE_REFERENCE_LENGTH> = BoundedVec::new(0);\n\n        fields.extend_from_array(self.l1_to_l2_message_tree.serialize());\n        fields.extend_from_array(self.partial.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn deserialize(serialized: [Field; STATE_REFERENCE_LENGTH]) -> StateReference {\n        let mut offset = 0;\n\n        let l1_to_l2_message_tree_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let partial_fields = arr_copy_slice(serialized, [0; PARTIAL_STATE_REFERENCE_LENGTH], offset);\n\n        StateReference {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::deserialize(l1_to_l2_message_tree_fields),\n            partial: PartialStateReference::deserialize(partial_fields),\n        }\n    }\n}\n\nimpl Empty for StateReference {\n    fn empty() -> Self {\n        Self {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::zero(),\n            partial: PartialStateReference::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let state: StateReference = dep::std::unsafe::zeroed();\n    let _serialized = state.serialize();\n    let _deserialized = StateReference::deserialize(_serialized);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/state_reference.nr"},"165":{"source":"use crate::{\n    constants::{\n        CONTRACT_STORAGE_READ_LENGTH,\n        GENERATOR_INDEX__PUBLIC_DATA_READ,\n    },\n    hash::pedersen_hash,\n    traits::{\n        Deserialize,\n        Hash,\n        Empty,\n        Serialize,\n    },\n};\n\nstruct StorageRead {\n    storage_slot: Field,\n    current_value: Field,\n}\n\nimpl Eq for StorageRead {\n    fn eq(self, other: Self) -> bool {\n        (self.storage_slot == other.storage_slot) & (self.current_value == other.current_value)\n    }\n}\n\nimpl Empty for StorageRead {   \n    fn empty() -> Self {\n        Self {\n            storage_slot: 0,\n            current_value: 0,\n        }\n    }\n}\n\nimpl Hash for StorageRead {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n}\n\nimpl Serialize<CONTRACT_STORAGE_READ_LENGTH> for StorageRead {\n    fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.current_value]\n    }\n}\n\nimpl Deserialize<CONTRACT_STORAGE_READ_LENGTH> for StorageRead {\n    fn deserialize(serialized: [Field; CONTRACT_STORAGE_READ_LENGTH]) -> Self {\n        Self {\n            storage_slot: serialized[0],\n            current_value: serialized[1],\n        }\n    }\n}\n\nimpl StorageRead {\n    pub fn is_empty(self) -> bool {\n        self.storage_slot == 0\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/contrakt/storage_read.nr"},"167":{"source":"use crate::{\n    address::EthAddress,\n    contract_class::ContractClassId,\n    constants::{\n        CONTRACT_DEPLOYMENT_DATA_LENGTH,\n        GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n    },\n    grumpkin_point::GrumpkinPoint,\n    hash::pedersen_hash,\n    traits::{\n        Deserialize,\n        Hash,\n        Serialize,\n    },\n};\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    public_key : GrumpkinPoint,\n    initialization_hash : Field,\n    contract_class_id : ContractClassId,\n    contract_address_salt : Field,\n    portal_contract_address : EthAddress,\n}\n// docs:end:contract-deployment-data\n\nimpl Eq for ContractDeploymentData {\n    fn eq(self, other: Self) -> bool {\n        self.public_key.eq(other.public_key) &\n        self.initialization_hash.eq(other.initialization_hash) &\n        self.contract_class_id.eq(other.contract_class_id) &\n        self.contract_address_salt.eq(other.contract_address_salt) &\n        self.portal_contract_address.eq(other.portal_contract_address)\n    }\n}\n\nimpl Hash for ContractDeploymentData {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\nimpl Serialize<CONTRACT_DEPLOYMENT_DATA_LENGTH> for ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.initialization_hash,\n            self.contract_class_id.to_field(),\n            self.contract_address_salt,\n            self.portal_contract_address.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_DEPLOYMENT_DATA_LENGTH> for ContractDeploymentData {\n    fn deserialize(serialized: [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH]) -> Self {\n        Self {\n            public_key: GrumpkinPoint {\n                x: serialized[0],\n                y: serialized[1],\n            },\n            initialization_hash: serialized[2],\n            contract_class_id: ContractClassId::from_field(serialized[3]),\n            contract_address_salt: serialized[4],\n            portal_contract_address: EthAddress::from_field(serialized[5]),\n        }\n    }\n}\n\nimpl ContractDeploymentData {\n    fn assert_is_zero(self) {\n        self.public_key.assert_is_zero();\n        assert(self.initialization_hash == 0);\n        self.contract_class_id.assert_is_zero();\n        assert(self.contract_address_salt == 0);\n        self.portal_contract_address.assert_is_zero();\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let data: ContractDeploymentData = dep::std::unsafe::zeroed();\n    let serialized = data.serialize();\n    let deserialized = ContractDeploymentData::deserialize(serialized);\n    assert(data.eq(deserialized));\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/contrakt/deployment_data.nr"},"209":{"source":"use dep::aztec::protocol_types::{\n    address::AztecAddress,\n    traits::{Deserialize, Serialize}\n};\n\n// Struct to be used to represent \"totals\". Generally, there should be one per asset.\n// It stores the global values that are shared among all users, such as an accumulator\n// and last time it was updated.\n// In practice, it should also point to an oracle and have more fields related to\n// loan to value ratios and other things, but we did not have enough reads/writes for this.\nstruct Asset {\n    interest_accumulator: u120,\n    last_updated_ts: u120,\n    loan_to_value: u120,\n    oracle: AztecAddress,\n}\n\nglobal ASSET_SERIALIZED_LEN: Field = 4;\n\nimpl Serialize<ASSET_SERIALIZED_LEN> for Asset {\n    fn serialize(asset: Asset) -> [Field; ASSET_SERIALIZED_LEN] {\n        [\n            asset.interest_accumulator as Field,\n            asset.last_updated_ts as Field,\n            asset.loan_to_value as Field,\n            asset.oracle.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<ASSET_SERIALIZED_LEN> for Asset {\n    // Right now we are wasting so many writes. If changing last_updated_ts\n    // we will end up rewriting all of them, wasting writes.\n    fn deserialize(fields: [Field; ASSET_SERIALIZED_LEN]) -> Asset {\n        Asset {\n            interest_accumulator: fields[0] as u120,\n            last_updated_ts: fields[1] as u120,\n            loan_to_value: fields[2] as u120,\n            oracle: AztecAddress::from_field(fields[3])\n        }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/lending_contract/src/asset.nr"},"210":{"source":"use dep::aztec::context::{\n    PrivateContext,\n    PublicContext\n};\n\nuse crate::asset::Asset;\nuse dep::aztec::protocol_types::{\n    abis::function_selector::FunctionSelector,\n    address::AztecAddress,\n    constants::RETURN_VALUES_LENGTH,\n};\n\nstruct PriceFeed {\n  address: AztecAddress,\n}\n\nimpl PriceFeed {\n  pub fn at(address: AztecAddress) -> Self {\n    Self { address }\n  }\n\n  pub fn get_price(self: Self, context: PublicContext) -> u120 {\n    let return_values = context.call_public_function(\n      self.address, \n      FunctionSelector::from_signature(\"get_price(Field)\"),\n      [0]\n    );\n\n    return_values[0] as u120\n  }\n}\n\nstruct Token {\n  address: AztecAddress,\n}\n\nimpl Token {\n  pub fn at(address: AztecAddress) -> Self {\n    Self { address }\n  }\n\n  pub fn transfer_public(self: Self, context: PublicContext, from: AztecAddress, to: AztecAddress, amount: Field, nonce: Field) {\n    context.call_public_function(\n      self.address,\n      FunctionSelector::from_signature(\"transfer_public((Field),(Field),Field,Field)\"),\n      [from.to_field(), to.to_field(), amount, nonce]\n    );\n  }\n\n  pub fn mint_public(self: Self, context: PublicContext, to: AztecAddress, amount: Field) {\n    context.call_public_function(\n      self.address,\n      FunctionSelector::from_signature(\"mint_public((Field),Field)\"),\n      [to.to_field(), amount]\n    );\n  }\n\n  pub fn burn_public(self: Self, context: PublicContext, from: AztecAddress, amount: Field, nonce: Field) {\n    context.call_public_function(\n      self.address,\n      FunctionSelector::from_signature(\"burn_public((Field),Field,Field)\"),\n      [from.to_field(), amount, nonce]\n    );\n  }\n\n  // Private\n  pub fn unshield(self: Self, context: &mut PrivateContext, from: AztecAddress, to: AztecAddress, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      FunctionSelector::from_signature(\"unshield((Field),(Field),Field,Field)\"),\n      [from.to_field(), to.to_field(), amount, nonce]\n    )\n  }\n\n  pub fn burn(self: Self, context: &mut PrivateContext, from: AztecAddress, amount: Field, nonce: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    context.call_private_function(\n      self.address,\n      FunctionSelector::from_signature(\"burn((Field),Field,Field)\"),\n      [from.to_field(), amount, nonce]\n    )\n  }\n}\n\nstruct Lending {\n  address: AztecAddress,\n}\n\nimpl Lending {\n  pub fn at(address: AztecAddress) -> Self {\n    Self { address }\n  }\n\n  pub fn update_accumulator(self: Self, context: PublicContext) -> Asset {\n    let return_values = context.call_public_function_no_args(\n      self.address,\n      FunctionSelector::from_signature(\"update_accumulator()\"),\n    );\n\n    Asset {\n      interest_accumulator: return_values[0] as u120,\n      last_updated_ts: return_values[1] as u120,\n      loan_to_value: return_values[2] as u120,\n      oracle: AztecAddress::from_field(return_values[3]),\n    }\n  }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/lending_contract/src/interfaces.nr"},"211":{"source":"use dep::safe_math::SafeU120;\n\n// Binomial approximation of exponential\n// using lower than desired precisions for everything due to u120 limit\n// (1+x)^n = 1+n*x+[n/2*(n-1)]*x^2+[n/6*(n-1)*(n-2)*x^3]...\n// we are loosing around almost 8 digits of precision from yearly -> daily interest\n// dividing with 31536000 (seconds per year).\n// rate must be measured with higher precision than 10^9.\n// we use e18, and rates >= 4% yearly. Otherwise need more precision\npub fn compute_multiplier(rate_per_second: u120, dt: SafeU120) -> SafeU120 {\n    let base = SafeU120 { value: 1000000000 }; // 1e9\n    let WAD = SafeU120 { value: 1000000000000000000 }; // 1e18\n    let diff = WAD.div(base);\n    let mut res = base;\n    if (!dt.is_zero()) {\n        let exp_minus_one = SafeU120 { value: dt.value - 1 };\n        let exp_minus_two = SafeU120 { value: if (dt.value > 2) { dt.value - 2 } else { 0 } };\n\n        // if rate_per_second < sqrt(WAD), then base_power_two and base_power_three = 0\n        let rate = SafeU120 { value: rate_per_second };\n        let base_power_two = rate.mul_div(rate, WAD);\n        let base_power_three = base_power_two.mul_div(rate, WAD);\n\n        let temp = dt.mul(exp_minus_one);\n        let second_term = temp.mul(base_power_two).div(SafeU120 { value: 2 });\n        let third_term = temp.mul(exp_minus_two).mul(base_power_three).div(SafeU120 { value: 6 });\n\n        // throwing away precision to keep us under u120 :sob:\n        let offset = dt.mul(rate).add(second_term).add(third_term).div(diff);\n\n        res = base.add(offset);\n    }\n    res\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/lending_contract/src/interest_math.nr"},"212":{"source":"use crate::interest_math::compute_multiplier;\nuse dep::safe_math::SafeU120;\nuse dep::aztec::hash::pedersen_hash;\n\n// Utility used to easily get a \"id\" for a private user that sits in the same\n// \"space\" as the public users.\n// It help us to have a single mapping for collateral that have both public and private users.\npub fn compute_identifier(secret: Field, on_behalf_of: Field, self: Field) -> Field {\n    // EITHER secret OR on_behalf_of MUST be set. But not both\n    assert(!((secret == 0) as bool & (on_behalf_of == 0) as bool));\n    if (secret != 0) {\n        pedersen_hash([self, secret], 0)\n    } else {\n        on_behalf_of\n    }\n}\n\npub fn covered_by_collateral(\n    price: u120,\n    loan_to_value: u120,\n    collateral: u120,\n    increase: u120,\n    decrease: u120\n) -> u120 {\n    let price_precision = SafeU120 { value: 1000000000 };\n    let ltv_precision = SafeU120 { value: 10000 };\n\n    let price = SafeU120 { value: price };\n    let collateral = SafeU120 { value: collateral }.add(SafeU120 { value: increase }).sub(SafeU120 { value: decrease });\n    let loan_to_value = SafeU120 { value: loan_to_value };\n\n    let collateral_value = collateral.mul_div(price, price_precision);\n    let debt_covered = collateral_value.mul_div(loan_to_value, ltv_precision);\n\n    debt_covered.value\n}\n\nstruct DebtReturn {\n    debt_value: u120,\n    static_debt: u120,\n}\n\npub fn debt_updates(\n    interest_accumulator: u120,\n    static_debt: u120,\n    increase: u120,\n    decrease: u120\n) -> DebtReturn {\n    assert(interest_accumulator > 0);\n    let accumulator_precision = SafeU120 { value: 1000000000 };\n\n    let static_debt = SafeU120 { value: static_debt };\n    let interest_accumulator = SafeU120 { value: interest_accumulator };\n    let increase = SafeU120 { value: increase };\n    let decrease = SafeU120 { value: decrease };\n\n    let current_debt_value = static_debt.mul_div(interest_accumulator, accumulator_precision);\n    let new_debt_value = current_debt_value.add(increase).sub(decrease);\n\n    // static_debt_increase = amount / accumulator\n    // rounding up new debt.\n    let static_debt_increase = increase.mul_div_up(accumulator_precision, interest_accumulator);\n    // rounding down repayment.\n    let static_debt_decrease = decrease.mul_div(accumulator_precision, interest_accumulator);\n\n    // We need to allow repaying of the entire debt as well etc. This is very prone to failing\n    // if you try to repay exact due to time diff between sim and execution.\n    let new_static_debt = static_debt.add(static_debt_increase).sub(static_debt_decrease);\n\n    DebtReturn { debt_value: new_debt_value.value, static_debt: new_static_debt.value }\n}\n\npub fn debt_value(static_debt: u120, interest_accumulator: u120) -> u120 {\n    let static_debt = SafeU120 { value: static_debt };\n    let accumulator_precision = SafeU120 { value: 1000000000 };\n    let interest_accumulator = SafeU120 { value: interest_accumulator };\n    static_debt.mul_div_up(interest_accumulator, accumulator_precision).value\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/lending_contract/src/helpers.nr"},"213":{"source":"mod asset;\nmod interest_math;\nmod helpers;\nmod interfaces;\n\n// Single asset CDP contract.\n// Shoving re-entries up the ass.\n// TODO's:\n// - Use asset address instead of 0. We only use 0, as there is only one collateral asset :shrug:.\n// - Update accumulator should be for specific asset, just abusing only 1 asset atm.\n// - A way to repay all debt at once\n// - Liquidations\ncontract Lending {\n    use dep::aztec::protocol_types::{\n        abis::function_selector::FunctionSelector,\n        address::AztecAddress,\n    };\n    use dep::safe_math::SafeU120;\n    use dep::std::option::Option;\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context},\n        state_vars::{\n            map::Map,\n            public_state::PublicState,\n        }\n    };\n    use crate::asset::Asset;\n    use crate::interest_math::compute_multiplier;\n    use crate::helpers::{covered_by_collateral, DebtReturn, debt_updates, debt_value, compute_identifier};\n    use crate::interfaces::{Token, Lending, PriceFeed};\n\n    // Storage structure, containing all storage, and specifying what slots they use.\n    struct Storage {\n        collateral_asset: PublicState<AztecAddress>,\n        stable_coin: PublicState<AztecAddress>,\n        assets: Map<Field, PublicState<Asset>>,\n        collateral: Map<AztecAddress, PublicState<Field>>,\n        static_debt: Map<AztecAddress, PublicState<Field>>, // abusing keys very heavily\n    }\n\n    struct Position {\n        collateral: Field,\n        static_debt: Field,\n        debt: Field,\n    }\n\n    // Constructs the contract.\n    #[aztec(private)]\n    fn constructor(\n    ) {}\n\n    #[aztec(public)]\n    fn init(\n        oracle: AztecAddress,\n        loan_to_value: Field,\n        collateral_asset: AztecAddress,\n        stable_coin: AztecAddress\n    ) {\n        let asset_loc = storage.assets.at(0);\n        let asset = asset_loc.read();\n\n        assert(loan_to_value as u120 <= 10000);\n        assert(asset.last_updated_ts == 0);\n        assert(asset.interest_accumulator == 0);\n\n        asset_loc.write(\n            Asset {\n            interest_accumulator: 1000000000,\n            last_updated_ts: context.timestamp() as u120,\n            loan_to_value: loan_to_value as u120,\n            oracle\n        }\n        );\n\n        storage.collateral_asset.write(collateral_asset);\n        storage.stable_coin.write(stable_coin);\n    }\n\n    // Create a position.\n    #[aztec(public)]\n    fn update_accumulator() -> Asset {\n        let asset_loc = storage.assets.at(0);\n        let mut asset = asset_loc.read();\n\n        let dt: SafeU120 = SafeU120 { value: context.timestamp() as u120 }.sub(SafeU120 { value: asset.last_updated_ts });\n\n        // Only update if time has passed.\n        if (!dt.is_zero()) {\n            let precision: SafeU120 = SafeU120 { value: 1000000000 };\n            let rate_per_second: u120 = 1268391679; // 4% yearly rate / (60 * 60 * 24 * 365)\n            // if rate_per_second < sqrt(WAD) our approx is eq precision + rate * dt\n            let multiplier = compute_multiplier(rate_per_second, dt);\n\n            // accumulator *= multiplier, and multiplier >= 1\n            asset.interest_accumulator = SafeU120{value: asset.interest_accumulator}.mul_div(multiplier, precision).value;\n            asset.last_updated_ts = context.timestamp() as u120;\n\n            asset_loc.write(asset);\n        }\n\n        asset\n    }\n\n    #[aztec(private)]\n    fn deposit_private(\n        from: AztecAddress,\n        amount: Field,\n        nonce: Field,\n        secret: Field,\n        on_behalf_of: Field,\n        collateral_asset: AztecAddress\n    ) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender().to_field());\n        let _res = Token::at(collateral_asset).unshield(&mut context, from, context.this_address(), amount, nonce);\n        // _deposit(on_behalf_of, amount, collateral_asset)\n        let selector = FunctionSelector::from_signature(\"_deposit((Field),Field,(Field))\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [on_behalf_of, amount, collateral_asset.to_field()]\n        );\n    }\n\n    #[aztec(public)]\n    fn deposit_public(amount: Field, nonce: Field, on_behalf_of: Field, collateral_asset: AztecAddress) {\n        Token::at(collateral_asset).transfer_public(\n            context,\n            context.msg_sender(),\n            context.this_address(),\n            amount,\n            nonce\n        );\n        let selector = FunctionSelector::from_signature(\"_deposit((Field),Field,(Field))\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [on_behalf_of, amount, collateral_asset.to_field()]\n        );\n    }\n\n    #[aztec(public)]\n    internal fn _deposit(owner: AztecAddress, amount: Field, collateral_asset: AztecAddress) {\n        let _asset = Lending::at(context.this_address()).update_accumulator(context);\n\n        let coll_asset = storage.collateral_asset.read();\n        assert(coll_asset.eq(collateral_asset));\n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral = coll_loc.read();\n        coll_loc.write(collateral + amount);\n    }\n\n    #[aztec(private)]\n    fn withdraw_private(secret: Field, to: AztecAddress, amount: Field) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender().to_field());\n        let selector = FunctionSelector::from_signature(\"_withdraw((Field),(Field),Field)\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [on_behalf_of, to.to_field(), amount]\n        );\n    }\n\n    #[aztec(public)]\n    fn withdraw_public(to: AztecAddress, amount: Field) {\n        let selector = FunctionSelector::from_signature(\"_withdraw((Field),(Field),Field)\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [context.msg_sender().to_field(), to.to_field(), amount]\n        );\n    }\n\n    #[aztec(public)]\n    internal fn _withdraw(owner: AztecAddress, recipient: AztecAddress, amount: Field) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle).get_price(context);\n\n        let coll_loc = storage.collateral.at(owner);\n        let collateral: Field = coll_loc.read();\n\n        let debt_loc = storage.static_debt.at(owner);\n        let static_debt: Field = debt_loc.read();\n\n        // debt_covered will revert if decrease would leave insufficient collateral to cover debt.\n        // or trying to remove more collateral than available\n        let debt_covered = covered_by_collateral(\n            price,\n            asset.loan_to_value,\n            collateral as u120,\n            0,\n            amount as u120\n        );\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt as u120, 0, 0);\n\n        assert(debt_returns.debt_value < debt_covered);\n\n        coll_loc.write(collateral - amount);\n\n        // @todo @LHerskind Support both shielding and transfers (for now just transfer)\n        let collateral_asset = storage.collateral_asset.read();\n        Token::at(collateral_asset).transfer_public(context, context.this_address(), recipient, amount, 0);\n    }\n\n    #[aztec(private)]\n    fn borrow_private(secret: Field, to: AztecAddress, amount: Field) {\n        let on_behalf_of = compute_identifier(secret, 0, context.msg_sender().to_field());\n        let selector = FunctionSelector::from_signature(\"_borrow((Field),(Field),Field)\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [on_behalf_of, to.to_field(), amount]\n        );\n    }\n\n    #[aztec(public)]\n    fn borrow_public(to: AztecAddress, amount: Field) {\n        let selector = FunctionSelector::from_signature(\"_borrow((Field),(Field),Field)\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [context.msg_sender().to_field(), to.to_field(), amount]\n        );\n    }\n\n    #[aztec(public)]\n    internal fn _borrow(owner: AztecAddress, to: AztecAddress, amount: Field) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n        let price = PriceFeed::at(asset.oracle).get_price(context);\n\n        // Fetch collateral and static_debt, compute health of current position\n        let collateral = storage.collateral.at(owner).read() as u120;\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n\n        let debt_covered = covered_by_collateral(price, asset.loan_to_value, collateral, 0, 0);\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, amount as u120, 0);\n\n        assert(debt_returns.debt_value < debt_covered);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n\n        // @todo @LHerskind Need to support both private and public minting.\n        let stable_coin = storage.stable_coin.read();\n        Token::at(stable_coin).mint_public(context, to, amount);\n    }\n\n    #[aztec(private)]\n    fn repay_private(\n        from: AztecAddress,\n        amount: Field,\n        nonce: Field,\n        secret: Field,\n        on_behalf_of: Field,\n        stable_coin: AztecAddress\n    ) {\n        let on_behalf_of = compute_identifier(secret, on_behalf_of, context.msg_sender().to_field());\n        let _res = Token::at(stable_coin).burn(&mut context, from, amount, nonce);\n        let selector = FunctionSelector::from_signature(\"_repay((Field),Field,(Field))\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [on_behalf_of, amount, stable_coin.to_field()]\n        );\n    }\n\n    #[aztec(public)]\n    fn repay_public(amount: Field, nonce: Field, owner: AztecAddress, stable_coin: AztecAddress) {\n        Token::at(stable_coin).burn_public(context, context.msg_sender(), amount, nonce);\n        let selector = FunctionSelector::from_signature(\"_repay((Field),Field,(Field))\");\n        context.call_public_function(\n            context.this_address(),\n            selector,\n            [owner.to_field(), amount, stable_coin.to_field()]\n        );\n    }\n\n    #[aztec(public)]\n    internal fn _repay(owner: AztecAddress, amount: Field, stable_coin: AztecAddress) {\n        let asset = Lending::at(context.this_address()).update_accumulator(context);\n\n        // To ensure that private is using the correct token.\n        assert(stable_coin.eq(storage.stable_coin.read()));\n\n        let static_debt = storage.static_debt.at(owner).read() as u120;\n        let debt_returns = debt_updates(asset.interest_accumulator, static_debt, 0, amount as u120);\n\n        storage.static_debt.at(owner).write(debt_returns.static_debt as Field);\n    }\n\n    unconstrained fn get_asset(assetId: Field) -> pub Asset {\n        storage.assets.at(assetId).read()\n    }\n\n    unconstrained fn get_position(owner: AztecAddress) -> pub Position {\n        let collateral = storage.collateral.at(owner).read();\n        let static_debt = storage.static_debt.at(owner).read();\n        let asset = storage.assets.at(0).read();\n        let debt = debt_value(static_debt as u120, asset.interest_accumulator as u120) as Field;\n        Position { collateral, static_debt, debt }\n    }\n\n    unconstrained fn get_assets() -> pub [AztecAddress; 2] {\n        [storage.collateral_asset.read(), storage.stable_coin.read()]\n    }\n\n    // TODO: remove this placeholder once https://github.com/AztecProtocol/aztec-packages/issues/2918 is implemented\n    unconstrained fn compute_note_hash_and_nullifier(\n        contract_address: AztecAddress,\n        nonce: Field,\n        storage_slot: Field,\n        serialized_note: [Field; 0]\n    ) -> pub [Field; 4] {\n        [0, 0, 0, 0]\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/lending_contract/src/main.nr"},"215":{"source":"use dep::std::cmp::Eq;\nuse dep::aztec::protocol_types::traits::{Deserialize, Serialize};\n\nstruct SafeU120 {\n    value: u120,\n}\n\nimpl Eq for SafeU120 {\n    fn eq(\n        self: Self,\n        other: Self\n    ) -> bool {\n        self.value == other.value\n    }\n}\n\nglobal SAFE_U120_SERIALIZED_LEN: Field = 1;\n\nimpl Serialize<SAFE_U120_SERIALIZED_LEN> for SafeU120 {\n    fn serialize(value: SafeU120) -> [Field; SAFE_U120_SERIALIZED_LEN] {\n        [value.value as Field]\n    }\n}\n\nimpl Deserialize<SAFE_U120_SERIALIZED_LEN> for SafeU120 {\n    // This is safe when reading from storage IF only correct safeu120 was written to storage\n    fn deserialize(fields: [Field; SAFE_U120_SERIALIZED_LEN]) -> SafeU120 {\n        SafeU120 { value: fields[0] as u120 }\n    }\n}\n\nimpl SafeU120 {\n    pub fn min() -> Self {\n        Self {\n            value: 0\n        }\n    }\n\n    pub fn max() -> Self {\n        Self {\n            value: 0xffffffffffffffffffffffffffffff\n        }\n    }\n\n    pub fn new(\n        value: Field,\n    ) -> Self {\n        // Check that it actually will fit. Spending a lot of constraints here :grimacing:\n        let bytes = value.to_be_bytes(32);\n        for i in 0..17 {\n            assert(bytes[i] == 0, \"Value too large for SafeU120\");\n        }\n        Self {\n            value: value as u120\n        }\n    }\n\n    pub fn is_zero(\n        self: Self,\n    ) -> bool {\n        self.value == 0\n    }\n\n    pub fn lt(self: Self, other: Self) -> bool {\n        self.value < other.value\n    }\n\n    pub fn le(self: Self, other: Self) -> bool {\n        self.value <= other.value\n    }\n\n    pub fn gt(self: Self, other: Self) -> bool {\n        self.value > other.value\n    }\n\n    pub fn ge(self: Self, other: Self) -> bool {\n        self.value >= other.value\n    }\n\n    pub fn sub(\n      self: Self,\n      b: Self,\n    ) -> Self {\n        assert(self.value >= b.value, \"Underflow\");\n        Self {\n            value: self.value - b.value\n        }\n    }\n\n    pub fn add(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value + b.value;\n        assert(c >= self.value, \"Overflow\");\n        Self {\n            value: c\n        }\n    }\n\n    pub fn mul(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        let c: u120 = self.value * b.value;\n        if !b.is_zero() {\n            assert(c / b.value == self.value, \"Overflow\");\n        }\n        Self {\n            value: c\n        }\n    }\n\n    pub fn div(\n        self: Self,\n        b: Self,\n    ) -> Self {\n        assert(!b.is_zero(), \"Divide by zero\");\n        Self {\n            value: self.value / b.value\n        }\n    }\n\n    pub fn mul_div(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        self.mul(b).div(divisor)\n    }\n\n    pub fn mul_div_up(\n        self: Self,\n        b: Self,\n        divisor: Self\n    ) -> Self {\n        let c = self.mul(b);\n        assert(!divisor.is_zero(), \"Divide by zero\");\n        let adder = ((self.value * b.value % divisor.value) as u120 > 0) as u120;\n        c.div(divisor).add(Self {value: adder})\n    }\n\n    // todo: implement mul_div with 240 bit intermediate values.\n}\n\n#[test]\nfn test_init() {\n    let a = SafeU120::new(1);\n    assert(a.value == 1);\n}\n\n#[test]\nfn test_init_max() {\n    let a = SafeU120::max();\n    assert(a.value == 0xffffffffffffffffffffffffffffff);\n}\n\n#[test]\nfn test_init_min() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n}\n\n#[test]\nfn test_is_zero() {\n    let a = SafeU120::min();\n    assert(a.value == 0);\n    assert(a.is_zero() == true);\n}\n\n#[test]\nfn test_eq() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(1);\n    assert(a.eq(b));\n}\n\n#[test]\nfn test_lt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(a.lt(b));\n    assert(b.lt(a) == false);\n}\n\n#[test]\nfn test_le() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.le(b));\n    assert(a.le(c));\n    assert(c.le(a) == false);\n}\n\n#[test]\nfn test_gt() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    assert(b.gt(a));\n    assert(a.gt(b) == false);\n}\n\n#[test]\nfn test_ge() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(5);\n    assert(a.ge(b));\n    assert(a.ge(c) == false);\n    assert(c.ge(a));\n}\n\n#[test(should_fail)]\nfn test_init_too_large() {\n    let b = SafeU120::max().value as Field + 1; // max + 1\n    let _a = SafeU120::new(b);\n}\n\n#[test]\nfn test_add() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let c = SafeU120::add(a, b);\n    assert(c.value == 3);\n}\n\n#[test(should_fail)]\nfn test_add_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(1);\n    let _c = SafeU120::add(a, b);\n}\n\n#[test]\nfn test_sub() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(1);\n    let c = SafeU120::sub(a, b);\n    assert(c.value == 1);\n}\n\n#[test(should_fail)]\nfn test_sub_underflow() {\n    let a = SafeU120::new(1);\n    let b = SafeU120::new(2);\n    let _c = SafeU120::sub(a, b);\n}\n\n#[test]\nfn test_mul() {\n    let a = SafeU120::new(2);\n    let b = SafeU120::new(3);\n    let c = SafeU120::mul(a, b);\n    assert(c.value == 6);\n}\n\n#[test(should_fail)]\nfn test_mul_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let _c = SafeU120::mul(a, b);\n}\n\n#[test]\nfn test_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::div(a, b);\n    assert(c.value == 2);\n}\n\n#[test(should_fail)]\nfn test_div_by_zero() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(0);\n    let _c = SafeU120::div(a, b);\n}\n\n#[test]\nfn test_mul_div() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test(should_fail)]\nfn test_mul_div_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(4);\n    let _d = SafeU120::mul_div(a, b, c);\n}\n\n#[test]\nfn test_mul_div_up_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(5);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 4);\n}\n\n#[test]\nfn test_mul_div_up_non_rounding() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(2);\n    let d = SafeU120::mul_div_up(a, b, c);\n    assert(d.value == 9);\n}\n\n#[test(should_fail)]\nfn test_mul_div_up_ghost_overflow() {\n    let a = SafeU120::max();\n    let b = SafeU120::new(2);\n    let c = SafeU120::new(9);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n\n// It should not be possible for us to overflow `mul_div_up` through the adder, since that require the divisor to be 1\n// since we otherwise would not be at the max value. If divisor is 1, adder is 0.\n#[test(should_fail)]\nfn test_mul_div_up_zero_divisor() {\n    let a = SafeU120::new(6);\n    let b = SafeU120::new(3);\n    let c = SafeU120::new(0);\n    let _d = SafeU120::mul_div_up(a, b, c);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/safe-math/src/safe_u120.nr"}}}