{"noir_version":"0.23.0+f1b91511124df89bbe9e059b87536901bdf0d6f3","name":"Child","functions":[{"name":"value","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"input","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"input":[{"start":36,"end":37}],"inputs":[{"start":0,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247]},"bytecode":"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","debug_symbols":"1c7LCsIwEIXhd5l1Fp7JZZK8irgIWqFQUjHZhby7Cq0idicIroaBj8PfaJqPqY5zLhQbART3jcol5cdbarpWijtFQz7db1d0HqeBIkS6+nAIIgtFCOGpNzFrzwtmo18Y1m9NwzizbsOyf/MHReC/Lde/K7dwa7kV91157zc="},{"name":"setValueTwiceWithNestedFirst","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236]},"bytecode":"","debug_symbols":"3b3brmXJdV37L/VMHMwR4xIR+pUDPwjn2IABQzYsvQn8dy/atXeS4KaKfTF3YzefVEituWIkY46eVT1by/z3X/7bf////vnf/ut//5d//eWf/v2X5/+Jm7/80//777/86//453/5w4/867/98//8t1/+6fndL//5X/7/1//9/e9++S//9b/951/+Kfb+/X/63f9+ouQnWn5i5Ce2/MSRn7jiE+t55CdCfmLJT6T8RMlPtPzEyE9s+YkjPyHfech3HvKdh3znId95yHce8n2EfB8h3Mfv/uxzq9b+9aOrej4/3evXr1/P9359/C1fn68k/fWjr3/86uvX9369/A4t+R1acm4sOTeW/J4u+T1dcm6knBsp50bKuZHynad85ynfecp3nvKdp3znKd95yXde8p2XfOcl33nJd17ynZd85yXfecl3XvKdt3znLd95y3fe8p23fOct33nLd97ynbd85y3f+ch3PvKdj3znI9/5yHc+8p2PfOcj3/nIdz7ynW/5zrd851u+8y3f+ZbvfMt3vuU73/Kdb/nOt3znR77zI9/5ke/8yHd+5Ds/8p0f+c6PfOdHvvMj3/mV7/zKd37lO5d7vSX3ekvu9Zbc6y2511tyr7fkXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi/lXi9DvvOQ71zuDlPuDjPkO1/ynS/5zpd853IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPl3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IPV3IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IP13IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPN3IPt+Uebss93JZ7uC33cFvu4bbcw225h9tyD7flHm7LPdyWe7gt93Bb7uG23MNtuYfbcg+35R5uyz3clnu4LfdwW+7httzDbbmH23IPt+Uebss93JZ7uC33cFvu4bbcw225h9tyD7flHm7LPdyWe7gt93Bb7uG23MNtuYfbcg+35R5uyz3clnu4LfdwW+7httzDbbmH23IPt+Uebss93JZ7uC33cFvu4bbcw225h9tyD7flHm7LPdyWe7gt93Bb7uG23MNtuYfbcg+35R5uyz3clnu4LfdwW+7httzDbbmH23IPt+Uebss93JZ7uC33cFvu4bbcw225h9tyD7flHm7LPdyWe7gt93Bb7uG23MNtuYfbcg+35R5uyz3clnu4LfdwW+7httzDbbmH23IPt+Uebss93JZ7uC33cEfu4Y7cwx25hztyD3fkHu7IPdyRe7gj93BH7uGO3MMduYc7cg935B7uyD3ckXu4I/dwR+7hjtzDHbmHO3IPd+Qe7sg93JF7uCP3cEfu4Y7cwx25hztyD3fkHu7IPdyRe7gj93BH7uGO3MMduYc7cg935B7uyD3ckXu4I/dwR+7hjtzDHbmHO3IPd+Qe7sg93JF7uCP3cEfu4Y7cwx25hztyD3fkHu7IPdyRe7gj93BH7uGO3MMduYc7cg935B7uyD3ckXu4I/dwR+7hjtzDHbmHO3IPd+Qe7sg93JF7uCP3cEfu4Y7cwx25hztyD3fkHu7IPdyRe7gj93BH7uGO3MMduYc7cg935B7uyD3ckXu4I/dwR+7hjtzDHbmHO3IPd+Qe7sg93JF7uCP3cEfu4Y7cwx25hztyD3flHu7KPdyVe7gr93BX7uGu3MNduYe7cg935R7uyj3clXu4K/dwV+7hrtzDXbmHu3IPd+Ue7so93JV7uCv3cFfu4a7cw125h7tyD3flHu7KPdyVe7gr93BX7uGu3MNduYe7cg935R7uyj3clXu4K/dwV+7hrtzDXbmHu3IPd+Ue7so93JV7uCv3cFfu4a7cw125h7tyD3flHu7KPdyVe7gr93BX7uGu3MNduYe7cg935R7uyj3clXu4K/dwV+7hrtzDXbmHu3IPd+Ue7so93JV7uCv3cFfu4a7cw125h7tyD3flHu7KPdyVe7gr93BX7uGu3MNduYe7cg935R7uyj3clXu4K/dwV+7hrtzDXbmHu3IPd+Ue7so93JV7uCv3cFfu4a7cw125h7tyD3flHu7KPdyVe7gr93DxyEXc65HQH1n6I6k/UvojrT8y+iNbf+Toj+i3H/rth377od9+6Lcf+u2Hfvuh337otx/67Yd++0u//aXf/tJvf+m3v/TbX/rtL/32l377S7/9pd9+6ref+u2nfvup337qt5/67ad++6nffuq3n/rtl377pd9+6bdf+u2Xfvul337pt1/67Zd++6Xffuu33/rtt377rd9+67ff+u23fvut337rt9/67Y9++6Pf/ui3P/rtj377o9/+6Lc/+u2Pfvuj3/7Wb3/rt7/129/67W/99rd++1u//a3f/tZvf+u3f/TbP/rtH/32j377R7/9o9/+0W//6Ld/9Ns/+u1f/favfvtXv/2r3/7Vb//qt3/127/67V/99vWuL/SuL/SuL/SuL/Su7/VvvfojrT8y+iNbf+Toj+i3r3d9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9oXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXt/Sub+ld39K7vqV3fUvv+pbe9S2961t617f0rm/pXd/Su76ld31L7/qW3vUtvetbete39K5v6V3f0ru+pXd9S+/6lt71Lb3rW3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rXl3rX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"},{"name":"pubGetValue","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"base_value","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"base_value":[{"start":34,"end":35}],"inputs":[{"start":0,"end":34}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237]},"bytecode":"","debug_symbols":""},{"name":"pubSetValue","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"new_value","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}],"new_value":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237]},"bytecode":"","debug_symbols":""},{"name":"pubIncValue","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"new_value","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}],"new_value":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237]},"bytecode":"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","debug_symbols":""},{"name":"setValueTwiceWithNestedLast","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236]},"bytecode":"","debug_symbols":""},{"name":"valueInternal","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"input","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"input":[{"start":36,"end":37}],"inputs":[{"start":0,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247]},"bytecode":"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","debug_symbols":"1c5NCsIwEIbhu8w6C79p/iZXkS6KViiUVmx3IXdXIVGKAReC0NUw8MzwRhrnU7cO87RQiARQOEZart30XJe1u60UDor66fyYSdFlGHsKcC6pDwdxLlOIyEtXMTeeM2bdvDGMr72Gtrr8hmG/8a0i8G7Lm/+VG9hSbpz9uVzXysHGlysWfOn3gozF2I1tU7oD"},{"name":"check_sender","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"}],"param_witnesses":{"call_context":[{"start":0,"end":8}]},"return_type":null,"return_witnesses":[]},"bytecode":"H4sIAAAAAAAA/61QSQ7CMAxMdx7BIU+Im6R1bvyBFzStKzhQpDb8nwqMFOVKRxqN5+CRPY0QohZfZDvzncVOGfmS55+vEl8nvuH9GDnrhVX9B4iztOqMob4l0DCo1nm0yljfISBYtFOLWhMa7J13vXJgNMFsnZ45LDvurk9WwVmn6P+425I7rLmrFFk0V6xn1istE63y8dqC9CTD7b7J8bmEdRiDeAMCThCpzQEAAA==","debug_symbols":"AUEAvv97ImxvY2F0aW9ucyI6eyI1IjpbeyJzcGFuIjp7InN0YXJ0Ijo4OTEsImVuZCI6OTU2fSwiZmlsZSI6MTc3fV19fQ=="},{"name":"pubIncValueInternal","function_type":"Open","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::abi::PublicGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},"visibility":"private"},{"name":"new_value","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":34}],"new_value":[{"start":34,"end":35}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"old_value","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]},"visibility":"public"},"return_witnesses":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237]},"bytecode":"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","debug_symbols":""},{"name":"compute_note_hash_and_nullifier","function_type":"Unconstrained","is_internal":false,"abi":{"parameters":[{"name":"contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":0,"type":{"kind":"field"}},"visibility":"private"}],"param_witnesses":{"contract_address":[{"start":0,"end":1}],"nonce":[{"start":1,"end":2}],"serialized_note":[],"storage_slot":[{"start":2,"end":3}]},"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"},"return_witnesses":[3,4,5,6]},"bytecode":"H4sIAAAAAAAA/+2W2w7CIAyGC2MHmIl3ertHmIfEW9//oYygVH6ru7JcmKwJEQr8fO26SUdEhp7WxObo03j+mn/n3+ygqDXX5DR/wmkVOc0XTgN1wTXSxtbFdsz+HvZNWjzn+ZLO4cMbercQm+WBKz5eZ8DH/NYV3laf99TnvKjqxmecNPeQa1eJXT0nUbmnUh+Kuo9aHbJWl7X5nBZy5bkeSPfbMICugXPY30B/R8U89C1wJhup1I9f2OPEng3Md1/inpTjlu96LxhdjiPZNuXBFX9FtnMQbMmMGE/Q98AzVMhVpTjnpBuy1o10/6NGyI98rhuYD7BmrJA7fJ9Ym8fIuPKuvMjgBWuA+QF8VsSC9wZcL78fqgHxgXixMQCXbOni9bI7IvTp/cILAAA=","debug_symbols":"q1bKyU9OLMnMzytWsqqurQUA"},{"name":"constructor","function_type":"Secret","is_internal":false,"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::abi::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::abi::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}}]},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":36}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"is_contract_deployment","type":{"kind":"boolean"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"return_values","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"meta_hwm","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_commitments","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"unencrypted_logs_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"body_hash","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"contract_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"field"}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]}},{"name":"contract_deployment_data","type":{"kind":"struct","path":"aztec::protocol_types::contrakt::deployment_data::ContractDeploymentData","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"initialization_hash","type":{"kind":"field"}},{"name":"contract_class_id","type":{"kind":"struct","path":"aztec::protocol_types::contract_class::ContractClassId","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"contract_address_salt","type":{"kind":"field"}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243]},"bytecode":"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","debug_symbols":"q1bKyU9OLMnMzytWsqqurQUA"}],"events":[],"file_map":{"3":{"source":"struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    // TODO: change this to return a u64 as Noir now\n    // uses u64 for indexing\n    len: Field,\n    empty_value: T,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0, empty_value: initial_value }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> Field {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> Field {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<Len>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<Len>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + (i as Field)] = vec.get_unchecked(i as Field);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = self.empty_value;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}","path":"std/collections/bounded_vec.nr"},"31":{"source":"struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n","path":"std/option.nr"},"43":{"source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse dep::protocol_types::{\n    address::AztecAddress,\n    grumpkin_point::GrumpkinPoint,\n};\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    encryption_pub_key: GrumpkinPoint,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/log.nr"},"52":{"source":"use crate::{\n    abi::PublicContextInputs,\n    messaging::process_l1_to_l2_message,\n    oracle::{\n        arguments,\n        public_call::call_public_function_internal,\n    },\n};\nuse dep::protocol_types::{\n    abis::{\n        global_variables::GlobalVariables,\n        function_selector::FunctionSelector,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n        public_call_stack_item::PublicCallStackItem,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n        side_effect::{SideEffect, SideEffectLinkedToNoteHash},\n    },\n    address::{\n        AztecAddress,\n        EthAddress,\n    },\n    constants::{\n        MAX_NEW_COMMITMENTS_PER_CALL,\n        MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n        MAX_NEW_NULLIFIERS_PER_CALL,\n        MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n        MAX_PUBLIC_DATA_READS_PER_CALL,\n        MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n        MAX_READ_REQUESTS_PER_CALL,\n        NUM_FIELDS_PER_SHA256,\n        RETURN_VALUES_LENGTH,\n    },\n    contrakt::{\n        storage_read::StorageRead,\n        storage_update_request::StorageUpdateRequest,\n    },\n    hash::hash_args,\n    header::Header,\n    utils::reader::Reader,\n};\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n    side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<StorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_reads: BoundedVec<StorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack_hashes: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<SideEffect, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n    prover_address: AztecAddress,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = StorageRead::empty();\n        let empty_storage_update = StorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n            side_effect_counter: inputs.call_context.start_side_effect_counter,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_reads: BoundedVec::new(empty_storage_read),\n            public_call_stack_hashes: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(SideEffect::empty()),\n            new_nullifiers: BoundedVec::new(SideEffectLinkedToNoteHash::empty()),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n\n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            historical_header: inputs.historical_header,\n            prover_address: AztecAddress::zero(),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn coinbase(self) -> EthAddress {\n        self.inputs.public_global_variables.coinbase\n    }\n\n    pub fn fee_recipient(self) -> AztecAddress {\n        self.inputs.public_global_variables.fee_recipient\n    }\n\n    pub fn finish(self) -> PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_reads: self.contract_storage_reads.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            historical_header: self.inputs.historical_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect {\n            value: note_hash,\n            counter: self.side_effect_counter\n        };\n        self.new_commitments.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: 0, // cannot nullify pending notes in public context\n            counter: self.side_effect_counter\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.historical_header.state.l1_to_l2_message_tree.root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address,\n            function_selector,\n            0,\n        )\n    }\n\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/context/public.nr"},"56":{"source":"use dep::protocol_types::{\n    abis::function_selector::FunctionSelector,\n    address::AztecAddress,\n    constants::RETURN_VALUES_LENGTH,\n};\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(contract_address, function_selector, args_hash)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/public_call.nr"},"60":{"source":"#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/arguments.nr"},"63":{"source":"use dep::protocol_types::traits::{Deserialize, Serialize};\n\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_oracle_wrapper(storage_slot)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/storage.nr"},"65":{"source":"use dep::protocol_types::{\n    address::AztecAddress,\n    constants::NUM_FIELDS_PER_SHA256,\n    grumpkin_point::GrumpkinPoint,\n};\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _encryption_pub_key: GrumpkinPoint,\n    _preimage: [Field; N]\n) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    encryption_pub_key: GrumpkinPoint,\n    preimage: [Field; N]\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(contract_address, storage_slot, encryption_pub_key, preimage), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: AztecAddress, _event_selector: Field, _message: T) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(\n    contract_address: AztecAddress,\n    event_selector: Field,\n    message: T\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/logs.nr"},"77":{"source":"use dep::protocol_types::{\n    abis::{\n        call_context::CallContext,\n        private_circuit_public_inputs::PrivateCircuitPublicInputs,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n    },\n    address::{AztecAddress, EthAddress},\n    contrakt::deployment_data::ContractDeploymentData,\n    hash::hash_args,\n    traits::{Hash, Serialize},\n    header::Header,\n};\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl Serialize<2> for PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n    coinbase: EthAddress,\n    fee_recipient: AztecAddress,\n}\n// docs:end:public-global-variables\n\nimpl Serialize<6> for PublicGlobalVariables {\n    fn serialize(self) -> [Field; 6] {\n        [\n            self.chain_id,\n            self.version,\n            self.block_number,\n            self.timestamp,\n            self.coinbase.to_field(),\n            self.fee_recipient.to_field(),\n        ]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    historical_header: Header,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    historical_header: Header,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hash for Hasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/abi.nr"},"78":{"source":"mod private;\nmod public;\nmod avm;\n\nuse public::PublicContext;\nuse private::PrivateContext;\nuse avm::AVMContext;\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/context.nr"},"90":{"source":"use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse dep::std::option::Option;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_state_struct\nstruct PublicState<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_state_struct\n\nimpl<T> Storage<T> for PublicState<T> {}\n\nimpl<T> PublicState<T> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = T::serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/aztec-nr/aztec/src/state_vars/public_state.nr"},"121":{"source":"use crate::utils::field::field_from_bytes;\nuse dep::std::cmp::Eq;\nuse crate::traits::{Serialize, Deserialize};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n\n    pub fn from_u32(value: u32) -> Self {\n        Self {\n            inner : value,\n        }\n    }\n\n    pub fn from_field(value : Field) -> Self {\n        Self {\n            inner : value as u32,\n        }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/abis/function_selector.nr"},"134":{"source":"use crate::{\n    constants::{\n        GENERATOR_INDEX__CONTRACT_ADDRESS,\n        GENERATOR_INDEX__PARTIAL_ADDRESS,\n        GENERATOR_INDEX__CONSTRUCTOR\n    },\n    hash::pedersen_hash,\n    contract_class::ContractClassId,\n    utils,\n    grumpkin_point::GrumpkinPoint,\n};\nuse dep::std::cmp::Eq;\nuse crate::traits::{Empty, ToField, Serialize, Deserialize};\nuse crate::type_serialization::{ETH_ADDRESS_SERIALIZED_LEN, AZTEC_ADDRESS_SERIALIZED_LEN};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_SERIALIZED_LEN> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_SERIALIZED_LEN> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> Self {\n        AztecAddress::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self {\n            inner: 0\n        }\n    }\n\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute_from_public_key(pub_key: GrumpkinPoint, contract_class_id: ContractClassId, salt: Field, initialization_hash: Field, portal_contract_address: EthAddress) -> AztecAddress {\n        AztecAddress::compute(PublicKeysHash::compute(pub_key), PartialAddress::compute(contract_class_id, salt, initialization_hash, portal_contract_address))\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            pedersen_hash(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n    \n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs : Self, rhs : Self) -> Self{\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self {\n            inner : result\n        }\n    }\n}\n\nstruct EthAddress{\n    inner : Field\n}\n\nimpl Eq for EthAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for EthAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for EthAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<ETH_ADDRESS_SERIALIZED_LEN> for EthAddress {\n    fn serialize(self: Self) -> [Field; ETH_ADDRESS_SERIALIZED_LEN] {\n        [self.inner]\n    }\n}\n\nimpl Deserialize<ETH_ADDRESS_SERIALIZED_LEN> for EthAddress {\n    fn deserialize(fields: [Field; ETH_ADDRESS_SERIALIZED_LEN]) -> Self {\n        Self {\n            inner: fields[0]\n        }\n    }\n}\n\nimpl EthAddress{\n    pub fn zero() -> Self {\n        Self {\n            inner: 0\n        }\n    }\n\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs : Self, rhs : Self) -> Self{\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self {\n            inner : result\n        }\n    }\n}\n\n// Partial address\nstruct PartialAddress {\n    inner : Field\n}\n\nimpl ToField for PartialAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl PartialAddress {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(contract_class_id: ContractClassId, salt: Field, initialization_hash: Field, portal_contract_address: EthAddress) -> Self {\n        PartialAddress::compute_from_salted_initialization_hash(contract_class_id, SaltedInitializationHash::compute(salt, initialization_hash, portal_contract_address))\n    }\n\n    pub fn compute_from_salted_initialization_hash(contract_class_id: ContractClassId, salted_initialization_hash: SaltedInitializationHash) -> Self {\n        PartialAddress::from_field(\n            pedersen_hash([\n                contract_class_id.to_field(),\n                salted_initialization_hash.to_field()\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n// Salted initialization hash. Used in the computation of a partial address.\nstruct SaltedInitializationHash {\n    inner: Field\n}\n\nimpl ToField for SaltedInitializationHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl SaltedInitializationHash {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(salt : Field, initialization_hash: Field, portal_contract_address: EthAddress) -> Self {\n        SaltedInitializationHash::from_field(\n            pedersen_hash([\n                salt,\n                initialization_hash,\n                portal_contract_address.to_field(),\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n// Public keys hash. Used in the computation of an address.\nstruct PublicKeysHash {\n    inner: Field\n}\n\nimpl ToField for PublicKeysHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<1> for PublicKeysHash {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<1> for PublicKeysHash {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        PublicKeysHash::from_field(fields[0])\n    }\n}\n\nimpl PublicKeysHash {\n    pub fn from_field(field : Field) -> Self {\n        Self {\n            inner : field\n        }\n    }\n\n    pub fn compute(public_key: GrumpkinPoint) -> Self {\n        PublicKeysHash::from_field(\n            pedersen_hash([\n                public_key.x,\n                public_key.y,\n            ], GENERATOR_INDEX__PARTIAL_ADDRESS)\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\npub fn compute_initialization_hash(selector: Field, args_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        selector,\n        args_hash\n    ],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/address.nr"},"147":{"source":"global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL: Field = 1;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX: Field = 4;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n\nglobal MAX_NEW_COMMITMENTS_PER_TX_META: Field = 8;\nglobal MAX_NEW_NULLIFIERS_PER_TX_META: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX_META: Field = 2;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 40;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\nglobal ARTIFACT_FUNCTION_TREE_MAX_HEIGHT = 5;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 0;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 16;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 6;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 26;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 6;\nglobal PUBLIC_DATA_SUBTREE_HEIGHT: Field = 4;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 14;\nglobal PUBLIC_DATA_SUBTREE_SIBLING_PATH_LENGTH: Field = 36;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\n// sha256 hash is stored in two fields to accommodate all 256-bits of the hash\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 32;\n\n// CONTRACT CLASS CONSTANTS\n// This should be around 8192 (assuming 2**15 instructions packed at 8 bytes each), \n// but it's reduced to speed up build times, otherwise the ClassRegisterer takes over 5 mins to compile.\n// We are not using 1024 so we can squeeze in a few more args to methods that consume packed public bytecode,\n// such as the ClassRegisterer.register, and still land below the 32 * 32 max args limit for hashing.\nglobal MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS: Field = 1000;\n// Bytecode size for private functions is per function, not for the entire contract.\n// Note that private functions bytecode includes a mix of acir and brillig.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_PRIVATE_FUNCTION_IN_FIELDS: Field = 500;\n// Same for unconstrained functions: the size is per function.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_UNCONSTRAINED_FUNCTION_IN_FIELDS: Field = 500;\n// Since we are not yet emitting selectors we'll use this magic value to identify events emitted by the ClassRegisterer.\n// This is just a stopgap until we implement proper selectors.\n// sha224sum 'struct ContractClassRegistered {contract_class_id: ContractClassId, version: Field, artifact_hash: Field, private_functions_root: Field, packed_public_bytecode: [Field; MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS] }'\nglobal REGISTERER_CONTRACT_CLASS_REGISTERED_MAGIC_VALUE = 0x6999d1e02b08a447a463563453cb36919c9dd7150336fc7c4d2b52f8;\n// sha224sum 'struct ClassPrivateFunctionBroadcasted'\nglobal REGISTERER_PRIVATE_FUNCTION_BROADCASTED_MAGIC_VALUE = 0x1b70e95fde0b70adc30496b90a327af6a5e383e028e7a43211a07bcd;\n// sha224sum 'struct ClassUnconstrainedFunctionBroadcasted'\nglobal REGISTERER_UNCONSTRAINED_FUNCTION_BROADCASTED_MAGIC_VALUE = 0xe7af816635466f128568edb04c9fa024f6c87fb9010fdbffa68b3d99;\n\n// CONTRACT INSTANCE CONSTANTS\n// sha224sum 'struct ContractInstanceDeployed'\nglobal DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE = 0x85864497636cf755ae7bde03f267ce01a520981c21c3682aaf82a631;\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue below is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 25;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 8;\nglobal GLOBAL_VARIABLES_LENGTH: Field = 6;\nglobal PARTIAL_STATE_REFERENCE_LENGTH: Field = 8;\nglobal STATE_REFERENCE_LENGTH: Field = 10; // 2 for snap + 8 for partial\nglobal HEADER_LENGTH: Field = 20; // 2 for last_archive, 2 for body hash, 10 for state reference, 6 for global vars \nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we should change this\n// constant as well PRIVATE_CALL_STACK_ITEM_LENGTH\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 207;\nglobal PRIVATE_CALL_STACK_ITEM_LENGTH: Field = 212;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 203;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 1024;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 32;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 52;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\nglobal GENERATOR_INDEX__SIDE_EFFECT = 29;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/constants.nr"},"149":{"source":"pub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/utils/field.nr"},"155":{"source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\nglobal U32_SERIALIZED_LEN: Field = 1;\nglobal U8_SERIALIZED_LEN: Field = 1;\nglobal FIELD_SERIALIZED_LEN: Field = 1;\nglobal AZTEC_ADDRESS_SERIALIZED_LEN = 1;\nglobal ETH_ADDRESS_SERIALIZED_LEN = 1;\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/type_serialization.nr"},"158":{"source":"use crate::address::{AztecAddress, EthAddress};\nuse crate::mocked::VerificationKey;\nuse crate::abis::function_selector::FunctionSelector;\nuse crate::abis::function_leaf_preimage::{ContractClassFunctionLeafPreimage, FunctionLeafPreimage};\nuse crate::contract_class::ContractClassId;\nuse crate::abis::new_contract_data::NewContractData as ContractLeafPreimage;\nuse crate::abis::function_data::FunctionData;\nuse crate::abis::side_effect::{SideEffect};\nuse crate::utils::uint256::U256;\nuse crate::constants::{\n        ARGS_HASH_CHUNK_COUNT,\n        ARGS_HASH_CHUNK_LENGTH,\n        CONTRACT_TREE_HEIGHT, \n        FUNCTION_TREE_HEIGHT, \n        NOTE_HASH_TREE_HEIGHT,\n        NUM_FIELDS_PER_SHA256,\n        GENERATOR_INDEX__SILOED_COMMITMENT,\n        GENERATOR_INDEX__OUTER_NULLIFIER,\n        GENERATOR_INDEX__VK,\n        GENERATOR_INDEX__CONSTRUCTOR,\n        GENERATOR_INDEX__PARTIAL_ADDRESS,\n        GENERATOR_INDEX__CONTRACT_ADDRESS,\n        GENERATOR_INDEX__COMMITMENT_NONCE,\n        GENERATOR_INDEX__UNIQUE_COMMITMENT,\n        GENERATOR_INDEX__FUNCTION_ARGS,\n};\n\nuse dep::std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n// Checks that `value` is a member of a merkle tree with root `root` at position `index`\n// The witness being the `sibling_path`\npub fn assert_check_membership<N>(value: Field, index: Field, sibling_path: [Field; N], root: Field) {\n    let calculated_root = root_from_sibling_path(value, index, sibling_path);\n    assert(calculated_root == root, \"membership check failed\");\n}\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like \n// this because it means we never even need to consider cases where \n// the index is greater than p.\npub fn root_from_sibling_path<N>(leaf: Field, leaf_index: Field, sibling_path: [Field; N]) -> Field {\n    let mut node = leaf;\n    let indices = leaf_index.to_le_bits(N);\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\n// Calculate the function tree root from the sibling path and leaf preimage.\n//\n// TODO: The cpp code passes in components of the FunctionLeafPreimage and then \n// builds it up. We should build it up and then pass the leaf preimage as a parameter.\n// We can then choose to have a general method that takes in anything hashable\n// and deduplicate the logic in `contract_tree_root_from_siblings`\npub fn function_tree_root_from_siblings(\n    selector: FunctionSelector,\n    is_internal: bool,\n    is_private: bool,\n    vk_hash: Field,\n    acir_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = FunctionLeafPreimage { selector, is_internal, is_private, vk_hash, acir_hash };\n\n    let function_leaf = function_leaf_preimage.hash();\n\n    let function_tree_root = root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path);\n\n    function_tree_root\n}\n\n// Calculate the contract tree root from the sibling path and leaf preimage.\npub fn contract_tree_root_from_siblings(\n    contract_class_id: ContractClassId,\n    storage_contract_address: AztecAddress,\n    portal_contract_address: EthAddress,\n    contract_leaf_index: Field,\n    contract_leaf_sibling_path: [Field; CONTRACT_TREE_HEIGHT]\n) -> Field {\n    //TODO(Kev): if we use shorthand syntax here, we get an error as expected,\n    // since variable name is `storage_contract_address` but the span is incorrect.\n    let contract_leaf_preimage = ContractLeafPreimage { contract_address: storage_contract_address, portal_contract_address, contract_class_id };\n\n    let contract_leaf = contract_leaf_preimage.hash();\n\n    let computed_contract_tree_root = root_from_sibling_path(contract_leaf, contract_leaf_index, contract_leaf_sibling_path);\n\n    computed_contract_tree_root\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\npub fn read_request_root_from_siblings(\n    read_request: Field,\n    leaf_index: Field,\n    sibling_path: [Field; NOTE_HASH_TREE_HEIGHT]\n) -> Field {\n    root_from_sibling_path(read_request, leaf_index, sibling_path)\n}\n\npub fn silo_commitment(address: AztecAddress, inner_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        inner_commitment\n    ],\n        GENERATOR_INDEX__SILOED_COMMITMENT\n    )\n}\n\npub fn silo_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\nfn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\n// TODO CPP uses blake2s for this\npub fn compute_new_contract_address_hash(new_contract_address: AztecAddress) -> Field {\n    dep::std::hash::pedersen_hash([new_contract_address.to_field()])\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    rollup_version_id: Field,\n    portal_contract_address: EthAddress,\n    chain_id: Field,\n    content: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new(0);\n\n    let inputs = [\n        contract_address.to_field(), rollup_version_id, portal_contract_address.to_field(), chain_id, content\n    ];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn compute_constructor_hash(\n    function_data: FunctionData,\n    args_hash: Field,\n    constructor_vk_hash: Field\n) -> Field {\n    let function_data_hash = function_data.hash();\n\n    pedersen_hash(\n        [\n        function_data_hash,\n        args_hash,\n        constructor_vk_hash\n    ],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n\n// Computes sha256 hash of 2 input hashes stored in 4 fields.\n// \n// This method is bn254 specific. Two fields is needed in order to \n// encode the sha256 output. It can be abstracted away with any 4-2 hash function.\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\n// Returning a Field would be desirable because then this can be replaced with \n// poseidon without changing the rest of the code\n//\npub fn accumulate_sha256(input: [U128; 4]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n    //\n    // Concatenate 4 u128 bit integers into a byte array.\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..4 {\n        let input_as_bytes = input[offset].to_be_bytes();\n        for byte_index in 0..16 {\n            hash_input_flattened[offset * 16 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    let sha_digest = dep::std::hash::sha256(hash_input_flattened);\n\n    U256::from_bytes32(sha_digest).to_u128_limbs()\n}\n\npub fn compute_logs_hash(\n    previous_log_hash: [Field; 2],\n    current_log_hash: [Field; 2]\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    accumulate_sha256(\n        [\n        U128::from_integer(previous_log_hash[0]),\n        U128::from_integer(previous_log_hash[1]),\n        U128::from_integer(current_log_hash[0]),\n        U128::from_integer(current_log_hash[1])\n    ]\n    )\n}\n\npub fn compute_commitment_nonce(first_nullifier: Field, commitment_index: Field) -> Field {\n    pedersen_hash(\n        [\n        first_nullifier,\n        commitment_index\n    ],\n        GENERATOR_INDEX__COMMITMENT_NONCE\n    )\n}\n\npub fn compute_unique_siloed_commitment(nonce: Field, siloed_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        nonce,\n        siloed_commitment\n    ],\n        GENERATOR_INDEX__UNIQUE_COMMITMENT\n    )\n}\n\npub fn compute_unique_siloed_commitments<N>(\n    first_nullifier: Field,\n    siloed_commitments: [SideEffect; N]\n) -> [SideEffect; N] {\n    let mut unique_siloed_commitments = [SideEffect::empty(); N];\n    for i in 0..N {\n        let siloed_commitment = siloed_commitments[i];\n        if siloed_commitment.value != 0 {\n            let nonce = compute_commitment_nonce(first_nullifier, i);\n            unique_siloed_commitments[i] = SideEffect {\n                value: compute_unique_siloed_commitment(nonce, siloed_commitment.value),\n                counter: siloed_commitment.counter\n                };\n        }\n    }\n    unique_siloed_commitments\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    dep::std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-protocol-circuits/src/crates/types/src/hash.nr"},"177":{"source":"// A contract used along with `Parent` contract to test nested calls.\ncontract Child {\n    use dep::std::option::Option;\n\n    use dep::aztec::{\n        abi::CallContext,\n        context::{PrivateContext, PublicContext, Context},\n        log::emit_unencrypted_log,\n        state_vars::public_state::PublicState,\n    };\n    use dep::aztec::protocol_types::{\n        abis::function_selector::FunctionSelector,\n        address::AztecAddress,\n    };\n\n    struct Storage {\n        current_value: PublicState<Field>,\n    }\n\n    #[aztec(private)]\n    fn constructor() {}\n\n    // Returns a sum of the input and the chain id and version of the contract in private circuit public input's return_values.\n    #[aztec(private)]\n    fn value(input: Field) -> Field {\n        input + context.chain_id() + context.version()\n    }\n\n    fn check_sender(call_context: CallContext) {\n        assert(\n            call_context.msg_sender.eq(call_context.storage_contract_address), \"Sender must be this contract\"\n        );\n    }\n\n    // Returns a sum of the input and the chain id and version of the contract in private circuit public input's return_values. \n    // Can only be called from this contract.\n    #[aztec(private)]\n    fn valueInternal(input: Field) -> Field {\n        check_sender(inputs.call_context);\n        input + context.chain_id() + context.version()\n    }\n\n    // Returns base_value + chain_id + version + block_number + timestamp\n    #[aztec(public)]\n    fn pubGetValue(base_value: Field) -> Field {\n        let returnValue = base_value\n            + context.chain_id()\n            + context.version()\n            + context.block_number()\n            + context.timestamp();\n\n        returnValue\n    }\n\n    // Sets `current_value` to `new_value`\n    #[aztec(public)]\n    fn pubSetValue(new_value: Field) -> Field {\n        storage.current_value.write(new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    // Increments `current_value` by `new_value`\n    #[aztec(public)]\n    fn pubIncValue(new_value: Field) -> Field {\n        let old_value = storage.current_value.read();\n        storage.current_value.write(old_value + new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    // Increments `current_value` by `new_value`. Can only be called from this contract.\n    #[aztec(public)] \n    fn pubIncValueInternal(new_value: Field) -> Field {\n        check_sender(inputs.call_context);\n        let old_value = storage.current_value.read();\n        storage.current_value.write(old_value + new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    #[aztec(public)]\n    fn setValueTwiceWithNestedFirst() {\n        let pubSetValueSelector = FunctionSelector::from_signature(\"pubSetValue(Field)\");\n        let _ret = context.call_public_function(context.this_address(), pubSetValueSelector, [10]);\n\n        storage.current_value.write(20);\n        emit_unencrypted_log(&mut context, 20);\n    }\n\n    #[aztec(public)]\n    fn setValueTwiceWithNestedLast() {\n        storage.current_value.write(20);\n        emit_unencrypted_log(&mut context, 20);\n\n        let pubSetValueSelector = FunctionSelector::from_signature(\"pubSetValue(Field)\");\n        let _ret = context.call_public_function(context.this_address(), pubSetValueSelector, [10]);\n    }\n\n    // TODO: remove this placeholder once https://github.com/AztecProtocol/aztec-packages/issues/2918 is implemented\n    unconstrained fn compute_note_hash_and_nullifier(\n        contract_address: AztecAddress,\n        nonce: Field,\n        storage_slot: Field,\n        serialized_note: [Field; 0]\n    ) -> pub [Field; 4] {\n        [0, 0, 0, 0]\n    }\n}\n","path":"/Users/zpedro/Documents/GitHub/aztec-packages/yarn-project/noir-contracts/contracts/child_contract/src/main.nr"}}}