VERSION 0.8
FROM node:18.19.0
RUN apt update && apt install -y jq curl perl && rm -rf /var/lib/apt/lists/* && apt-get clean

# copy bb-js and noir-packages
COPY ../barretenberg/ts/+build/build /build/barretenberg/ts
COPY ../noir/+packages/packages /build/noir/packages
# install acvm binary
COPY ../noir/+nargo/acvm /usr/bin/acvm
COPY --dir ../noir-projects/+build/. /build/noir-projects
COPY ../l1-contracts/+build/out /build/l1-contracts/out

WORKDIR /build/yarn-project
# copy source
COPY --keep-ts --dir */ *.json .yarn .yarnrc.yml .

# We install a symlink to yarn-project's node_modules at a location that all portalled packages can find as they
# walk up the tree as part of module resolution. The supposedly idiomatic way of supporting module resolution
# correctly for portalled packages, is to use --preserve-symlinks when running node.
# This does kind of work, but jest doesn't honor it correctly, so this seems like a neat workaround.
# Also, --preserve-symlinks causes duplication of portalled instances such as bb.js, and breaks the singleton logic
# by initialising the module more than once. So at present I don't see a viable alternative.
RUN ln -s /build/yarn-project/node_modules /build/node_modules

# Target for main build process
build:
    ARG EARTHLY_CI
    # TODO: Replace puppeteer with puppeteer-core to avoid this.
    ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    IF $EARTHLY_CI # Don't cache CI builds.
        RUN ./bootstrap.sh
        RUN yarn workspaces focus @aztec/cli @aztec/aztec --production && yarn cache clean
    ELSE
        ENV YARN_CACHE_FOLDER /build/yarn-cache
        # Use a mount for incremental builds locally.
        RUN --mount type=cache,target=/build/node_modules --mount type=cache,target=/build/yarn-cache \
            ./bootstrap.sh && yarn workspaces focus @aztec/cli @aztec/aztec --production
    END
    SAVE ARTIFACT /build

# TODO versioning flow at end before publish?
# ENV COMMIT_TAG=$EARTHLY_BUILD_SHA
# RUN ./scripts/version_packages.sh

# run:
#     FROM node:18.19.1-slim
#     ARG COMMIT_TAG=""
#     ENV COMMIT_TAG=$COMMIT_TAG
#     COPY --from=builder /build /build
#     WORKDIR /build/yarn-project
#     ENTRYPOINT ["yarn"]

aztec:
    FROM +build
    # ENV vars for using native ACVM simulation
    ENV ACVM_BINARY_PATH="/build/noir/noir-repo/target/release/acvm" ACVM_WORKING_DIRECTORY="/tmp/acvm"
    ENTRYPOINT ["node", "--no-warnings", "/build/yarn-project/aztec/dest/bin/index.js"]
    EXPOSE 8080

    # The version has been updated in yarn-project.
    # Adding COMMIT_TAG here to rebuild versioned image.
    ARG COMMIT_TAG=""

