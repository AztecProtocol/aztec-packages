import { abiCoder } from './index.js';
import { EthAddress } from '../../../eth_address/index.js';

const address1 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c1');
const address2 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c2');
const address3 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c3');
const address4 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c4');
const address5 = EthAddress.fromString('0xbbf289d846208c16edc8474705c748aff07732db');
const address6 = EthAddress.fromString('0x1234567890123456789012345678901234567890');

describe('decodeParameter', () => {
  const tests = [
    {
      params: ['uint256', '0x0000000000000000000000000000000000000000000000000000000000000010'],
      result: 16n,
    },
    {
      params: [
        'string',
        '0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000',
      ],
      result: 'Hello!%!',
    },
  ];

  tests.forEach(test => {
    it('should convert correctly', () => {
      expect(abiCoder.decodeParameter(test.params[0], test.params[1])).toEqual(test.result);
    });
  });
});

describe('decodeParameter', () => {
  const test = t => {
    it('should decode parameter correctly', () => {
      expect(abiCoder.decodeParameter(t.type, t.value)).toEqual(t.expected);
    });
  };

  test({
    type: 'address',
    expected: address1,
    value: '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1',
  });
  test({
    type: 'address[2]',
    expected: [address1, address3],
    value:
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3',
  });
  test({
    type: 'address[]',
    expected: [address1, address3],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3',
  });
  test({
    type: 'address[][2]',
    expected: [
      [address1, address2],
      [address3, address4],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4',
  });
  test({
    type: 'address[2][]',
    expected: [
      [address1, address2],
      [address3, address4],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' /* 20 */ +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4',
  });
  // test({
  //   type: 'address[][]',
  //   expected: [
  //     [address1, address2],
  //     [address3, address4],
  //   ],
  //   value:
  //     '0000000000000000000000000000000000000000000000000000000000000020' +
  //     '0000000000000000000000000000000000000000000000000000000000000002' /* 20 */ +
  //     '0000000000000000000000000000000000000000000000000000000000000080' +
  //     '00000000000000000000000000000000000000000000000000000000000000e0' +
  //     '0000000000000000000000000000000000000000000000000000000000000002' /* 80 */ +
  //     '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' /* a0 */ +
  //     '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
  //     '0000000000000000000000000000000000000000000000000000000000000002' /* e0 */ +
  //     '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
  //     '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4',
  // });
  test({ type: 'bool', expected: true, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'bool', expected: false, value: '0000000000000000000000000000000000000000000000000000000000000000' });
  test({
    type: 'bool[2]',
    expected: [true, false],
    value:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'bool[]',
    expected: [true, true, false],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000',
  });

  test({ type: 'int', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'int', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'int', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'int', expected: -1n, value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' });
  test({ type: 'int256', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'int256', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'int256', expected: -1n, value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' });
  test({ type: 'int8', expected: 16, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({
    type: 'int8[2]',
    expected: [16, 2],
    value:
      '0000000000000000000000000000000000000000000000000000000000000010' +
      '0000000000000000000000000000000000000000000000000000000000000002',
  });
  test({ type: 'int32', expected: 16, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'int64', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'int128', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({
    type: 'int[]',
    expected: [],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'int[]',
    expected: [3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'int256[]',
    expected: [3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'int[]',
    expected: [1n, 2n, 3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'int[3][]',
    expected: [
      [1n, 2n, 3n],
      [4n, 5n, 6n],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000006',
  });

  test({ type: 'uint', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'uint', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({ type: 'uint', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({
    type: 'uint',
    expected: 115792089237316195423570985008687907853269984665640564039457584007913129639935n, // old 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  });
  test({ type: 'uint256', expected: 1n, value: '0000000000000000000000000000000000000000000000000000000000000001' });
  test({
    type: 'uint256',
    expected: 16n,
    value: '0000000000000000000000000000000000000000000000000000000000000010',
  });
  test({ type: 'uint8', expected: 16, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'uint32', expected: 16, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({ type: 'uint64', expected: 16n, value: '0000000000000000000000000000000000000000000000000000000000000010' });
  test({
    type: 'uint128',
    expected: 16n,
    value: '0000000000000000000000000000000000000000000000000000000000000010',
  });
  test({
    type: 'uint[]',
    expected: [],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'uint[]',
    expected: [3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'uint256[]',
    expected: [3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'uint[]',
    expected: [1n, 2n, 3n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003',
  });
  test({
    type: 'uint[3][]',
    expected: [
      [1n, 2n, 3n],
      [4n, 5n, 6n],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000006',
  });
  test({
    type: 'bytes',
    expected: '0x6761766f66796f726b',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '6761766f66796f726b0000000000000000000000000000000000000000000000',
  });
  test({
    type: 'bytes',
    expected: '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
  });
  test({
    type: 'bytes',
    expected:
      '0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
  });
  test({
    type: 'bytes',
    expected:
      '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
  });
  test({
    type: 'bytes[2]',
    expected: [
      '0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
      '0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000022' +
      '00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f61' +
      '7fff000000000000000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000001e' +
      '21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff0000',
  });

  test({
    type: 'bytes[][2]',
    expected: [
      [
        '0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
        '0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
      ],
      [
        '0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
        '0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff',
      ],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000140' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000022' +
      '00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f61' +
      '7fff000000000000000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000001e' +
      '21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff0000' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000022' +
      '00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f61' +
      '7fff000000000000000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000001e' +
      '21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff0000',
  });

  test({
    type: 'bytes1',
    expected: '0xcf',
    value: 'cf00000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'bytes1[4]',
    expected: ['0xcf', '0x68', '0x4d', '0xfb'],
    value:
      'cf00000000000000000000000000000000000000000000000000000000000000' +
      '6800000000000000000000000000000000000000000000000000000000000000' +
      '4d00000000000000000000000000000000000000000000000000000000000000' +
      'fb00000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'bytes32',
    expected: '0x6761766f66796f726b0000000000000000000000000000000000000000000000',
    value: '6761766f66796f726b0000000000000000000000000000000000000000000000',
  });

  test({
    type: 'string',
    expected: 'gavofyork',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '6761766f66796f726b0000000000000000000000000000000000000000000000',
  });
  test({
    type: 'string',
    expected: 'Ã¤Ã¤',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000008' +
      'c383c2a4c383c2a4000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'string',
    expected: 'ü',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      'c3bc000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'string',
    expected: '',
    value:
      '0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'string',
    expected: 'Ã',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      'c383000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'string',
    expected: 'Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/',
    value:
      '00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000026486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f0000000000000000000000000000000000000000000000000000',
  });

  test({
    type: 'bytes',
    expected: '0xc3a40000c3a4',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      'c3a40000c3a40000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'bytes32',
    expected: '0xc3a40000c3a40000000000000000000000000000000000000000000000000000',
    value: 'c3a40000c3a40000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'address',
    expected: address1,
    value: '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1',
  });
  test({
    type: 'string',
    expected: 'welcome to ethereum. welcome to ethereum. welcome to ethereum.',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '000000000000000000000000000000000000000000000000000000000000003e' +
      '77656c636f6d6520746f20657468657265756d2e2077656c636f6d6520746f20' +
      '657468657265756d2e2077656c636f6d6520746f20657468657265756d2e0000',
  });
  test({
    type: 'bytes',
    expected:
      '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1',
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '000000000000000000000000000000000000000000000000000000000000009f' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' +
      'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff100',
  });
  test({
    type: 'tuple(address)',
    expected: [address5],
    value: '000000000000000000000000bbf289d846208c16edc8474705c748aff07732db',
  });
  test({
    type: 'tuple(address,address)',
    expected: [address5, address5],
    value:
      '000000000000000000000000bbf289d846208c16edc8474705c748aff07732db' +
      '000000000000000000000000bbf289d846208c16edc8474705c748aff07732db',
  });
  test({
    type: 'tuple(uint256,uint256)',
    expected: [5n, 5n],
    value:
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000005',
  });
  test({
    type: 'tuple(string,string)',
    expected: ['hello', 'world'],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '68656c6c6f000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '776f726c64000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'tuple(bytes,bytes)',
    expected: ['0x01fe517acd15ff', '0xabcdef12345678'],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      '01fe517acd15ff00000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      'abcdef1234567800000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'tuple(bool,bool)',
    expected: [false, true],
    value:
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });

  test({
    type: 'tuple(uint256,string,bytes)',
    expected: [4n, 'what what', '0xabcdef12345678'],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '7768617420776861740000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      'abcdef1234567800000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'tuple(uint128,string,bytes)',
    expected: [666n, 'encode your kids', '0x656e636f646520796f75722077696665'],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '000000000000000000000000000000000000000000000000000000000000029a' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000010' +
      '656e636f646520796f7572206b69647300000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000010' +
      '656e636f646520796f7572207769666500000000000000000000000000000000',
  });
  test({
    type: 'tuple(string,bytes32,uint256,bool)',
    expected: ['foo bar', '0xaabbccddeeff0000000000000000000000000000000000000000000000000000', 321n, true],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      'aabbccddeeff0000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000141' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      '666f6f2062617200000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'tuple(uint8,uint8,uint8,uint8,string,address,bool)',
    expected: [1, 2, 3, 4, 'five', EthAddress.fromString('0x0000000000000000000000000000000000000006'), true],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '6669766500000000000000000000000000000000000000000000000000000000',
  });
  test({
    type: 'tuple(tuple(address,address),tuple(uint256,uint256))',
    expected: [
      [address6, address6],
      [5n, 6n],
    ],
    value:
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000006',
  });
  test({
    type: 'tuple(tuple(address,address),tuple(uint256,uint256),tuple(string,string))',
    expected: [
      [address6, address6],
      [5n, 6n],
      ['a string', 'another string'],
    ],
    value:
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000008' +
      '6120737472696e67000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000000e' +
      '616e6f7468657220737472696e67000000000000000000000000000000000000',
  });
});
