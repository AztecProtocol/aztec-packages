import { abiCoder } from './index.js';
import { EthAddress } from '@aztec/foundation/eth-address';

const address1 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c1');
const address2 = EthAddress.fromString('0x407d73d8a49eeb85d32cf465507dd71d507100c3');
const address3 = EthAddress.fromString('0x1234567890123456789012345678901234567890');

describe('decodeParameters', () => {
  const tests = [
    {
      params: [
        ['string', 'uint256'],
        '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000',
      ],
      result: {
        '0': 'Hello!%!',
        '1': 234n,
        __length__: 2,
      },
    },
    {
      params: [
        [
          {
            type: 'string',
            name: 'myString',
          },
          {
            type: 'uint256',
            name: 'myNumber',
          },
        ],
        '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000848656c6c6f212521000000000000000000000000000000000000000000000000',
      ],
      result: {
        '0': 'Hello!%!',
        '1': 234n,
        myString: 'Hello!%!',
        myNumber: 234n,
        __length__: 2,
      },
    },
    {
      params: [
        ['string'],
        '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      ],
      result: { '0': '', __length__: 1 },
    },
    {
      params: [['int256'], '0x0000000000000000000000000000000000000000000000000000000000000000'],
      result: { '0': 0n, __length__: 1 },
    },
    {
      params: [['uint256'], '0x0000000000000000000000000000000000000000000000000000000000000000'],
      result: { '0': 0n, __length__: 1 },
    },
    {
      params: [
        ['bytes'],
        '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      ],
      result: { '0': null, __length__: 1 },
    },
    {
      params: [['address'], '0x0000000000000000000000000000000000000000000000000000000000000000'],
      result: { '0': EthAddress.fromString('0x0000000000000000000000000000000000000000'), __length__: 1 },
    },
    {
      params: [['bytes32'], '0x0000000000000000000000000000000000000000000000000000000000000000'],
      result: { '0': '0x0000000000000000000000000000000000000000000000000000000000000000', __length__: 1 },
    },
    {
      params: [['bool'], '0x0000000000000000000000000000000000000000000000000000000000000000'],
      result: { '0': false, __length__: 1 },
    },
  ];
  tests.forEach(test => {
    it('should convert correctly', () => {
      expect(abiCoder.decodeParameters(...(test.params as [any, any]))).toEqual(test.result);
    });
  });

  const failures = [
    {
      params: [['string', 'uint256'], '0x'],
    },
    {
      params: [
        [
          {
            type: 'string',
            name: 'myString',
          },
          {
            type: 'uint256',
            name: 'myNumber',
          },
        ],
        '0x',
      ],
    },
    {
      params: [['string'], '0x'],
    },
    {
      params: [['int256'], '0x'],
    },
    {
      params: [['uint256'], '0x'],
    },
    {
      params: [['bytes'], '0x'],
    },
    {
      params: [['address'], '0x'],
    },
    {
      params: [['bytes32'], '0x'],
    },
    {
      params: [['bool'], '0x'],
    },
  ];

  failures.forEach(test => {
    it('should not convert ' + test.params[1] + ' to ' + test.params[0], () => {
      expect(() => abiCoder.decodeParameters(...(test.params as [any, any]))).toThrow();
    });
  });
});

describe('decodeParameters', () => {
  const test = t => {
    it('should decode parameters correctly', () => {
      const result = abiCoder.decodeParameters(t.types, t.values);

      const resultArray: any = [];
      Object.entries(result).forEach(([key, res]) => {
        if (isFinite(+key)) {
          resultArray.push(res);
        }
      });

      expect(resultArray).toEqual(t.expected);
    });
  };

  test({
    types: ['address'],
    expected: [address1],
    values: '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1',
  });
  test({
    types: ['address', 'address'],
    expected: [address1, address2],
    values:
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3',
  });
  test({
    types: ['bool[2]', 'bool[3]'],
    expected: [
      [true, false],
      [false, false, true],
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['int[2]', 'int256[3]'],
    expected: [
      [1n, 2n],
      [3n, 4n, 5n],
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000005',
  });
  test({
    types: ['int'],
    expected: [1n],
    values: '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['uint[2]', 'uint256[3]'],
    expected: [
      [1n, 2n],
      [3n, 4n, 5n],
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000005',
  });
  test({
    types: ['uint'],
    expected: [1n],
    values: '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['bytes1', 'bytes1'],
    expected: ['0xaa', '0xbb'],
    values:
      'aa00000000000000000000000000000000000000000000000000000000000000' +
      'bb00000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    types: ['bytes1[2]', 'bytes1'],
    expected: [['0xaa', '0xbb'], '0xcc'],
    values:
      'aa00000000000000000000000000000000000000000000000000000000000000' +
      'bb00000000000000000000000000000000000000000000000000000000000000' +
      'cc00000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    types: ['bytes', 'bytes'],
    expected: [
      '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
      '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c',
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c',
  });
  test({
    types: ['int', 'string', 'int'],
    expected: [1n, 'gavofyork', 5n],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '6761766f66796f726b0000000000000000000000000000000000000000000000',
  });
  test({
    types: ['bytes32', 'int'],
    expected: ['0x6761766f66796f726b0000000000000000000000000000000000000000000000', 5n],
    values:
      '6761766f66796f726b0000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000005',
  });
  test({
    types: ['int', 'bytes32'],
    expected: [5n, '0x6761766f66796f726b0000000000000000000000000000000000000000000000'],
    values:
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '6761766f66796f726b0000000000000000000000000000000000000000000000',
  });
  test({
    types: ['int', 'string', 'int', 'int', 'int', 'int[]'],
    expected: [1n, 'gavofyork', 2n, 3n, 4n, [5n, 6n, 7n]],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '00000000000000000000000000000000000000000000000000000000000000c0' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '0000000000000000000000000000000000000000000000000000000000000100' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '6761766f66796f726b0000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '0000000000000000000000000000000000000000000000000000000000000007',
  });
  test({
    types: ['int', 'bytes', 'int', 'bytes'],
    expected: [
      5n,
      '0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
        '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
      3n,
      '0x331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
        '431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
      '431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
  });
  test({
    types: ['address[2][1]', 'bool'],
    expected: [[[address1, address2]], false],
    values:
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
      '0000000000000000000000000000000000000000000000000000000000000000',
  });
  test({
    types: ['bool[2][1]', 'bool'],
    expected: [[[true, false]], true],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['bytes1[2][1]', 'bool'],
    expected: [[['0xaa', '0xbb']], true],
    values:
      'aa00000000000000000000000000000000000000000000000000000000000000' +
      'bb00000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['int[2][1]', 'bool'],
    expected: [[[1n, 2n]], true],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['uint[2][1]', 'bool'],
    expected: [[[1n, 2n]], true],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '0000000000000000000000000000000000000000000000000000000000000001',
  });
  test({
    types: ['tuple(address,address)', 'tuple(string,string)', 'bool'],
    expected: [[address3, address3], ['hello', 'world'], false],
    values:
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '68656c6c6f000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '776f726c64000000000000000000000000000000000000000000000000000000',
  });

  test({
    types: ['string', 'tuple(uint256,string)', 'bool', 'tuple(bytes32,bytes)'],
    expected: [
      'the string',
      [56n, 'some string'],
      true,
      ['0x1234567890123456789012345678901234567890123456789012345678901234', '0x129581'],
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '00000000000000000000000000000000000000000000000000000000000000c0' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000140' +
      '000000000000000000000000000000000000000000000000000000000000000a' +
      '74686520737472696e6700000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000038' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '000000000000000000000000000000000000000000000000000000000000000b' +
      '736f6d6520737472696e67000000000000000000000000000000000000000000' +
      '1234567890123456789012345678901234567890123456789012345678901234' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000003' +
      '1295810000000000000000000000000000000000000000000000000000000000',
  });
  test({
    types: [
      'bool',
      'tuple(bool,tuple(bool,tuple(bool,bool)))',
      'tuple(uint256,tuple(uint256,uint256,tuple(uint256,string)))',
      'string',
    ],
    expected: [true, [false, [true, [false, true]]], [256n, [76n, 67n, [1337n, 'hello']]], 'last param'],
    values:
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000200' +
      '0000000000000000000000000000000000000000000000000000000000000100' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '000000000000000000000000000000000000000000000000000000000000004c' +
      '0000000000000000000000000000000000000000000000000000000000000043' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000539' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '68656c6c6f000000000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000000a' +
      '6c61737420706172616d00000000000000000000000000000000000000000000',
  });

  test({
    types: ['string', 'tuple(string,string,tuple(string,string))', 'bytes', 'tuple(bytes,tuple(bytes,string))'],
    expected: [
      'hello world',
      ['what', 'is', ['even', 'happening']],
      '0x696e',
      ['0x74686973', ['0x676f64666f7273616b656e', 'test']],
    ],
    values:
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '00000000000000000000000000000000000000000000000000000000000000c0' +
      '0000000000000000000000000000000000000000000000000000000000000260' +
      '00000000000000000000000000000000000000000000000000000000000002a0' +
      '000000000000000000000000000000000000000000000000000000000000000b' +
      '68656c6c6f20776f726c64000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '7768617400000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '6973000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '6576656e00000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '68617070656e696e670000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '696e000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '7468697300000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '000000000000000000000000000000000000000000000000000000000000000b' +
      '676f64666f7273616b656e000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '7465737400000000000000000000000000000000000000000000000000000000',
  });
  test({
    types: [
      'string',
      'bool',
      'tuple(string,tuple(tuple(bool,string,bool),tuple(string,bytes32,bytes)))',
      'bytes',
      'tuple(bool,tuple(bytes32,address),bytes)',
    ],
    expected: [
      'this',
      true,
      [
        'is',
        [
          [true, 'utter', true],
          [
            'madness',
            '0x1234567890123456789012345678901234567890123456789012345678901234',
            '0x6275742049206c6f7665206974',
          ],
        ],
      ],
      '0x6265636175736520697420776f726b73',
      [
        true,
        [
          '0x1234567890123456789012345678901234567890123456789012345678901234',
          EthAddress.fromString('0x1337133713371337133713371337133713371337'),
        ],
        '0x6265636175736520697420776f726b736265636175736520697420776f726b73',
      ],
    ],
    values:
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000320' +
      '0000000000000000000000000000000000000000000000000000000000000360' +
      '0000000000000000000000000000000000000000000000000000000000000004' +
      '7468697300000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000002' +
      '6973000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000040' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '7574746572000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '1234567890123456789012345678901234567890123456789012345678901234' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      '6d61646e65737300000000000000000000000000000000000000000000000000' +
      '000000000000000000000000000000000000000000000000000000000000000d' +
      '6275742049206c6f766520697400000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000010' +
      '6265636175736520697420776f726b7300000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '1234567890123456789012345678901234567890123456789012345678901234' +
      '0000000000000000000000001337133713371337133713371337133713371337' +
      '0000000000000000000000000000000000000000000000000000000000000080' +
      '0000000000000000000000000000000000000000000000000000000000000020' +
      '6265636175736520697420776f726b736265636175736520697420776f726b73',
  });
  test({
    types: [
      'tuple(string,tuple(bool,bool))',
      'address',
      'bytes',
      'tuple(bytes,bytes,string,bool,address)',
      'int256',
      'tuple(int256,uint256,tuple(string,int256,address))',
    ],
    expected: [
      ['this is more reasonable', [true, false]],
      EthAddress.fromString('0x1b3F5FE0Fd513E6cbdEE459F0b0e19095FE91958'),
      '0x6c6f6c6f6c6f6c6f6c',
      [
        '0xabcdef12345678',
        '0x87654321fedcba',
        'bazbar',
        false,
        EthAddress.fromString('0xd13b6e9058E58B8677233CEc2315e1D9e77C79C4'),
      ],
      -6n,
      [-7n, 5n, ['foobar', -8n, EthAddress.fromString('0xB1eeF147028E9f480DbC5ccaA3277D417D1b85F0')]],
    ],
    values:
      '00000000000000000000000000000000000000000000000000000000000000c0' +
      '0000000000000000000000001b3f5fe0fd513e6cbdee459f0b0e19095fe91958' +
      '0000000000000000000000000000000000000000000000000000000000000160' +
      '00000000000000000000000000000000000000000000000000000000000001a0' +
      'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa' +
      '0000000000000000000000000000000000000000000000000000000000000300' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000017' +
      '74686973206973206d6f726520726561736f6e61626c65000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000009' +
      '6c6f6c6f6c6f6c6f6c0000000000000000000000000000000000000000000000' +
      '00000000000000000000000000000000000000000000000000000000000000a0' +
      '00000000000000000000000000000000000000000000000000000000000000e0' +
      '0000000000000000000000000000000000000000000000000000000000000120' +
      '0000000000000000000000000000000000000000000000000000000000000000' +
      '000000000000000000000000d13b6e9058e58b8677233cec2315e1d9e77c79c4' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      'abcdef1234567800000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000007' +
      '87654321fedcba00000000000000000000000000000000000000000000000000' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '62617a6261720000000000000000000000000000000000000000000000000000' +
      'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9' +
      '0000000000000000000000000000000000000000000000000000000000000005' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      'fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8' +
      '000000000000000000000000b1eef147028e9f480dbc5ccaa3277d417d1b85f0' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '666f6f6261720000000000000000000000000000000000000000000000000000',
  });
  test({
    types: [
      'tuple(bytes32,bool,bytes32)',
      'address',
      'tuple(bytes32,bytes32,string)',
      'tuple(tuple(address,bool),tuple(address,bytes32),tuple(int256,uint256))',
    ],
    expected: [
      [
        '0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae',
        true,
        '0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae',
      ],
      address3,
      [
        '0x0ab3e6dfa1594c15af0000000000000000000000000000000000000000000000',
        '0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae',
        'string',
      ],
      [
        [address3, true],
        [address3, '0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae'],
        [-6124612n, 89000n],
      ],
    ],
    values:
      'ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      'ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000000000000000000000000000000000000000000160' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      '0000000000000000000000000000000000000000000000000000000000000001' +
      '0000000000000000000000001234567890123456789012345678901234567890' +
      'ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae' +
      'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa28bbc' +
      '0000000000000000000000000000000000000000000000000000000000015ba8' +
      '0ab3e6dfa1594c15af0000000000000000000000000000000000000000000000' +
      'ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae' +
      '0000000000000000000000000000000000000000000000000000000000000060' +
      '0000000000000000000000000000000000000000000000000000000000000006' +
      '737472696e670000000000000000000000000000000000000000000000000000',
  });
});
