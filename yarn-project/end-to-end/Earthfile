
VERSION 0.8

# requires first saving the images locally with ../+build-end-to-end

# run lcoally, used for our mainly x86 jobs
E2E_TEST_FROM_DOCKERHUB:
  FUNCTION
  ARG test
  ARG compose_file=./scripts/docker-compose.yml
  ARG enable_gas=""
  LOCALLY
  ENV ENABLE_GAS=$enable_gas
  ENV TEST=$test.test.ts
  # Locally, we do not use WITH DOCKER as we have had issues with earthly copying big images
  RUN docker compose -f $compose_file up --exit-code-from=end-to-end --force-recreate

# run on satellite, used for our few ARM jobs (means github runner doesn't need to be ARM)
E2E_TEST_FROM_BUILD:
  FUNCTION
  ARG test
  ARG compose_file=./scripts/docker-compose.yml
  ARG enable_gas=""
  FROM earthly/dind:alpine-3.19-docker-25.0.2-r0
  ENV ENABLE_GAS=$enable_gas
  ENV TEST=$test.test.ts
  COPY $compose_file $compose_file
  # For ARM, we do use WITH DOCKER as we don't have many e2e tests, but note E2E_TEST_FROM_DOCKERHUB
  WITH DOCKER \
    --load aztecprotocol/aztec:latest=../+aztec \
    --load aztecprotocol/end-to-end:latest=../+end-to-end-minimal \
    --load ghcr.io/foundry-rs/foundry:nightly-de33b6af53005037b463318d2628b5cfcaf39916=../../foundry/+get
      # Run our docker compose, ending whenever sandbox ends, filtering out noisy eth_getLogs
      RUN docker compose -f $compose_file up --exit-code-from=sandbox --force-recreate
  END

E2E_TEST:
  FUNCTION
  ARG test
  ARG compose_file=./scripts/docker-compose.yml
  ARG enable_gas=""
  ARG e2e_build=false
  LOCALLY
  IF [ $e2e_build = true ]
    DO +E2E_TEST_FROM_BUILD --test=$test --compose_file=$compose_file --enable_gas=$enable_gas
  ELSE
    DO +E2E_TEST_FROM_DOCKERHUB --test=$test --compose_file=$compose_file --enable_gas=$enable_gas
  END

# we could use a parameterized target, but these just print cleaner in earthly log
e2e-block-building:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_block_building --e2e_build=$e2e_build

e2e-nested-contract:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_nested_contract --e2e_build=$e2e_build

e2e-static-calls:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_static_calls --e2e_build=$e2e_build

e2e-state-vars:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_state_vars --e2e_build=$e2e_build

e2e-delegate-calls:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_delegate_calls --e2e_build=$e2e_build

e2e-non-contract-account:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_non_contract_account --e2e_build=$e2e_build

e2e-cross-chain-messaging:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_cross_chain_messaging --e2e_build=$e2e_build

e2e-crowdfunding-and-claim:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_crowdfunding_and_claim --e2e_build=$e2e_build

e2e-public-cross-chain-messaging:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_public_cross_chain_messaging --e2e_build=$e2e_build

e2e-public-to-private-messaging:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_public_to_private_messaging --e2e_build=$e2e_build

e2e-account-contracts:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_account_contracts --e2e_build=$e2e_build

e2e-escrow-contract:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_escrow_contract --e2e_build=$e2e_build

e2e-inclusion-proofs-contract:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_inclusion_proofs_contract --e2e_build=$e2e_build

e2e-pending-note-hashes-contract:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_pending_note_hashes_contract --e2e_build=$e2e_build

e2e-ordering:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_ordering --e2e_build=$e2e_build

uniswap-trade-on-l1-from-l2:
  ARG e2e_build=false
  DO +E2E_TEST --test=uniswap_trade_on_l1_from_l2 --e2e_build=$e2e_build

integration-l1-publisher:
  ARG e2e_build=false
  DO +E2E_TEST --test=integration_l1_publisher --e2e_build=$e2e_build

e2e-cli:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_cli --e2e_build=$e2e_build

e2e-persistence:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_persistence --compose_file=./scripts/docker-compose-no-sandbox.yml --e2e_build=$e2e_build

e2e-browser:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_aztec_js_browser --e2e_build=$e2e_build

e2e-card-game:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_card_game --e2e_build=$e2e_build

e2e-avm-simulator:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_avm_simulator --e2e_build=$e2e_build

e2e-fees:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_fees --enable_gas=1 --e2e_build=$e2e_build

e2e-dapp-subscription:
  ARG e2e_build=false
  DO +E2E_TEST --test=e2e_dapp_subscription --enable_gas=1 --e2e_build=$e2e_build

pxe:
  ARG e2e_build=false
  DO +E2E_TEST --test=pxe --e2e_build=$e2e_build

cli-docs-sandbox:
  ARG e2e_build=false
  DO +E2E_TEST --test=cli_docs_sandbox --e2e_build=$e2e_build

e2e-docs-examples:
  ARG e2e_build=false
  DO +E2E_TEST --test=docs_examples --e2e_build=$e2e_build

# all:
#   for stability, instead of an 'all' target in Earthly, use `make all`
