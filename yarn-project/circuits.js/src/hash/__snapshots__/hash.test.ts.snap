// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hash Computes an empty nullifier hash  1`] = `"0x066e6cdc4a6ba5e4781deda650b0be6c12f975f064fc38df72c1060716759b17"`;

exports[`hash Computes an empty sideeffect hash  1`] = `"0x27b1d0839a5b23baf12a8d195b18ac288fcf401afb2f70b8a4b529ede5fa9fed"`;

exports[`hash Var args hash matches noir 1`] = `
Fr {
  "asBigInt": 1557627899280963684159398665725097926236612957540256425197580046184563077271n,
  "asBuffer": {
    "data": [
      3,
      113,
      150,
      13,
      216,
      78,
      211,
      68,
      90,
      176,
      153,
      172,
      76,
      26,
      245,
      186,
      144,
      224,
      199,
      19,
      181,
      147,
      224,
      202,
      82,
      238,
      83,
      32,
      135,
      199,
      240,
      151,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash compute secret message hash 1`] = `
Fr {
  "asBigInt": 6220068662483113241527007349428551778669520744131373768997518428761948042030n,
  "asBuffer": {
    "data": [
      13,
      192,
      111,
      33,
      103,
      226,
      205,
      25,
      173,
      247,
      56,
      209,
      243,
      132,
      105,
      215,
      248,
      191,
      241,
      226,
      107,
      2,
      152,
      22,
      232,
      35,
      11,
      205,
      106,
      182,
      51,
      46,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes commitment nonce 1`] = `
Fr {
  "asBigInt": 7653394882992289714855533169019502055399179742531912347686813547951736946253n,
  "asBuffer": {
    "data": [
      16,
      235,
      171,
      1,
      188,
      129,
      50,
      99,
      239,
      146,
      237,
      113,
      185,
      199,
      129,
      173,
      62,
      245,
      128,
      25,
      182,
      106,
      143,
      113,
      48,
      77,
      47,
      114,
      215,
      222,
      254,
      77,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes function tree root 1`] = `
Fr {
  "asBigInt": 18902231782334398705464257251364974449663398212058621439366133672872128659209n,
  "asBuffer": {
    "data": [
      41,
      202,
      72,
      183,
      227,
      53,
      212,
      51,
      133,
      173,
      223,
      25,
      183,
      14,
      155,
      5,
      105,
      58,
      143,
      86,
      204,
      9,
      239,
      140,
      187,
      195,
      116,
      164,
      13,
      173,
      191,
      9,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes public data tree leaf slot 1`] = `
Fr {
  "asBigInt": 9076808949980998475110411569159266589807853958487763065147292518713994520820n,
  "asBuffer": {
    "data": [
      20,
      17,
      74,
      179,
      219,
      221,
      10,
      28,
      204,
      92,
      79,
      230,
      141,
      213,
      118,
      243,
      198,
      205,
      121,
      112,
      135,
      112,
      224,
      106,
      180,
      8,
      99,
      152,
      205,
      216,
      40,
      244,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes public data tree value 1`] = `
Fr {
  "asBigInt": 3n,
  "asBuffer": {
    "data": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      3,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes siloed commitment 1`] = `
Fr {
  "asBigInt": 7262347077404413274044670947879391583109741657896097604752287127491776887739n,
  "asBuffer": {
    "data": [
      16,
      14,
      87,
      192,
      122,
      182,
      219,
      134,
      244,
      174,
      67,
      245,
      167,
      212,
      53,
      92,
      87,
      197,
      161,
      226,
      82,
      55,
      70,
      224,
      251,
      22,
      172,
      41,
      240,
      220,
      59,
      187,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes siloed nullifier 1`] = `
Fr {
  "asBigInt": 10521714890263159342521589827909786073566333899903358017581007142888032736115n,
  "asBuffer": {
    "data": [
      23,
      67,
      20,
      95,
      222,
      16,
      62,
      170,
      136,
      175,
      87,
      110,
      5,
      98,
      230,
      29,
      133,
      235,
      165,
      144,
      253,
      223,
      1,
      209,
      149,
      80,
      228,
      240,
      36,
      112,
      147,
      115,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash computes unique commitment 1`] = `
Fr {
  "asBigInt": 13000121189816960667906065043973697710794195579570622293955220571859166513128n,
  "asBuffer": {
    "data": [
      28,
      189,
      206,
      206,
      196,
      254,
      146,
      246,
      99,
      142,
      182,
      168,
      218,
      222,
      150,
      202,
      53,
      142,
      203,
      164,
      149,
      76,
      245,
      151,
      195,
      99,
      25,
      159,
      174,
      61,
      71,
      232,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash hashes VK 1`] = `
{
  "data": [
    4,
    129,
    16,
    102,
    127,
    128,
    176,
    47,
    119,
    183,
    215,
    68,
    151,
    102,
    87,
    206,
    169,
    167,
    197,
    241,
    221,
    35,
    64,
    234,
    28,
    87,
    154,
    126,
    191,
    213,
    78,
    85,
  ],
  "type": "Buffer",
}
`;

exports[`hash hashes constructor info 1`] = `
Fr {
  "asBigInt": 8554563246648466207128694080427818093826588702256491720155365584899927973422n,
  "asBuffer": {
    "data": [
      18,
      233,
      182,
      18,
      27,
      239,
      249,
      139,
      157,
      45,
      92,
      189,
      121,
      152,
      157,
      73,
      211,
      211,
      253,
      135,
      52,
      199,
      134,
      233,
      242,
      74,
      6,
      239,
      86,
      0,
      30,
      46,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash hashes empty function args 1`] = `
Fr {
  "asBigInt": 0n,
  "asBuffer": {
    "data": [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash hashes function args 1`] = `
Fr {
  "asBigInt": 13773950327711008256617416059663646210697922258755635023101062905870427579114n,
  "asBuffer": {
    "data": [
      30,
      115,
      199,
      148,
      191,
      130,
      160,
      100,
      98,
      205,
      48,
      10,
      124,
      139,
      218,
      39,
      47,
      30,
      253,
      79,
      200,
      107,
      56,
      53,
      41,
      130,
      26,
      237,
      106,
      243,
      98,
      234,
    ],
    "type": "Buffer",
  },
}
`;

exports[`hash hashes many function args 1`] = `
Fr {
  "asBigInt": 5019561503322397537490243039227402098195702132635946562396386724242519444026n,
  "asBuffer": {
    "data": [
      11,
      24,
      248,
      156,
      4,
      206,
      67,
      253,
      74,
      84,
      242,
      151,
      150,
      30,
      97,
      225,
      13,
      209,
      17,
      48,
      60,
      254,
      13,
      43,
      30,
      121,
      227,
      133,
      97,
      87,
      74,
      58,
    ],
    "type": "Buffer",
  },
}
`;
