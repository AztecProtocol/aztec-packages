// See aztec3/constants.hpp
// Copied here for prototyping purposes
// In future: structured serialization?
export const ARGS_LENGTH = 16; // MAX_ARGS in Noir
export const RETURN_VALUES_LENGTH = 4;
export const READ_REQUESTS_LENGTH = 4;

// "PER CALL" CONSTANTS
export const MAX_NEW_COMMITMENTS_PER_CALL = 4;
export const MAX_NEW_NULLIFIERS_PER_CALL = 4;
export const MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL = 4;
export const MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL = 4;
export const MAX_NEW_L2_TO_L1_MSGS_PER_CALL = 2;
export const MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL = 4;
export const MAX_PUBLIC_DATA_READS_PER_CALL = 4;

// "PER TRANSACTION" CONSTANTS
export const MAX_NEW_COMMITMENTS_PER_TX = 16; // MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL * MAX_NEW_COMMITMENTS_PER_CALL
export const MAX_NEW_NULLIFIERS_PER_TX = 16; // MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL * MAX_NEW_NULLIFIERS_PER_CALL
export const MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX = 8;
export const MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX = 8;
export const MAX_NEW_L2_TO_L1_MSGS_PER_TX = 2;
export const MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX = 4;
export const MAX_PUBLIC_DATA_READS_PER_TX = 4;
export const MAX_NEW_CONTRACTS_PER_TX = 1;
export const MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX = 4;

// ROLLUP CONSTANTS
export const NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP = 16;

// TREES RELATED CONSTANTS
export const VK_TREE_HEIGHT = 3;
export const FUNCTION_TREE_HEIGHT = 4;
export const CONTRACT_TREE_HEIGHT = 16;
export const PRIVATE_DATA_TREE_HEIGHT = 32;
export const PUBLIC_DATA_TREE_HEIGHT = 254;
export const NULLIFIER_TREE_HEIGHT = 16;
export const L1_TO_L2_MSG_TREE_HEIGHT = 16;
export const PRIVATE_DATA_TREE_ROOTS_TREE_HEIGHT = 16;
export const CONTRACT_TREE_ROOTS_TREE_HEIGHT = 16;
export const L1_TO_L2_MSG_ROOTS_TREE_HEIGHT = 16;
export const ROLLUP_VK_TREE_HEIGHT = 8; // TODO: update

// SUB-TREES RELATED CONSTANTS
export const L1_TO_L2_MSG_SUBTREE_HEIGHT = Math.ceil(Math.log2(NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP));
export const L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH = L1_TO_L2_MSG_TREE_HEIGHT - L1_TO_L2_MSG_SUBTREE_HEIGHT;

// MISC CONSTANTS
export const FUNCTION_SELECTOR_NUM_BYTES = 4;
export const MAPPING_SLOT_PEDERSEN_SEPARATOR = 4;
// sha256 hash is stored in two fields to accommodate all 256-bits of the hash
export const NUM_FIELDS_PER_SHA256 = 2;
