#!/bin/bash
# This script is used to run an e2e type test in CI (see .circleci/config.yml).
# It pulls images and runs docker-compose, which has the test as the entrypoint.
[ -n "${BUILD_SYSTEM_DEBUG:-}" ] && set -x # conditionally trace
set -eu

CURRENT_DIR=`dirname $0`
BOX_NAME=${1:-boxes-blank}

cd $CURRENT_DIR/$BOX_NAME

export COMPOSE_FILE=${2:-docker-compose.yml}

ecr_login

SANDBOX=aztec-sandbox
YARN_PROJECT=yarn-project

SANDBOX_IMAGE_URI=$(calculate_image_uri $SANDBOX)
YP_IMAGE_URI=$(calculate_image_uri $YARN_PROJECT)

ensure_repo $SANDBOX $ECR_REGION refresh_lifecycle
CONTENT_HASH=$(calculate_content_hash $SANDBOX)
BASE_TAG=cache-$CONTENT_HASH-$BOX_NAME # Append the box name to seperate the tag
SUCCESS_TAG=$BASE_TAG

echo "Content hash: $CONTENT_HASH"
if check_rebuild $SUCCESS_TAG $SANDBOX; then
  echo "No rebuild required."
  retry tag_remote_image $SANDBOX $BASE_TAG $SUCCESS_TAG
  exit 0
fi


echo "pulling docker image for $SANDBOX $SANDBOX_IMAGE_URI-x86_64"
retry docker pull $SANDBOX_IMAGE_URI-x86_64
retry docker tag $SANDBOX_IMAGE_URI-x86_64 aztecprotocol/$SANDBOX:latest

echo "pulling docker image for $YARN_PROJECT $YP_IMAGE_URI"
retry docker pull $YP_IMAGE_URI
retry docker tag $YP_IMAGE_URI aztecprotocol/$YARN_PROJECT:latest

docker-compose rm -f
docker-compose -f $COMPOSE_FILE up --exit-code-from boxes-$BOX_NAME



# Success - push a new tag for the commit hash.
IMAGE_COMMIT_URI=$SANDBOX_IMAGE_URI-$BOX_NAME
retry docker tag $SANDBOX_IMAGE_URI-x86_64 $IMAGE_COMMIT_URI
retry docker push $IMAGE_COMMIT_URI > /dev/null 2>&1