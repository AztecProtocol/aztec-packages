/* Autogenerated file, do not edit! */
  
use dep::std;
use dep::aztec::context::{ PrivateContext, PublicContext };
use dep::aztec::constants_gen::RETURN_VALUES_LENGTH;



// Interface for calling Test functions from a private context
struct TestPrivateContextInterface {
  address: Field,
}

impl TestPrivateContextInterface {
  fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
  fn getPublicKey(
    self,
    context: &mut PrivateContext,
    address: Field
  ) -> [Field; RETURN_VALUES_LENGTH] {
    let mut serialised_args = [0; 1];
    serialised_args[0] = address;

    context.call_private_function(self.address, 0x88f0753b, serialised_args)
  }
  
}
  
  


// Interface for calling Test functions from a public context
struct TestPublicContextInterface {
  address: Field,
}

impl TestPublicContextInterface {
  fn at(address: Field) -> Self {
      Self {
          address,
      }
  }
  
}
  
  
