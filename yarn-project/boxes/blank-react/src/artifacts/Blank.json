{
  "name": "Blank",
  "functions": [
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [],
      "bytecode": "H4sIAAAAAAAA/+XdVXNbVxSGYduJ7TLXYWZqJUuypGKaMqeYchM1crlNMeWmaRtmZmZOfmHWO5FnPLnNvtnznplvbN149FjS0YG117rS1tZ2sO3a1h7piHS2fh943HXd4+7W74O3gcdzWz9Lhb5yuVntbRZLxUWF3nqjVimUK42+WrFWrNQqi3trpVKzVq5V6416tVAvlkvNYn+lXuovXNuGDfpbhRvcBj/PjuueZ+HGtmJ7QvPwTMwdCc0jMjEPSWgemYl5aELzqEzMnQnNozMxdyU0j8nE3J3QPDYT87CE5nFC83iheYLQPFFoniQ0TxaapwjNU4XmaULzdKF5htA8U2ieJTTPFprnCM0PCM0PCs0FobkoNPcKzSWhuSw0V4TmPqG5KjTXhOa60PyQ0Pyw0PyI0Pyo0PyY0Py40DxXaH5CaJ4nND8pND8lND8tND8jND8rND8nND8vNL8gNL8oNL8kNL8sNL8iNL8qNM8Xml8Tml8Xmt8Qmt8Umt8Smt8WmhcIze8Ize8Kze8Jze8LzR8IzR8KzR8JzR8LzQuF5kVCc0No/kRoXiw0N4XmfqH5U6H5M6H5c6H5C6H5S6H5K6H5a6H5G6H5W6F5idD8ndD8vdD8g9D8o9D8k9D8s9C8VGj+RWj+VWj+TWj+XWj+Q2j+U2j+S2j+W2heJjT/IzQvF5r/FZr/E5r/F5pXCM0rheZVQvNqoXmN0LxWaF4nNK8XmjcIzRuF5k1C82aheYvQvFVo3iY0bxeadwjNO4XmXULzbqF5j9C8V2jeJzTvF5oPCM0HheZDQvNhofmI0Hw0E/NNCc3HMjHfnNB8PBPzLQnNJzIx35rQfDIT820JzacyMd+e0Hw6E/MdCc1nMjHfmdB8NhPzXQnN5zIx353QfD4T8z0JzRcyMd+b0HwxE/N9Cc2XMjHfn9B8ORNzT0LzlYTmntbfaW+Zh0SGRjojXZHuCOeEnCNxzsAxNMeUHGNxzMF3MN9J7KPZZ/EZ5j3Na9wz6P+5t/VzeGREZGRkVGR0ZExkbGRcZHxkQmRiZFJkcmRKZGpkWmR6ZEZkZmRWZHZkToQZ98x850VkJjgzspkZzQxlZgozY7caYQYrM0mZ0cnMSmY4MtOQGX8DM++YiTYvwswsZkgxU4kZQ8zcYQYNM1mYUcLMDmZYMNOBGQf0/J8foSc8PdLpGU4PbXpK02N5QYQevPSkpUcrPUvp4UlPS3o80vNwYYSeeI0IPdPoIUZPLXpM0XOJHkT05KFHDT1b6GFCTw96XNDzYUmEngCskWfNOGuoWVPMGtulEdZgsiaRNXqsWWMNF2uaWOPDmpdlEdZELI9QM08NOTXV1BhTc0sNKjWZ1ChSs0cNGzVd1DhR80MNDDUh1EhQM8A9dO4pc4+Ve47cg+OeFPdoeE9wDZ9r2lzj5ZrnoQjXxLhGxDUTriFwTs05JudcnINwTM4xKsdsHMPwnc53HPt89oHsE/iMDGxXAR3DARWElwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "getPublicKey",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "eJyrVsrJT04syczPK1ayqq6tBQAz9wY7",
      "eJy9kkEKgzAQRe8ya5EkMxMTr1K6kNaCIFqqO8nda4uJRYPFCl0Z4c3Py08GqNtL0Vdt00E+AEJ+GqC7F83rr+uLRw+5SKBsruPXJXCr6hJy6ZIVJRHZTuS4NjLQSDGclCCPk9LfcNQq0IJm2LhzAvRH7ZEJImjNEW2OaSvrxVHipjqFAol1IPkdrY9Fs5ETqZE/oyNHDKEqs/MBeXcb2TFlTdorZ7xoA9NouBQcnqCwq0f1yxCn8eaNl0NcXhXH99keMftH7N4Rvb8A556tK0JN"
    ],
    "fileMap": {
      "38": {
        "source": "use dep::std::hash::{pedersen_with_separator, sha256};\nuse crate::constants_gen::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n  let sha256_hashed = sha256(bytes_to_hash);\n\n  // Convert it to a field element\n  let mut v = 1;\n  let mut high = 0 as Field;\n  let mut low = 0 as Field;\n\n  for i in 0..16 {\n      high = high + (sha256_hashed[15 - i] as Field) * v;\n      low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n      v = v * 256;\n  }\n\n  // Abuse that a % p + b % p = (a + b) % p and that low < p\n  let hash_in_a_field = low + high * v;\n\n  hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n  // TODO(#1205) This is probably not the right index to use\n  pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\n#[oracle(pedersenHash)]\nfn pedersen_hash_oracle<N>(_inputs: [Field; N], _hash_index: u32) -> Field {}\n\nunconstrained fn pedersen_hash_internal<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_oracle(inputs, hash_index)\n}\n\n// TODO(Kev): We can move this into the noir std-lib \n// as an acir opcode, once we have the pedersen PR merged.\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n  // Temporary hack. This is not right. Kev forced me to do this. Blame him.\n  pedersen_hash_internal(inputs, hash_index)\n  // let input_size = inputs.len();\n  // let mut modified_inputs = [];\n  // modified_inputs = modified_inputs.push_back(input_size as Field);\n  // for i in 0..N {\n  //   modified_inputs = modified_inputs.push_back(inputs[i]);\n  // }\n  // pedersen_with_separator(modified_inputs, hash_index)[0]\n}",
        "path": "/mnt/user-data/kev/aztec-packages/yarn-project/aztec-nr/aztec/src/hash"
      },
      "58": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n  get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n  let result = get_public_key_and_partial_address_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/mnt/user-data/kev/aztec-packages/yarn-project/aztec-nr/aztec/src/oracle/get_public_key"
      }
    }
  }
}